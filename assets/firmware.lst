0001   0000             ;
0002   0000             ; MicroBeast Firmware - boot MicroBeast and launch embedded monitor, bios and other systems
0003   0000             ;
0004   0000             ;
0005   0000             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0006   0000             ;
0007   0000             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0008   0000             ;
0009   0000             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0010   0000             ; of this software and associated documentation files (the "Software"), to deal
0011   0000             ; in the Software without restriction, including without limitation the rights
0012   0000             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0013   0000             ; copies of the Software, and to permit persons to whom the Software is
0014   0000             ; furnished to do so, subject to the following conditions:
0015   0000             ; 
0016   0000             ; The above copyright notice and this permission notice shall be included in all
0017   0000             ; copies or substantial portions of the Software.
0018   0000             ; 
0019   0000             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0020   0000             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0021   0000             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0022   0000             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0023   0000             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0024   0000             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0025   0000             ; SOFTWARE.
0026   0000             ;
0027   0000                                 .MODULE  main
0028   0000                                 .INCLUDE "ports.asm"
0001+  0000             ;
0002+  0000             ; Port definintions
0003+  0000             ;
0004+  0000             ;
0005+  0000             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0006+  0000             ;
0007+  0000             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0008+  0000             ;
0009+  0000             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0010+  0000             ; of this software and associated documentation files (the "Software"), to deal
0011+  0000             ; in the Software without restriction, including without limitation the rights
0012+  0000             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0013+  0000             ; copies of the Software, and to permit persons to whom the Software is
0014+  0000             ; furnished to do so, subject to the following conditions:
0015+  0000             ; 
0016+  0000             ; The above copyright notice and this permission notice shall be included in all
0017+  0000             ; copies or substantial portions of the Software.
0018+  0000             ; 
0019+  0000             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0020+  0000             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0021+  0000             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0022+  0000             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0023+  0000             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0024+  0000             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0025+  0000             ; SOFTWARE.
0026+  0000             ;
0027+  0000             
0028+  0000             BACKSPACE_CHAR      .EQU  08h
0029+  0000             CARRIAGE_RETURN     .EQU  0Dh
0030+  0000             NEWLINE             .EQU  0Ah
0031+  0000             ESCAPE_CHAR         .EQU  1Bh
0032+  0000             CPM_NUM             .EQU  1Fh
0033+  0000             
0034+  0000             ;=================================== UART ============================================
0035+  0000             UART_TX_RX          .EQU    020h    ; Read: receiver buffer, Write: transmitter buffer
0036+  0000             UART_INT_ENABLE     .EQU    021h    ; Interrupt enable register
0037+  0000             UART_INT_ID         .EQU    022h    ; Read: Interrupt identification register
0038+  0000             UART_FIFO_CTRL      .EQU    022h    ; Write: FIFO Control register
0039+  0000             UART_LINE_CTRL      .EQU    023h    ; Line control register
0040+  0000             UART_MODEM_CTRL     .EQU    024h    ; Modem control
0041+  0000             UART_LINE_STATUS    .EQU    025h    ; Line status
0042+  0000             UART_MODEM_STATUS   .EQU    026h    ; Modem status
0043+  0000             UART_SCRATCH        .EQU    027h    ; Scratch register
0044+  0000             
0045+  0000             ;==================================== PIO ============================================
0046+  0000             PIO_A_DATA          .EQU  010h
0047+  0000             PIO_A_CTRL          .EQU  012h
0048+  0000             
0049+  0000             PIO_B_DATA          .EQU  011h
0050+  0000             PIO_B_CTRL          .EQU  013h
0051+  0000             
0052+  0000             PIO_MODE_0          .EQU  00Fh      ; Mode 0: All outputs
0053+  0000             PIO_MODE_1          .EQU  04fh      ; Mode 1: All inputs
0054+  0000             PIO_MODE_2          .EQU  080h      ; Mode 2 (Port A only): Bi-directional
0055+  0000             PIO_MODE_3          .EQU  0CFh      ; Mode 3: Per-pin I/O on the given port - write an additional word with bits set (1) for input, reset (0) for output on the matching pin.
0056+  0000             
0057+  0000             PIO_SET_INTERRUPT   .EQU  007h      ; Set interrupt control world. By itself, this wil disable interrupts on the given port. OR with the following constants to change this
0058+  0000             PIO_ENABLE_INT      .EQU  080h      ; Enable interrupts on the given port, when OR'd with the PIO_SET_INTERRUPT control word.
0059+  0000             PIO_INT_MASK        .EQU  010h      ; When OR'd with the PIO_SET_INTERRUPT control word, the following word will enable interrupts for pins where the matching bit is zero
0060+  0000             
0061+  0000             ;================================== AUDIO ============================================
0062+  0000             ; Constants for Audio output
0063+  0000             AUDIO_PIO           .EQU  1         ; Audio on PIO (rev. 0.1 boards)
0064+  0000             AUDIO_UART          .EQU  2         ; Audio on UART (rev. 0.2 boards)
0065+  0000             
0066+  0000             AUDIO_VERSION       .EQU  AUDIO_UART
0067+  0000             
0068+  0000~            #IF AUDIO_VERSION = AUDIO_PIO
0069+  0000~            PORT_B_IOMASK       .EQU  0EFh      ; All inputs, apart from bit 4 (audio out)
0070+  0000~            AUDIO_MASK          .EQU  010h      ; Bitmask for audio output on Port B. The bit is set for the output pin.
0071+  0000~            AUDIO_PORT          .EQU  PIO_B_DATA
0072+  0000~            
0073+  0000             #ELSE
0074+  0000             PORT_B_IOMASK       .EQU  0FFh      ; All inputs
0075+  0000             AUDIO_MASK          .EQU  008h      ; Bitmask for audio output on UART Out 2. The bit is set for the output pin
0076+  0000             AUDIO_PORT          .EQU  UART_MODEM_CTRL
0077+  0000             
0078+  0000             #ENDIF
0079+  0000             
0080+  0000             
0081+  0000             ;=================================== MEMORY PAGING ===================================
0082+  0000             IO_MEM_0            .EQU    070h      ; Page 0: 0000h - 3fffh
0083+  0000             IO_MEM_1            .EQU    071h      ; Page 1: 4000h - 7fffh
0084+  0000             IO_MEM_2            .EQU    072h      ; Page 2: 8000h - bfffh
0085+  0000             IO_MEM_3            .EQU    073h      ; Page 3: c000h - ffffh
0086+  0000             
0087+  0000             IO_MEM_CTRL         .EQU    074h      ; Paging enable register
0088+  0000             IO_MEM_ENABLE       .EQU    1
0089+  0000             IO_MEM_DISABLE      .EQU    0 
0090+  0000             
0091+  0000             RAM_PAGE_0          .EQU    020h
0092+  0000             RAM_PAGE_1          .EQU    021h
0093+  0000             RAM_PAGE_2          .EQU    022h
0094+  0000             RAM_PAGE_3          .EQU    023h
0095+  0000             
0096+  0000             RAM_PAGE_16         .EQU    030h
0097+  0000             RAM_PAGE_31         .EQU    03Fh
0098+  0000             
0099+  0000             ROM_PAGE_0          .EQU    000h
0100+  0000             ROM_PAGE_16         .EQU    010h
0101+  0000             
0102+  0000             PAGE_1_START        .EQU    4000h
0103+  0000             
0104+  0000             ;====================================== I2C DEVICES ===================================
0105+  0000             I2C_DATA_BIT            .equ    7
0106+  0000             I2C_CLK_BIT             .equ    6
0107+  0000             
0108+  0000             I2C_DATA_MASK           .equ    1 << I2C_DATA_BIT
0109+  0000             I2C_CLK_MASK            .equ    1 << I2C_CLK_BIT
0110+  0000             
0111+  0000             ; Display
0112+  0000             ;==========
0113+  0000             DL_ADDRESS              .EQU    050h     ; Left  Matrix controller I2C address
0114+  0000             DR_ADDRESS              .EQU    053h     ; Right Matrix controller I2C address
0115+  0000             
0116+  0000             DISP_REG_CRWL           .EQU    0FEh     ; Command Register write lock
0117+  0000             DISP_UNLOCK             .EQU    0C5h     ; Unlock command
0118+  0000             
0119+  0000             DISP_DEFAULT_BRIGHTNESS .EQU    080h     ; Default brightness
0120+  0000             DISP_DIMMED             .EQU    018h     ; Dimmed
0121+  0000             
0122+  0000             DISPLAY_WIDTH           .EQU    24       ; 24 characters
0123+  0000             
0124+  0000             ; RTC
0125+  0000             ;==========
0126+  0000             RTC_ADDRESS             .EQU    06fh
0127+  0000             
0128+  0000             RTC_REG_SEC             .EQU    000h    ; Also has oscillator enable bit in B7, 1 = run
0129+  0000             RTC_REG_MIN             .EQU    001h
0130+  0000             RTC_REG_HOUR            .EQU    002h    ; B6: 1 = 12hr/ 0 = 24hr clock (r/w) 
0131+  0000                                                     ;        If 12 hr clock, B5: 1 = PM/ 0 = AM. B4: hour tens. Otherwise B5-4: hour tens, B3-0: hour units
0132+  0000             RTC_REG_WKDAY           .EQU    003h    ; Oscillator status bit in B5, 1 = enabled and running. 
0133+  0000                                                     ;   B4: 1 = power was lost, write 0 to clear (timestamp registers are set)
0134+  0000                                                     ;   B3: 1 = enable external battery supply (VBAT)
0135+  0000                                                     ;   B2-0: Weekday, from 1 to 7 
0136+  0000             RTC_REG_DATE            .EQU    004h    ; BCD Date (1 to 31)
0137+  0000             RTC_REG_MTH             .EQU    005h    ; B5: 1 = Leap year (read only). B4: month tens, B3-0: month units  (Month is 1 to 12)
0138+  0000             RTC_REG_YEAR            .EQU    006h    ; BCD Year
0139+  0000             
0140+  0000             RTC_REG_CTRL            .EQU    007h    ; B7: If Square wave and Alarm 0 and Alarm 1 are disabled, sets Output Pin level
0141+  0000                                                     ;   B6: SQWEN, 1 = Enable square wave on Output Pin, Alarms disabled
0142+  0000                                                     ;   B5, B4: Alarm 1, 0 Enable. 1 = Alarm is enabled
0143+  0000                                                     ;   B3: 1 = Use external oscillator
0144+  0000                                                     ;   B2: CRSTRIM, 1 = Coarse trim mode, Output pin is 64Hz
0145+  0000                                                     ;   B1-0: If SQWEN = 1 & CRSTRIM = 0, sets Output pin freq. 00 -> 1Hz, 01 -> 4.096kHz, 10 -> 8.192kHz, 11 -> 32.768kHz
0146+  0000             RTC_REG_TRIM            .EQU    008h    ; Trim, initially 0. B7: Sign, 1=Add, 0=Subtract clock cycles.  
0147+  0000                                                     ;   B6-0: Trim amount/2. Applied 1 every minute in fine trim, 128 times a second in coarse trim mode. 0 = disable trim
0148+  0000             
0149+  0000             RTC_64HZ_ENABLED        .EQU    044h    ; Value for RTC_REG_CTRL to enable 64Hz interrupt output
0150+  0000             
0151+  0000             RTC_WEEKDAY_RUNNING     .EQU    008h    ; Value for RTC_REG_WKDAY for normall running of clock0029   0000                                 .INCLUDE "shared_data.asm"
0001+  0000             ;
0002+  0000             ; Shared data - common state data for routines
0003+  0000             ;
0004+  0000             ;
0005+  0000             
0006+  0000             
0007+  0000             ; I2C/Port B routines
0008+  0000             port_b_mode         .equ    0FF00h
0009+  0000             port_b_dir          .equ    0FF01h
0010+  0000             port_b_data         .equ    0FF02h
0011+  0000             
0012+  0000             ; Boot 
0013+  0000             boot_mode           .equ    0FF03h          ; Zero = normal boot, non-zero = delete pressed
0014+  0000             temp_byte           .equ    0FF04h
0015+  0000             
0016+  0000             ; Display functions
0017+  0000             display_address     .equ    0FF05h          ; byte - address of the display driver (right or left) being written to
0018+  0000             
0019+  0000             ;
0020+  0000             ; Stuff
0021+  0000             timer               .equ    0FF06h          ; Word
0022+  0000             
0023+  0000             ; General I/O
0024+  0000             ;
0025+  0000             ; This MUST start with keyboard_state, and will all be reset to zero when io_init is called
0026+  0000             ;
0027+  0000             _key_state_size     .EQU    8               ; 8 key rollover
0028+  0000             
0029+  0000             keyboard_state      .EQU    0FF08h          ; state buffer - 8 bytes containing raw key codes for keys currently pressed
0030+  0000             keyboard_pos        .EQU    0FF10h          ; Internal state
0031+  0000             key_shift_state     .EQU    0FF12h          ; Holds state of shift and control keys in bits 0 and 1 respectively
0032+  0000             last_keycode        .EQU    0FF13h          ; The last keycode that was pressed, for repeats..
0033+  0000             key_repeat_time     .EQU    0FF14h            ; How many poll events since the key state last changed
0034+  0000             
0035+  0000             _input_buffer_size  .EQU    16
0036+  0000             input_buffer        .EQU    0FF15h          ; 16 byte input buffer. Note wraparound is handled by bitmasks, so don't change this length
0037+  0000             input_pos           .EQU    0FF25h          ; Next read position in input buffer
0038+  0000             input_free          .EQU    0FF26h          ; Next write position in input buffer
0039+  0000             input_size          .EQU    0FF27h          ; Bytes occupied in the input buffer
0040+  0000             
0041+  0000             io_data_end         .EQU    0FF28h          ; Byte after IO data block, used to reset values to zero
0042+  0000             
0043+  0000             control_key_pressed .EQU    0FF29h
0044+  0000             
0045+  0000             scratch_pad         .EQU    0FF2Ah          ; 26 byte scratch area used for composing display output (eg. rtc time display etc.)
0046+  0000             
0047+  0000             temp_data           .EQU    0FF44h          ; 8 byte general data area
0048+  0000             
0049+  0000             menu_start          .EQU    0FF4Ch          ; Start address of current menu definition
0050+  0000             menu_item_start     .EQU    0FF4Eh          ; Start address of first item in menu
0051+  0000             menu_count          .EQU    0FF50h          ; Number of items in menu
0052+  0000             menu_index          .EQU    0FF51h          ; Current menu item
0053+  0000             menu_timer          .EQU    0FF52h          ; Time since menu was displayed
0054+  0000             menu_enabled        .EQU    0FF53h          ; D0 - D7 -> Menu item 1 to 8 set enabled (1) or disabled (0) 
0055+  0000             
0056+  0000             cursor_pos          .EQU    0FF54h          ; Position of cursor for prompt
0057+  0000             
0058+  0000             ;
0059+  0000             ; Panic codes
0060+  0000             ;
0061+  0000             PANIC_0001          .EQU    0F001h
0062+  0000             PANIC_0002          .EQU    0F002h
0063+  0000             PANIC_0003          .EQU    0F003h
0064+  0000             PANIC_0004          .EQU    0F004h0030   0000             
0031   0000             
0032   0000                                 .org 0h
0033   0000 F3                              DI                              ; Disable Z80 interrupts
0034   0001 18 17                           JR      _start
0035   0003             
0036   0003 46 69 72 6D                     .DB     "Firmware 1.5 01/11/23",0,0
0036   0007 77 61 72 65 
0036   000B 20 31 2E 35 
0036   000F 20 30 31 2F 
0036   0013 31 31 2F 32 
0036   0017 33 00 00 
0037   001A             
0038   001A 31 00 00    _start              LD      SP, 0h                  ; Set SP
0039   001D             
0040   001D                                 .INCLUDE    "boot_seq.asm"
0001+  001D             ;
0002+  001D             ; Boot sequence
0003+  001D             ;
0004+  001D             ;
0005+  001D             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0006+  001D             ;
0007+  001D             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0008+  001D             ;
0009+  001D             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0010+  001D             ; of this software and associated documentation files (the "Software"), to deal
0011+  001D             ; in the Software without restriction, including without limitation the rights
0012+  001D             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0013+  001D             ; copies of the Software, and to permit persons to whom the Software is
0014+  001D             ; furnished to do so, subject to the following conditions:
0015+  001D             ; 
0016+  001D             ; The above copyright notice and this permission notice shall be included in all
0017+  001D             ; copies or substantial portions of the Software.
0018+  001D             ; 
0019+  001D             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0020+  001D             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0021+  001D             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0022+  001D             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0023+  001D             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0024+  001D             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0025+  001D             ; SOFTWARE.
0026+  001D             ;
0027+  001D                                 .MODULE  boot_sequence
0028+  001D             ;
0029+  001D             ; TODO: PIO setup should happen after the initial beep. Do it here for now, until new boards are available.
0030+  001D             ;
0031+  001D 3E 07                           LD      A, PIO_SET_INTERRUPT    ; Ports A/B Interrupt control - no interrupts
0032+  001F D3 12                           OUT     (PIO_A_CTRL), A         ; Set control twice in case a reset interrupted a control sequence
0033+  0021 D3 12                           OUT     (PIO_A_CTRL), A
0034+  0023 D3 13                           OUT     (PIO_B_CTRL), A
0035+  0025 D3 13                           OUT     (PIO_B_CTRL), A
0036+  0027             
0037+  0027 3E CF                           LD      A, PIO_MODE_3           ; Port A Mode 3 
0038+  0029 D3 12                           OUT     (PIO_A_CTRL), A
0039+  002B 3E FF                           LD      A, 0FFh                 ; All inputs
0040+  002D D3 12                           OUT     (PIO_A_CTRL), A
0041+  002F             
0042+  002F             
0043+  002F 3E CF                           LD      A, PIO_MODE_3           ; Port B mode 3
0044+  0031 D3 13                           OUT     (PIO_B_CTRL), A
0045+  0033 3E FF                           LD      A, PORT_B_IOMASK        ; All inputs, apart from bit 4 (audio out)
0046+  0035 D3 13                           OUT     (PIO_B_CTRL), A
0047+  0037             
0048+  0037 21 80 0E                        LD     HL, 0E80h                ; Approx middle C
0049+  003A             ;
0050+  003A             ; Beep to show we've booted
0051+  003A             ;
0052+  003A DB 24       _boot_beep          IN      A, (AUDIO_PORT)         ; Check the state of the audio port,,
0053+  003C 57                              LD      D, A                 
0054+  003D 1E 64                           LD      E, 100                  ; 100 cycles = 1/3 of a sec
0055+  003F 7A          _beep_loop          LD      A, D
0056+  0040 EE 08                           XOR     AUDIO_MASK
0057+  0042 D3 24                           OUT     (AUDIO_PORT), A
0058+  0044             
0059+  0044 4D                              LD      C, L
0060+  0045 44          _beep_delay0        LD      B, H
0061+  0046 10 FE       _beep_delay1        DJNZ    _beep_delay1            ; 13 * (count-2) + 8
0062+  0048 0D                              DEC     C
0063+  0049 20 FA                           JR      NZ, _beep_delay0
0064+  004B             
0065+  004B 7A                              LD      A, D
0066+  004C D3 24                           OUT     (AUDIO_PORT), A
0067+  004E             
0068+  004E 4D                              LD      C, L
0069+  004F 44          _beep_delay2        LD      B, H
0070+  0050 10 FE       _beep_delay3        DJNZ    _beep_delay3            ; 13 * (count-2) + 8
0071+  0052 0D                              DEC     C
0072+  0053 20 FA                           JR      NZ, _beep_delay2      
0073+  0055             
0074+  0055 1D                              DEC     E
0075+  0056 20 E7                           JR      NZ, _beep_loop
0076+  0058             
0077+  0058             ;
0078+  0058             ; Now initialise the UART
0079+  0058             ;
0080+  0058             ;
0081+  0058 01 26 00                        LD      BC, UART_19200 | UART_MODE_AUTO  ;;; TODO This is sooooo wrong - sets C (divisor) to 38 
0082+  005B 3E 80                           LD      A, 80h                      ; Divisor Latch Setting Mode
0083+  005D D3 23                           OUT     (UART_LINE_CTRL), A         ;  - entered by writing 1 to bit 7 of LCR
0084+  005F 00                              NOP
0085+  0060 00                              NOP
0086+  0061 79                              LD      A, C
0087+  0062 D3 20                           OUT     (UART_TX_RX), A
0088+  0064 00                              NOP
0089+  0065 00                              NOP
0090+  0066 AF                              XOR     A
0091+  0067 D3 21                           OUT     (UART_INT_ENABLE), A
0092+  0069 00                              NOP
0093+  006A 00                              NOP
0094+  006B             
0095+  006B 3E 03                           LD      A, UART_8N1                 ; Set 8N1 and exit divisor latch setting mode
0096+  006D D3 23                           OUT     (UART_LINE_CTRL), A
0097+  006F             
0098+  006F 3E 07                           LD      A, 07h                      ; Enable and clear FIFO registers
0099+  0071 D3 22                           OUT     (UART_FIFO_CTRL), A
0100+  0073             
0101+  0073 78                              LD      A, B
0102+  0074 A7                              AND     A
0103+  0075 28 02                           JR      Z, _no_flowcontrol
0104+  0077             
0105+  0077 D3 24                           OUT     (UART_MODEM_CTRL), A
0106+  0079             
0107+  0079 00          _no_flowcontrol     NOP
0108+  007A 00                              NOP
0109+  007B             
0110+  007B             ;
0111+  007B             ; Send 'OK' to UART
0112+  007B             ;
0113+  007B             ;
0114+  007B 01 50 C3                        LD      BC, UART_TIMEOUT
0115+  007E DB 25       _check_ready1       IN      A, (UART_LINE_STATUS)
0116+  0080 CB 6F                           BIT     5, A
0117+  0082 20 0C                           JR      NZ, _uart_ready1            ; Bit 5 is set when the UART is ready
0118+  0084 0B                              DEC     BC
0119+  0085 78                              LD      A, B
0120+  0086 B1                              OR      C
0121+  0087 C2 7E 00                        JP      NZ, _check_ready1
0122+  008A             
0123+  008A 21 C0 07                        LD      HL, 07C0h                   ; #C1
0124+  008D C3 3A 00                        JP      _boot_beep                  ; Beep again if we can't get ready on the UART
0125+  0090             
0126+  0090 3E 4F       _uart_ready1        LD      A, 'O'
0127+  0092 D3 20                           OUT     (UART_TX_RX), A
0128+  0094                                 
0129+  0094             
0130+  0094 01 50 C3                        LD      BC, UART_TIMEOUT
0131+  0097 DB 25       _check_ready2       IN      A, (UART_LINE_STATUS)
0132+  0099 CB 6F                           BIT     5, A
0133+  009B 20 0C                           JR      NZ, _uart_ready2             ; Bit 5 is set when the UART is ready
0134+  009D 0B                              DEC     BC
0135+  009E 78                              LD      A, B
0136+  009F B1                              OR      C
0137+  00A0 C2 97 00                        JP      NZ, _check_ready2
0138+  00A3             
0139+  00A3 21 C0 07                        LD      HL, 07C0h                   ; #C1
0140+  00A6 C3 3A 00                        JP      _boot_beep                  ; Beep again if we can't get ready on the UART
0141+  00A9             
0142+  00A9 3E 4B       _uart_ready2        LD      A, 'K'
0143+  00AB D3 20                           OUT     (UART_TX_RX), A
0144+  00AD             
0145+  00AD             
0146+  00AD 01 50 C3                        LD      BC, UART_TIMEOUT
0147+  00B0 DB 25       _check_ready3       IN      A, (UART_LINE_STATUS)
0148+  00B2 CB 6F                           BIT     5, A
0149+  00B4 20 0C                           JR      NZ, _uart_ready3             ; Bit 5 is set when the UART is ready
0150+  00B6 0B                              DEC     BC
0151+  00B7 78                              LD      A, B
0152+  00B8 B1                              OR      C
0153+  00B9 C2 B0 00                        JP      NZ, _check_ready3
0154+  00BC             
0155+  00BC 21 C0 07                        LD      HL, 07C0h                   ; #C1
0156+  00BF C3 3A 00                        JP      _boot_beep                  ; Beep again if we can't get ready on the UART
0157+  00C2             
0158+  00C2             
0159+  00C2 3E 0D       _uart_ready3        LD      A, CARRIAGE_RETURN
0160+  00C4 D3 20                           OUT     (UART_TX_RX), A
0161+  00C6             
0162+  00C6             
0163+  00C6 01 50 C3                        LD      BC, UART_TIMEOUT
0164+  00C9 DB 25       _check_ready4       IN      A, (UART_LINE_STATUS)
0165+  00CB CB 6F                           BIT     5, A
0166+  00CD 20 0C                           JR      NZ, _uart_ready4             ; Bit 5 is set when the UART is ready
0167+  00CF 0B                              DEC     BC
0168+  00D0 78                              LD      A, B
0169+  00D1 B1                              OR      C
0170+  00D2 C2 C9 00                        JP      NZ, _check_ready4
0171+  00D5             
0172+  00D5 21 C0 07                        LD      HL, 07C0h                   ; #C1
0173+  00D8 C3 3A 00                        JP      _boot_beep                  ; Beep again if we can't get ready on the UART
0174+  00DB             
0175+  00DB             
0176+  00DB 3E 0A       _uart_ready4        LD      A, NEWLINE
0177+  00DD D3 20                           OUT     (UART_TX_RX), A
0178+  00DF             
0179+  00DF 00                              NOP
0180+  00E0 00                              NOP
0181+  00E1             
0182+  00E1 01 50 C3                        LD      BC, UART_TIMEOUT            ; Make sure the character is sent before we re-initialise the UART later
0183+  00E4 DB 25       _check_ready5       IN      A, (UART_LINE_STATUS)
0184+  00E6 CB 6F                           BIT     5, A
0185+  00E8 20 06                           JR      NZ, _uart_ready5            ; Bit 5 is set when the UART is ready
0186+  00EA 0B                              DEC     BC
0187+  00EB 78                              LD      A, B
0188+  00EC B1                              OR      C
0189+  00ED C2 E4 00                        JP      NZ, _check_ready5
0190+  00F0             
0191+  00F0             _uart_ready5
0192+  00F0             ;
0193+  00F0             ; Now enable RAM in page 3 and test
0194+  00F0             ;
0195+  00F0             ;
0196+  00F0 3E 00                           LD      A, ROM_PAGE_0
0197+  00F2 D3 70                           OUT     (IO_MEM_0), A           ; Page 0 is Flash 0
0198+  00F4 3E 23                           LD      A, RAM_PAGE_3
0199+  00F6 D3 73                           OUT     (IO_MEM_3), A           ; Page 3 is RAM 0
0200+  00F8             
0201+  00F8 3E 01                           LD      A, IO_MEM_ENABLE
0202+  00FA D3 74                           OUT     (IO_MEM_CTRL), A
0203+  00FC             
0204+  00FC 3E 37                           LD      A, 37h                  ; Can we write and read a value from Page 3?
0205+  00FE 32 02 FF                        LD      (0FF02h), A
0206+  0101             
0207+  0101 3A 02 FF                        LD      A, (0FF02h)
0208+  0104 21 E0 03                        LD      HL, 03E0h               ; #C2
0209+  0107 FE 37                           CP      37h
0210+  0109             
0211+  0109 C2 3A 00                        JP      NZ, _boot_beep          ; Beep again if we don't see the value we've written
0212+  010C 3C                              INC     A
0213+  010D 32 02 FF                        LD      (0FF02h), A
0214+  0110 3A 02 FF                        LD      A, (0FF02h)
0215+  0113 FE 38                           CP      38h
0216+  0115             
0217+  0115 C2 3A 00                        JP      NZ, _boot_beep
0218+  0118             
0219+  0118 CD 69 09                        CALL    uart_init               ; Reinitialise the UART to make sure we've not missed anything
0220+  011B             ;
0221+  011B             ; Now check keys all read as un-pressed, apart from DELETE
0222+  011B             ;
0223+  011B AF                              XOR     A                       ; Reset boot mode
0224+  011C 32 03 FF                        LD      (boot_mode), A
0225+  011F             
0226+  011F 01 00 F7                        LD      BC, 0F700h
0227+  0122 ED 78       _key_loop           IN      A, (C)
0228+  0124 E6 3F                           AND     03Fh
0229+  0126 FE 3F                           CP      03Fh
0230+  0128 CA 58 01                        JP      Z, _key_ok
0231+  012B             
0232+  012B 6F                              LD      L, A
0233+  012C 78                              LD      A, B
0234+  012D FE EF                           CP      0EFh
0235+  012F CA 36 01                        JP      Z, _delete_row
0236+  0132             
0237+  0132 60                              LD      H,B                 ; If it's not the delete row, the panic code is the row and key mask
0238+  0133 C3 8F 01                        JP      panic
0239+  0136             
0240+  0136 7D          _delete_row         LD      A, L
0241+  0137 FE 1F                           CP      01Fh                ; If it is the delete row and not the delete key, panic 0004
0242+  0139 21 04 F0                        LD      HL, PANIC_0004
0243+  013C C2 8F 01                        JP      NZ, panic
0244+  013F             
0245+  013F 3E FF                           LD      A, 0FFh
0246+  0141 32 03 FF                        LD      (boot_mode), A
0247+  0144             
0248+  0144 CD EE 09                        CALL    uart_inline
0249+  0147 4D 65 6D 6F                     .DB     "Memory test\r\n", 0
0249+  014B 72 79 20 74 
0249+  014F 65 73 74 0D 
0249+  0153 0A 00 
0250+  0155             
0251+  0155 CD 0C 0A                        CALL    mem_test_start
0252+  0158             
0253+  0158 CB 08       _key_ok             RRC     B
0254+  015A 78                              LD      A, B
0255+  015B FE F7                           CP      0F7h
0256+  015D C2 22 01                        JP      NZ, _key_loop
0257+  0160             
0258+  0160 CD EE 09                        CALL    uart_inline
0259+  0163 4B 65 79 62                     .DB     "Keyboard OK\r\n", 0
0259+  0167 6F 61 72 64 
0259+  016B 20 4F 4B 0D 
0259+  016F 0A 00 
0260+  0171             
0261+  0171             ;
0262+  0171             ; At this stage we should have a working UART and memory.. we can start calling routines..
0263+  0171             ;
0264+  0171 CD EE 09                        CALL    uart_inline
0265+  0174 4D 69 63 72                     .DB     "MicroBeast starting...\n\r",0
0265+  0178 6F 42 65 61 
0265+  017C 73 74 20 73 
0265+  0180 74 61 72 74 
0265+  0184 69 6E 67 2E 
0265+  0188 2E 2E 0A 0D 
0265+  018C 00 
0266+  018D             
0267+  018D 18 25                           JR      _continue
0268+  018F             
0269+  018F CD EE 09    panic               CALL    uart_inline
0270+  0192 50 61 6E 69                     .DB     "Panic\n\r",0
0270+  0196 63 0A 0D 00 
0271+  019A 7C                              LD      A, H
0272+  019B CD CF 09                        CALL    uart_hex
0273+  019E 7D                              LD      A, L
0274+  019F CD CF 09                        CALL    uart_hex
0275+  01A2 11 00 04    _beep               LD      DE, 0400h
0276+  01A5 0E 05                           LD      C, 5
0277+  01A7 CD 24 08                        CALL    play_note
0278+  01AA 11 06 05                        LD      DE, 0506h
0279+  01AD 0E 05                           LD      C, 5
0280+  01AF CD 24 08                        CALL    play_note
0281+  01B2 18 EE                           JR      _beep
0282+  01B4             
0283+  01B4 CD B4 05    _continue           CALL    init_portb
0284+  01B7 CD CA 05                        CALL    i2c_bus_reset
0285+  01BA             ;
0286+  01BA             ; Now: Port B should be all inputs, so D7 (i2c data) should be high
0287+  01BA             ;                   
0288+  01BA 06 FF                           LD      B, 0ffh
0289+  01BC 10 FE                           DJNZ    $
0290+  01BE             
0291+  01BE DB 11                           IN      A, (PIO_B_DATA)
0292+  01C0 E6 80                           AND     I2C_DATA_MASK           ; TODO - No panic code
0293+  01C2 28 CB                           JR      Z, panic
0294+  01C4             
0295+  01C4 CD BF 06                        CALL    i2c_sda_low             ; Set data low
0296+  01C7 DB 11                           IN      A, (PIO_B_DATA)
0297+  01C9 E6 80                           AND     I2C_DATA_MASK           ; TODO - No panic code
0298+  01CB 20 C2                           JR      NZ, panic
0299+  01CD             
0300+  01CD CD EE 09                        CALL    uart_inline
0301+  01D0 44 65 74 65                     .DB     "Detected PIO\r\n",0
0301+  01D4 63 74 65 64 
0301+  01D8 20 50 49 4F 
0301+  01DC 0D 0A 00 
0302+  01DF             
0303+  01DF             ;
0304+  01DF             ; All good, let's see what's on the bus...
0305+  01DF             ;
0306+  01DF CD CA 05                        CALL    i2c_bus_reset
0307+  01E2             
0308+  01E2 CD D9 05                        CALL    i2c_start
0309+  01E5 3E 50                           LD      A, DL_ADDRESS
0310+  01E7 CD 32 06                        CALL    i2c_address_w
0311+  01EA 21 01 F0                        LD      HL, PANIC_0001
0312+  01ED 30 A0                           JR      NC, panic
0313+  01EF CD E8 05                        CALL    i2c_stop
0314+  01F2             
0315+  01F2 CD EE 09                        CALL    uart_inline
0316+  01F5 44 65 74 65                     .DB     "Detected Display 1/2\r\n", 0
0316+  01F9 63 74 65 64 
0316+  01FD 20 44 69 73 
0316+  0201 70 6C 61 79 
0316+  0205 20 31 2F 32 
0316+  0209 0D 0A 00 
0317+  020C             
0318+  020C CD D9 05                        CALL    i2c_start
0319+  020F 3E 53                           LD      A, DR_ADDRESS
0320+  0211 CD 32 06                        CALL    i2c_address_w
0321+  0214 21 02 F0                        LD      HL, PANIC_0002
0322+  0217 D2 8F 01                        JP      NC, panic
0323+  021A CD E8 05                        CALL    i2c_stop
0324+  021D             
0325+  021D CD EE 09                        CALL    uart_inline
0326+  0220 44 65 74 65                     .DB     "Detected Display 2/2\r\n", 0
0326+  0224 63 74 65 64 
0326+  0228 20 44 69 73 
0326+  022C 70 6C 61 79 
0326+  0230 20 32 2F 32 
0326+  0234 0D 0A 00 
0327+  0237             
0328+  0237 CD D9 05                        CALL    i2c_start
0329+  023A 3E 6F                           LD      A, RTC_ADDRESS
0330+  023C CD 32 06                        CALL    i2c_address_w
0331+  023F 21 03 F0                        LD      HL, PANIC_0003
0332+  0242 D2 8F 01                        JP      NC, panic
0333+  0245 CD E8 05                        CALL    i2c_stop
0334+  0248             
0335+  0248 CD EE 09                        CALL    uart_inline
0336+  024B 44 65 74 65                     .DB     "Detected RTC\r\n", 0
0336+  024F 63 74 65 64 
0336+  0253 20 52 54 43 
0336+  0257 0D 0A 00 
0337+  025A             
0338+  025A                                 .MODULE main0041   025A             
0042   025A CD B4 05    _main               CALL    init_portb
0043   025D CD CA 05                        CALL    i2c_bus_reset
0044   0260                                 
0045   0260 CD 7E 03                        CALL    display_init
0046   0263                      
0047   0263 1E 00                           LD      E, 0                    ; Set brightness to zero
0048   0265 CD BE 03                        CALL    disp_brightness
0049   0268             
0050   0268 3E 00                           LD      A,  0
0051   026A 21 4C 03                        LD      HL, welcome
0052   026D CD BC 04                        CALL    disp_string
0053   0270             
0054   0270                                 ;; Animate it
0055   0270 3E 50                           LD      A, DL_ADDRESS           ; Put both controllers in brightness mode
0056   0272 32 05 FF                        LD      (display_address), A
0057   0275 2E 01                           LD      L, BRIGHT_PAGE
0058   0277 CD F9 03                        CALL    disp_page
0059   027A             
0060   027A 3E 53                           LD      A, DR_ADDRESS
0061   027C 32 05 FF                        LD      (display_address), A
0062   027F 2E 01                           LD      L, BRIGHT_PAGE
0063   0281 CD F9 03                        CALL    disp_page
0064   0284             
0065   0284 3E 00                           LD      A, 0                    ; Current animation from 0-24
0066   0286 32 04 FF                        LD      (temp_byte), A
0067   0289                                 
0068   0289                                 ; Update display
0069   0289 CD D9 05    _frame_loop         CALL    i2c_start
0070   028C 3E 50                           LD      A, DL_ADDRESS
0071   028E CD 32 06                        CALL    i2c_address_w
0072   0291 AF                              XOR     A                       ; First digit in display
0073   0292 CD 34 06                        CALL    i2c_write
0074   0295             
0075   0295 06 0C                           LD      B, 12
0076   0297 3A 04 FF                        LD      A, (temp_byte)
0077   029A 4F                              LD      C, A
0078   029B             
0079   029B C5          _l_char_loop        PUSH    BC
0080   029C 06 00                           LD      B, 0
0081   029E 21 16 03                        LD      HL, little_sin
0082   02A1 09                              ADD     HL, BC 
0083   02A2                                 
0084   02A2 1E 10                           LD      E, 16
0085   02A4 7E          _write_l_char       LD      A, (HL)
0086   02A5 CD 34 06                        CALL    i2c_write
0087   02A8 1D                              DEC     E
0088   02A9 20 F9                           JR      NZ, _write_l_char
0089   02AB             
0090   02AB C1                              POP     BC
0091   02AC 0C                              INC     C
0092   02AD 0C                              INC     C
0093   02AE 79                              LD      A, C
0094   02AF FE 18                           CP      24
0095   02B1 38 03                           JR      C, _no_loop_l
0096   02B3 DE 18                           SBC     A, 24
0097   02B5 4F                              LD      C, A
0098   02B6 10 E3       _no_loop_l          DJNZ    _l_char_loop
0099   02B8 CD E8 05                        CALL    i2c_stop
0100   02BB             
0101   02BB C5                              PUSH    BC
0102   02BC CD D9 05                        CALL    i2c_start
0103   02BF 3E 53                           LD      A, DR_ADDRESS
0104   02C1 CD 32 06                        CALL    i2c_address_w
0105   02C4 AF                              XOR     A
0106   02C5 CD 34 06                        CALL    i2c_write
0107   02C8             
0108   02C8 C1                              POP     BC
0109   02C9 06 0C                           LD      B, 12
0110   02CB             
0111   02CB C5          _r_char_loop        PUSH    BC
0112   02CC 06 00                           LD      B, 0
0113   02CE 21 16 03                        LD      HL, little_sin
0114   02D1 09                              ADD     HL, BC 
0115   02D2             
0116   02D2 1E 10                           LD      E, 16
0117   02D4 7E          _write_r_char       LD      A, (HL)
0118   02D5 CD 34 06                        CALL    i2c_write
0119   02D8 1D                              DEC     E
0120   02D9 20 F9                           JR      NZ, _write_r_char
0121   02DB             
0122   02DB C1                              POP     BC
0123   02DC 0C                              INC     C
0124   02DD 0C                              INC     C
0125   02DE 79                              LD      A, C
0126   02DF FE 18                           CP      24
0127   02E1 38 03                           JR      C, _no_loop_r
0128   02E3 DE 18                           SBC     A, 24
0129   02E5 4F                              LD      C, A
0130   02E6 10 E3       _no_loop_r          DJNZ    _r_char_loop
0131   02E8 CD E8 05                        CALL    i2c_stop
0132   02EB             
0133   02EB 3A 04 FF    _next_frame         LD      A, (temp_byte)
0134   02EE 3C                              INC     A
0135   02EF 32 04 FF                        LD      (temp_byte), A
0136   02F2 FE 18                           CP      24
0137   02F4 C2 89 02                        JP      NZ, _frame_loop
0138   02F7             
0139   02F7 1E 80                           LD      E, DISP_DEFAULT_BRIGHTNESS      ; Reset brightness
0140   02F9 CD BE 03                        CALL    disp_brightness
0141   02FC             
0142   02FC 3E 00                           LD      A, 0
0143   02FE 21 65 03                        LD      HL, welcome2
0144   0301 CD BC 04                        CALL    disp_string
0145   0304             
0146   0304 CD 30 03                        CALL    wait_key
0147   0307             
0148   0307             ;======================================== SETUP BIOS ========================================
0149   0307             
0150   0307 21 D1 0A                        LD      HL, bios_seg+4
0151   030A ED 5B CD 0A                     LD      DE, (bios_seg)
0152   030E D5                              PUSH    DE
0153   030F ED 4B CF 0A                     LD      BC, (bios_seg+2)
0154   0313 ED B0                           LDIR
0155   0315 C9                              RET
0156   0316                                 
0157   0316 00 03 09 13 little_sin          .DB     0, 3, 9, 19, 32, 48, 64, 81, 96, 110, 120, 126, 128, 126, 120, 110, 96, 81, 65, 48, 33, 19, 9, 3  ; 24 values
0157   031A 20 30 40 51 
0157   031E 60 6E 78 7E 
0157   0322 80 7E 78 6E 
0157   0326 60 51 41 30 
0157   032A 21 13 09 03 
0158   032E             
0159   032E 18 FE       halt                JR      halt
0160   0330             
0161   0330 01 00 00    wait_key            LD      BC, 0000h   ; Keyboard all rows
0162   0333 ED 78       _wait_key           IN      A, (C)
0163   0335 E6 3F                           AND     3fh
0164   0337 FE 3F                           CP      3fh
0165   0339 CA 33 03                        JP      Z, _wait_key
0166   033C             
0167   033C 16 64       _wait_up            LD      D, 100
0168   033E ED 78       _wait_loop          IN      A, (C)
0169   0340 E6 3F                           AND     3fh
0170   0342 FE 3F                           CP      3fh
0171   0344 C2 3C 03                        JP      NZ, _wait_up
0172   0347 15                              DEC     D
0173   0348 C2 3E 03                        JP      NZ, _wait_loop
0174   034B C9                              RET
0175   034C             
0176   034C 2A 2A 2A 2A welcome             .db "************************", 0
0176   0350 2A 2A 2A 2A 
0176   0354 2A 2A 2A 2A 
0176   0358 2A 2A 2A 2A 
0176   035C 2A 2A 2A 2A 
0176   0360 2A 2A 2A 2A 
0176   0364 00 
0177   0365 2A 20 4D 49 welcome2            .db "* MICRO BEAST  Ver 1_5 *", 0
0177   0369 43 52 4F 20 
0177   036D 42 45 41 53 
0177   0371 54 20 20 56 
0177   0375 65 72 20 31 
0177   0379 5F 35 20 2A 
0177   037D 00 
0178   037E             
0179   037E             ; =============================================== Font =====================================================
0180   037E             ;
0181   037E                                 .INCLUDE disp.asm
0001+  037E             ; ========================================== Display Routines ===============================================
0002+  037E             ;
0003+  037E             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0004+  037E             ;
0005+  037E             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0006+  037E             ;
0007+  037E             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0008+  037E             ; of this software and associated documentation files (the "Software"), to deal
0009+  037E             ; in the Software without restriction, including without limitation the rights
0010+  037E             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0011+  037E             ; copies of the Software, and to permit persons to whom the Software is
0012+  037E             ; furnished to do so, subject to the following conditions:
0013+  037E             ; 
0014+  037E             ; The above copyright notice and this permission notice shall be included in all
0015+  037E             ; copies or substantial portions of the Software.
0016+  037E             ; 
0017+  037E             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0018+  037E             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0019+  037E             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0020+  037E             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0021+  037E             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0022+  037E             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0023+  037E             ; SOFTWARE.
0024+  037E             ;
0025+  037E                                 .MODULE disp
0026+  037E             
0027+  037E             CONFIG_PAGE         .EQU    3
0028+  037E             BRIGHT_PAGE         .EQU    1
0029+  037E             LED_PAGE            .EQU    0 
0030+  037E             
0031+  037E CD E6 04    display_init        CALL    disp_clear
0032+  0381 1E 80                           LD      E, DISP_DEFAULT_BRIGHTNESS
0033+  0383 CD BE 03                        CALL    disp_brightness
0034+  0386             
0035+  0386 CD 92 03                        CALL    disp_select_l
0036+  0389 CD 9E 03                        CALL    disp_config
0037+  038C             
0038+  038C CD 98 03                        CALL    disp_select_r
0039+  038F CD 9E 03                        CALL    disp_config
0040+  0392             
0041+  0392 3E 50       disp_select_l       LD      A, DL_ADDRESS
0042+  0394 32 05 FF                        LD      (display_address), A
0043+  0397 C9                              RET
0044+  0398             
0045+  0398 3E 53       disp_select_r       LD      A, DR_ADDRESS
0046+  039A 32 05 FF                        LD      (display_address), A
0047+  039D C9                              RET
0048+  039E             
0049+  039E 2E 03       disp_config         LD      L, CONFIG_PAGE
0050+  03A0 CD F9 03                        CALL    disp_page
0051+  03A3 CD D9 05                        CALL    i2c_start
0052+  03A6 3A 05 FF                        LD      A, (display_address)
0053+  03A9 CD 32 06                        CALL    i2c_address_w
0054+  03AC 3E 00                           LD      A, 000h
0055+  03AE CD 34 06                        CALL    i2c_write
0056+  03B1 3E 01                           LD      A, 001h         ; Turn display on
0057+  03B3 CD 34 06                        CALL    i2c_write
0058+  03B6 3E 78                           LD      A, 078h         ; 0.020mA
0059+  03B8 CD 34 06                        CALL    i2c_write
0060+  03BB C3 E8 05                        JP      i2c_stop
0061+  03BE             
0062+  03BE             ;
0063+  03BE             ; Sets the brightness for the display
0064+  03BE             ; Enter with E set to the desired brightness for all segments
0065+  03BE             ;
0066+  03BE CD 92 03    disp_brightness     CALL    disp_select_l
0067+  03C1 CD C7 03                        CALL    _set_bright
0068+  03C4 CD 98 03                        CALL    disp_select_r
0069+  03C7 2E 01       _set_bright         LD      L, BRIGHT_PAGE
0070+  03C9 CD F9 03                        CALL    disp_page
0071+  03CC 2E 0C                           LD      L, 12
0072+  03CE CD D9 05    _bright_loop        CALL    i2c_start
0073+  03D1 3A 05 FF                        LD      A, (display_address)
0074+  03D4 CD 32 06                        CALL    i2c_address_w
0075+  03D7 7D                              LD      A, L
0076+  03D8 3D                              DEC     A
0077+  03D9 CB 27                           SLA     A
0078+  03DB CB 27                           SLA     A
0079+  03DD CB 27                           SLA     A
0080+  03DF CB 27                           SLA     A
0081+  03E1 CD 34 06                        CALL    i2c_write
0082+  03E4 26 10                           LD      H, 010h
0083+  03E6 7B          _bright_byte        LD      A, E
0084+  03E7 CD 34 06                        CALL    i2c_write
0085+  03EA 25                              DEC     H
0086+  03EB 20 F9                           JR      NZ, _bright_byte
0087+  03ED CD E8 05                        CALL    i2c_stop
0088+  03F0 2D                              DEC     L
0089+  03F1 20 DB                           JR      NZ, _bright_loop
0090+  03F3 2E 00                           LD      L, LED_PAGE
0091+  03F5 CD F9 03                        CALL    disp_page
0092+  03F8 C9                              RET
0093+  03F9             
0094+  03F9             ; Set the Page number
0095+  03F9             ; Call with page number in L
0096+  03F9             ;
0097+  03F9             ; Uses A, B, C, D
0098+  03F9 CD 11 04    disp_page           CALL    disp_unlock
0099+  03FC CD D9 05                        CALL    i2c_start
0100+  03FF 3A 05 FF                        LD      A, (display_address)
0101+  0402 CD 32 06                        CALL    i2c_address_w
0102+  0405 3E FD                           LD      A, 0FDh
0103+  0407 CD 34 06                        CALL    i2c_write
0104+  040A 7D                              LD      A, L
0105+  040B CD 34 06                        CALL    i2c_write
0106+  040E C3 E8 05                        JP      i2c_stop
0107+  0411             
0108+  0411 CD D9 05    disp_unlock         CALL    i2c_start           ; Must be called before switching pages
0109+  0414 3A 05 FF                        LD      A, (display_address)
0110+  0417 CD 32 06                        CALL    i2c_address_w
0111+  041A 3E FE                           LD      A, DISP_REG_CRWL
0112+  041C CD 34 06                        CALL    i2c_write
0113+  041F 3E C5                           LD      A, DISP_UNLOCK
0114+  0421 CD 34 06                        CALL    i2c_write
0115+  0424 C3 E8 05                        JP      i2c_stop
0116+  0427             
0117+  0427             ; Set the character at column A to brightness C
0118+  0427             ;
0119+  0427             ;
0120+  0427 C5          disp_char_bright    PUSH    BC
0121+  0428 06 50                           LD      B, DL_ADDRESS
0122+  042A FE 0C                           CP      12
0123+  042C DA 33 04                        JP      C, _bright_left
0124+  042F 06 53                           LD      B, DR_ADDRESS
0125+  0431 D6 0C                           SUB     12
0126+  0433 5F          _bright_left        LD      E, A
0127+  0434 78                              LD      A, B
0128+  0435 32 05 FF                        LD      (display_address), A
0129+  0438 2E 01                           LD      L, BRIGHT_PAGE
0130+  043A CD F9 03                        CALL    disp_page
0131+  043D             
0132+  043D CD D9 05                        CALL    i2c_start
0133+  0440 3A 05 FF                        LD      A, (display_address)
0134+  0443 CD 32 06                        CALL    i2c_address_w
0135+  0446 7B                              LD      A, E
0136+  0447 CB 27                           SLA     A
0137+  0449 CB 27                           SLA     A
0138+  044B CB 27                           SLA     A
0139+  044D CB 27                           SLA     A
0140+  044F CD 34 06                        CALL    i2c_write
0141+  0452 E1                              POP     HL
0142+  0453 26 10                           LD      H, 010h
0143+  0455 7D          _bright_char_loop   LD      A, L
0144+  0456 CD 34 06                        CALL    i2c_write
0145+  0459 25                              DEC     H
0146+  045A 20 F9                           JR      NZ, _bright_char_loop
0147+  045C CD E8 05                        CALL    i2c_stop
0148+  045F             
0149+  045F 2E 00                           LD      L, LED_PAGE
0150+  0461 CD F9 03                        CALL    disp_page
0151+  0464 C9                              RET
0152+  0465                                 
0153+  0465             ; Display a single character A at column C
0154+  0465             ;
0155+  0465             ; Returns with A pointing to next column
0156+  0465             ;
0157+  0465 FE 20       disp_character      CP      32
0158+  0467 F2 71 04                        JP      P, _not_control
0159+  046A             
0160+  046A 21 61 48    _invalid_char       LD      HL, INVALID_CHAR_BITMASK
0161+  046D 79                              LD      A, C
0162+  046E C3 86 04                        JP      disp_bitmask
0163+  0471             
0164+  0471 CB 7F       _not_control        BIT     7, A
0165+  0473 C2 6A 04                        JP      NZ, _invalid_char
0166+  0476 D6 20                           SUB     32
0167+  0478             
0168+  0478 16 00                           LD      D, 0
0169+  047A 5F                              LD      E, A
0170+  047B CB 23                           SLA     E                   ; Don't need to shift into D, since bit 7 is zero
0171+  047D 21 F4 04                        LD      HL, font  
0172+  0480 19                              ADD     HL, DE
0173+  0481 56                              LD      D, (HL)
0174+  0482 23                              INC     HL
0175+  0483 66                              LD      H, (HL)
0176+  0484 6A                              LD      L, D
0177+  0485 79                              LD      A, C
0178+  0486                                 ; Fall into disp_bitmask
0179+  0486             
0180+  0486             ; Display a bitmask in HL at column A (0 - 23)
0181+  0486             ;
0182+  0486             ; Returns with A pointing to next column
0183+  0486             ;
0184+  0486             ; Uses A, B, C, D, E
0185+  0486 F5          disp_bitmask        PUSH    AF
0186+  0487 06 50                           LD      B, DL_ADDRESS
0187+  0489 FE 0C                           CP      12
0188+  048B DA 92 04                        JP      C, _disp_left
0189+  048E 06 53                           LD      B, DR_ADDRESS
0190+  0490 D6 0C                           SUB     12
0191+  0492 5F          _disp_left          LD      E, A
0192+  0493 CD D9 05                        CALL    i2c_start
0193+  0496 78                              LD      A, B
0194+  0497 CD 32 06                        CALL    i2c_address_w
0195+  049A 7B                              LD      A, E
0196+  049B CB 27                           SLA     A
0197+  049D CD 34 06                        CALL    i2c_write
0198+  04A0 7D                              LD      A, L
0199+  04A1 CD 34 06                        CALL    i2c_write
0200+  04A4 7C                              LD      A, H
0201+  04A5 CD 34 06                        CALL    i2c_write
0202+  04A8 CD E8 05                        CALL    i2c_stop
0203+  04AB F1                              POP     AF
0204+  04AC 3C                              INC     A
0205+  04AD C9                              RET
0206+  04AE             
0207+  04AE             
0208+  04AE C3 86 04                        JP      disp_bitmask
0209+  04B1             ;
0210+  04B1             ; Clear the display and show an inline string from column 0
0211+  04B1             ;
0212+  04B1 CD E6 04    disp_clear_inline   CALL    disp_clear
0213+  04B4 AF                              XOR     A
0214+  04B5             ;
0215+  04B5             ; Display an inline string to column A->
0216+  04B5             ;
0217+  04B5 E3          disp_inline         EX      (SP), HL
0218+  04B6 CD BC 04                        CALL    disp_string
0219+  04B9 23                              INC     HL
0220+  04BA E3                              EX      (SP), HL
0221+  04BB C9                              RET
0222+  04BC             
0223+  04BC             ; Display a string pointed to by HL to column A->
0224+  04BC             ; Note string should be zero terminated...
0225+  04BC             ; Returns with HL pointing to the 0 terminator
0226+  04BC             ;
0227+  04BC 5F          disp_string         LD      E, A
0228+  04BD 7E                              LD      A, (HL)
0229+  04BE B7                              OR      A
0230+  04BF C2 C3 04                        JP      NZ, _char_ok
0231+  04C2 C9                              RET
0232+  04C3             
0233+  04C3 D6 20       _char_ok            SUB     32
0234+  04C5 F2 CD 04                        JP      P, _char_ok2
0235+  04C8 21 61 48                        LD      HL, INVALID_CHAR_BITMASK
0236+  04CB 18 10                           JR      _show_char
0237+  04CD             
0238+  04CD 06 00       _char_ok2           LD      B, 0
0239+  04CF 4F                              LD      C, A
0240+  04D0 E5                              PUSH    HL
0241+  04D1 21 F4 04                        LD      HL, font
0242+  04D4 CB 21                           SLA     C
0243+  04D6 CB 10                           RL      B
0244+  04D8 09                              ADD     HL, BC
0245+  04D9 4E                              LD      C, (HL)
0246+  04DA 23                              INC     HL
0247+  04DB 66                              LD      H, (HL)
0248+  04DC 69                              LD      L, C
0249+  04DD 7B          _show_char          LD      A, E
0250+  04DE CD 86 04                        CALL    disp_bitmask
0251+  04E1 E1                              POP     HL
0252+  04E2 23                              INC     HL
0253+  04E3 C3 BC 04                        JP      disp_string
0254+  04E6             
0255+  04E6             ; Clear the display
0256+  04E6             ;
0257+  04E6 3E 00       disp_clear          LD      A, 0
0258+  04E8 21 00 00                        LD      HL, 0
0259+  04EB CD 86 04    _clear_loop         CALL    disp_bitmask
0260+  04EE FE 18                           CP      24
0261+  04F0 C2 EB 04                        JP      NZ, _clear_loop
0262+  04F3 C9                              RET
0263+  04F4             
0264+  04F4                                 .MODULE main0182   04F4                                 .INCLUDE font.asm
0001+  04F4             ;
0002+  04F4             ; Font definition
0003+  04F4             ;
0004+  04F4             ;
0005+  04F4             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0006+  04F4             ;
0007+  04F4             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0008+  04F4             ;
0009+  04F4             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0010+  04F4             ; of this software and associated documentation files (the "Software"), to deal
0011+  04F4             ; in the Software without restriction, including without limitation the rights
0012+  04F4             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0013+  04F4             ; copies of the Software, and to permit persons to whom the Software is
0014+  04F4             ; furnished to do so, subject to the following conditions:
0015+  04F4             ; 
0016+  04F4             ; The above copyright notice and this permission notice shall be included in all
0017+  04F4             ; copies or substantial portions of the Software.
0018+  04F4             ; 
0019+  04F4             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0020+  04F4             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0021+  04F4             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0022+  04F4             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0023+  04F4             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0024+  04F4             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0025+  04F4             ; SOFTWARE.
0026+  04F4             ;
0027+  04F4             
0028+  04F4             INVALID_CHAR_BITMASK    .EQU 04861h
0029+  04F4             
0030+  04F4             font
0031+  04F4 00 00                           .dw     0000h
0032+  04F6 00 49                           .dw     4900h   ; !
0033+  04F8 02 02                           .dw     0202h   ; "
0034+  04FA CE 12                           .dw     12ceh   ; #
0035+  04FC ED 12                           .dw     12edh   ; $
0036+  04FE E4 2D                           .dw     2de4h   ; %
0037+  0500 59 0B                           .dw     0b59h   ; &
0038+  0502 00 02                           .dw     0200h   ; '
0039+  0504 00 0C                           .dw     0c00h   ; (
0040+  0506 00 21                           .dw     2100h   ; )
0041+  0508 C0 3F                           .dw     3fc0h   ; *
0042+  050A C0 12                           .dw     12c0h   ; +
0043+  050C 00 20                           .dw     2000h   ; ,
0044+  050E C0 00                           .dw     00c0h   ; -
0045+  0510 00 40                           .dw     4000h   ; .
0046+  0512 00 24                           .dw     2400h   ; /
0047+  0514             
0048+  0514 3F 24                           .dw     243fh   ; 0
0049+  0516 06 04                           .dw     0406h   ; 1
0050+  0518 DB 00                           .dw     00dbh   ; 2
0051+  051A 8F 00                           .dw     008fh   ; 3
0052+  051C E6 00                           .dw     00e6h   ; 4
0053+  051E 69 08                           .dw     0869h   ; 5
0054+  0520 FD 00                           .dw     00fdh   ; 6
0055+  0522 01 14                           .dw     1401h   ; 7
0056+  0524 FF 00                           .dw     00ffh   ; 8
0057+  0526 EF 00                           .dw     00efh   ; 9
0058+  0528 40 00                           .dw     0040h   ; :
0059+  052A 00 22                           .dw     2200h   ; ;
0060+  052C 40 0C                           .dw     0c40h   ; <
0061+  052E C8 00                           .dw     00c8h   ; = 
0062+  0530 80 21                           .dw     2180h   ; >
0063+  0532 83 50                           .dw     5083h   ; ?
0064+  0534             
0065+  0534 BB 02                           .dw     02bbh   ; @
0066+  0536 F7 00                           .dw     00f7h   ; A
0067+  0538 8F 12                           .dw     128fh   ; B
0068+  053A 39 00                           .dw     0039h   ; C
0069+  053C 0F 12                           .dw     120fh   ; D
0070+  053E 79 00                           .dw     0079h   ; E
0071+  0540 71 00                           .dw     0071h   ; F
0072+  0542 BD 00                           .dw     00bdh   ; G
0073+  0544 F6 00                           .dw     00f6h   ; H
0074+  0546 09 12                           .dw     1209h   ; I
0075+  0548 1E 00                           .dw     001eh   ; J
0076+  054A 70 0C                           .dw     0c70h   ; K
0077+  054C 38 00                           .dw     0038h   ; L
0078+  054E 36 05                           .dw     0536h   ; M
0079+  0550 36 09                           .dw     0936h   ; N
0080+  0552 3F 00                           .dw     003fh   ; O
0081+  0554             
0082+  0554 F3 00                           .dw     00f3h   ; P
0083+  0556 3F 08                           .dw     083fh   ; Q
0084+  0558 F3 08                           .dw     08f3h   ; R
0085+  055A ED 00                           .dw     00edh   ; S
0086+  055C 01 12                           .dw     1201h   ; T
0087+  055E 3E 00                           .dw     003eh   ; U
0088+  0560 30 24                           .dw     2430h   ; V
0089+  0562 36 28                           .dw     2836h   ; W
0090+  0564 00 2D                           .dw     2d00h   ; X
0091+  0566 EE 00                           .dw     00eeh   ; Y
0092+  0568 09 24                           .dw     2409h   ; Z
0093+  056A 39 00                           .dw     0039h   ; [
0094+  056C 00 09                           .dw     0900h   ; \
0095+  056E 0F 00                           .dw     000fh   ; ]
0096+  0570 00 28                           .dw     2800h   ; ^
0097+  0572 08 00                           .dw     0008h   ; _
0098+  0574             
0099+  0574 00 01                           .dw     0100h   ; `
0100+  0576 8C 20                           .dw     208ch   ; a
0101+  0578 78 08                           .dw     0878h   ; b
0102+  057A D8 00                           .dw     00d8h   ; c
0103+  057C 8E 20                           .dw     208eh   ; d 
0104+  057E 58 20                           .dw     2058h   ; e 
0105+  0580 C0 14                           .dw     14c0h   ; f
0106+  0582 8E 04                           .dw     048eh   ; g
0107+  0584 70 10                           .dw     1070h   ; h
0108+  0586 00 10                           .dw     1000h   ; i
0109+  0588 10 22                           .dw     2210h   ; j
0110+  058A 00 1E                           .dw     1e00h   ; k
0111+  058C 00 12                           .dw     1200h   ; l
0112+  058E D4 10                           .dw     10d4h   ; m
0113+  0590 50 10                           .dw     1050h   ; n
0114+  0592 DC 00                           .dw     00dch   ; o
0115+  0594             
0116+  0594 70 01                           .dw     0170h   ; p
0117+  0596 86 04                           .dw     0486h   ; q
0118+  0598 50 00                           .dw     0050h   ; r
0119+  059A 88 08                           .dw     0888h   ; s
0120+  059C 78 00                           .dw     0078h   ; t
0121+  059E 1C 00                           .dw     001ch   ; u
0122+  05A0 10 20                           .dw     2010h   ; v
0123+  05A2 14 28                           .dw     2814h   ; w
0124+  05A4 00 2D                           .dw     2d00h   ; x
0125+  05A6 8E 02                           .dw     028eh   ; y
0126+  05A8 48 20                           .dw     2048h   ; z
0127+  05AA 49 21                           .dw     2149h   ; {
0128+  05AC 00 12                           .dw     1200h   ; |
0129+  05AE 89 0C                           .dw     0c89h   ; }
0130+  05B0 C0 24                           .dw     24c0h   ; ~
0131+  05B2 00 00                           .dw     0000h   ; 0183   05B4                                 .INCLUDE  i2c.asm
0001+  05B4             ; ============================================ I2C Routines =================================================
0002+  05B4             ; Software driven I2C for Z80 PIO
0003+  05B4             ;
0004+  05B4             ; Assume I2C clock is on Port B bit 6
0005+  05B4             ;            data is on Port B bit 7
0006+  05B4             ;
0007+  05B4             ;
0008+  05B4             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0009+  05B4             ;
0010+  05B4             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0011+  05B4             ;
0012+  05B4             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0013+  05B4             ; of this software and associated documentation files (the "Software"), to deal
0014+  05B4             ; in the Software without restriction, including without limitation the rights
0015+  05B4             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0016+  05B4             ; copies of the Software, and to permit persons to whom the Software is
0017+  05B4             ; furnished to do so, subject to the following conditions:
0018+  05B4             ; 
0019+  05B4             ; The above copyright notice and this permission notice shall be included in all
0020+  05B4             ; copies or substantial portions of the Software.
0021+  05B4             ; 
0022+  05B4             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0023+  05B4             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0024+  05B4             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0025+  05B4             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0026+  05B4             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0027+  05B4             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0028+  05B4             ; SOFTWARE.
0029+  05B4             ;
0030+  05B4                                 .MODULE i2c
0031+  05B4             
0032+  05B4 3E CF       init_portb          LD      A, PIO_MODE_3           ; Port B mode 3
0033+  05B6 32 00 FF                        LD      (port_b_mode), A
0034+  05B9 D3 13                           OUT     (PIO_B_CTRL), A
0035+  05BB             
0036+  05BB 3E FF                           LD      A, PORT_B_IOMASK        ;
0037+  05BD 32 01 FF                        LD      (port_b_dir), A
0038+  05C0 D3 13                           OUT     (PIO_B_CTRL), A
0039+  05C2             
0040+  05C2 3E 3F                           LD      A, 03Fh                 ; All bits high apart from D7, D6
0041+  05C4 32 02 FF                        LD      (port_b_data),A
0042+  05C7 D3 11                           OUT     (PIO_B_DATA), A         ; Changing D7 or D6 to an output will drive the lines low
0043+  05C9 C9                              RET
0044+  05CA             
0045+  05CA             ; Reset the bus
0046+  05CA             ;
0047+  05CA             ; Uses A, B, D
0048+  05CA 06 0A       i2c_bus_reset       LD      B, 0ah          ; ten cycles
0049+  05CC CD DF 06    _loop_b             CALL    i2c_scl_cycle
0050+  05CF 10 FB                           DJNZ    _loop_b
0051+  05D1 CD CF 06                        CALL    i2c_scl_high
0052+  05D4 06 F0                           LD      B, 0F0h
0053+  05D6 10 FE                           DJNZ    $
0054+  05D8 C9                              RET
0055+  05D9             
0056+  05D9             ;
0057+  05D9             ; Uses A
0058+  05D9 CD AF 06    i2c_start           CALL    i2c_sda_high
0059+  05DC CD CF 06                        CALL    i2c_scl_high
0060+  05DF CD BF 06                        CALL    i2c_sda_low     ; Drive data low
0061+  05E2 C3 9F 06                        JP      i2c_scl_low     ; Drive clock low
0062+  05E5             
0063+  05E5             
0064+  05E5             ;
0065+  05E5             ; Read a byte from Device address H, Register L into A
0066+  05E5             ; Calls i2c_start, sets address, reads byte and then calls i2c_stop
0067+  05E5             ; Returns With Carry SET and A containing the register value, or Carry CLEAR if no acknowledge
0068+  05E5             ; Uses A, B, C, D, H, L
0069+  05E5             ; Preserves H, L
0070+  05E5 CD FF 05    i2c_read_byte       CALL    i2c_read_from
0071+  05E8                                 ; Fall through into stop
0072+  05E8                             
0073+  05E8             ;
0074+  05E8             ; Uses A
0075+  05E8 CD BF 06    i2c_stop            CALL    i2c_sda_low     ; Drive data low
0076+  05EB CD CF 06                        CALL    i2c_scl_high
0077+  05EE C3 AF 06                        JP      i2c_sda_high
0078+  05F1             
0079+  05F1             ; Write a byte in C to Device address H, register L
0080+  05F1             ; Returns with Carry SET if OK, CLEAR if no acknowledgement
0081+  05F1             ; Calls i2c_stop when done..
0082+  05F1             ;
0083+  05F1             ; Preserves H, L
0084+  05F1 C5          i2c_write_byte      PUSH    BC
0085+  05F2 CD 20 06                        CALL    i2c_write_to
0086+  05F5 C1                              POP     BC
0087+  05F6 D2 E8 05                        JP      NC, i2c_stop
0088+  05F9 79                              LD      A, C
0089+  05FA CD 34 06                        CALL    i2c_write
0090+  05FD 18 E9                           JR      i2c_stop
0091+  05FF                                 
0092+  05FF             ;
0093+  05FF             ; Read a byte from Device address H, Register L
0094+  05FF             ; Calls i2c_start, but does NOT call i2c_stop
0095+  05FF             ; Returns With Carry SET and A containing the register value, or Carry CLEAR if no acknowledge
0096+  05FF             ; Uses A, B, C, D, H, L
0097+  05FF             ; Preserves H, L
0098+  05FF CD D9 05    i2c_read_from       CALL    i2c_start
0099+  0602 7C                              LD      A, H
0100+  0603 CD 32 06                        CALL    i2c_address_w
0101+  0606 30 17                           JR      NC, _read_end
0102+  0608 7D                              LD      A, L
0103+  0609 CD 34 06                        CALL    i2c_write
0104+  060C 30 11                           JR      NC, _read_end
0105+  060E 06 32                           LD      B, 50
0106+  0610 10 FE       _read_pause         DJNZ    _read_pause
0107+  0612 CD D9 05                        CALL    i2c_start
0108+  0615 7C                              LD      A, H
0109+  0616 CD 2C 06                        CALL    i2c_address_r
0110+  0619 30 04                           JR      NC, _read_end
0111+  061B CD 41 06                        CALL    i2c_read
0112+  061E 37                              SCF
0113+  061F C9          _read_end           RET
0114+  0620             
0115+  0620             
0116+  0620             ;
0117+  0620             ; Prepare to write to Device address H, Register L
0118+  0620             ; Calls i2c_start, but does NOT call i2c_stop
0119+  0620             ; Returns with Carry SET if OK, CLEAR if no acknowledgement
0120+  0620             ;
0121+  0620             ; Preserves H, L
0122+  0620 CD D9 05    i2c_write_to        CALL    i2c_start
0123+  0623 7C                              LD      A, H
0124+  0624 CD 32 06                        CALL    i2c_address_w
0125+  0627 D0                              RET     NC
0126+  0628 7D                              LD      A, L
0127+  0629 C3 34 06                        JP      i2c_write
0128+  062C             
0129+  062C             ; Start reading from device address held in A
0130+  062C             ;
0131+  062C             ; Uses A, B, C, D
0132+  062C CB 27       i2c_address_r       SLA     A
0133+  062E F6 01                           OR      1
0134+  0630 18 02                           JR      i2c_write
0135+  0632             
0136+  0632             ; Start writing to device address held in A
0137+  0632             ;
0138+  0632             ; Uses A, B, C, D
0139+  0632 CB 27       i2c_address_w       SLA     A
0140+  0634             
0141+  0634             ; Write A as a byte to i2c bus
0142+  0634             ; Returns Carry CLEAR if no acknowledge
0143+  0634             ;
0144+  0634             ; Uses A, B, C, D
0145+  0634 CD 5C 06    i2c_write           CALL    i2c_send_byte
0146+  0637 CB 7A                           BIT     I2C_DATA_BIT, D     ; D contains acknowledge bit
0147+  0639 37                              SCF
0148+  063A C8                              RET     Z               ; Return with carry set if acknowledge bit is low
0149+  063B             
0150+  063B CD E8 05                        CALL    i2c_stop        ; Stop bus if error
0151+  063E 37                              SCF
0152+  063F 3F                              CCF
0153+  0640 C9                              RET                     ; Clear carry if acknowledge is high
0154+  0641             
0155+  0641             ; Read byte from i2C into A, without ACK
0156+  0641             ;
0157+  0641             ; Uses A, B, C, D
0158+  0641 06 08       i2c_read            LD      B, 8h
0159+  0643 DB 11       _loop_r             IN      A, (PIO_B_DATA)
0160+  0645 37                              SCF
0161+  0646 CB 7F                           BIT     I2C_DATA_BIT, A
0162+  0648 20 01                           JR      NZ, _data_high
0163+  064A 3F                              CCF
0164+  064B CB 11       _data_high          RL      C
0165+  064D CD DF 06                        CALL    i2c_scl_cycle
0166+  0650 10 F1                           DJNZ    _loop_r
0167+  0652                                 ; CALL    i2c_scl_cycle
0168+  0652             
0169+  0652 79                              LD      A, C
0170+  0653 C9                              RET
0171+  0654             
0172+  0654             ;
0173+  0654             ; Send an ACK..
0174+  0654             ;
0175+  0654 CD BF 06    i2c_ack             CALL    i2c_sda_low
0176+  0657 CD DF 06                        CALL    i2c_scl_cycle
0177+  065A 18 53                           JR      i2c_sda_high
0178+  065C             
0179+  065C             ;
0180+  065C             ; Send a byte in A, returning the ACK state in D
0181+  065C             ; Uses A, B, C,
0182+  065C             ;
0183+  065C E5          i2c_send_byte       PUSH    HL
0184+  065D D5                              PUSH    DE
0185+  065E 2A 00 FF                        LD      HL, (port_b_mode)           ; L = port_b_mode, H = port_b_dir
0186+  0661 57                              LD      D, A
0187+  0662                                 
0188+  0662 3E 3F                           LD      A, ~(I2C_DATA_MASK|I2C_CLK_MASK)           ; Set SDA and SCL (port_b_dir bit) LOW
0189+  0664 A4                              AND     H
0190+  0665 CB 27                           SLA     A
0191+  0667 67                              LD      H, A
0192+  0668             
0193+  0668 0E 13                           LD      C, PIO_B_CTRL
0194+  066A 06 08                           LD      B, 8
0195+  066C             
0196+  066C 1E 40                           LD      E, I2C_CLK_MASK
0197+  066E             
0198+  066E 7C          _fast_loop          LD      A, H
0199+  066F CB 22                           SLA     D
0200+  0671 CB 1F                           RR      A
0201+  0673 ED 69                           OUT     (C),L
0202+  0675 D3 13                           OUT     (PIO_B_CTRL), A
0203+  0677             
0204+  0677 B3                              OR      E
0205+  0678 ED 69                           OUT     (C), L
0206+  067A D3 13                           OUT     (PIO_B_CTRL), A                 ; Clock high
0207+  067C             
0208+  067C AB                              XOR     E
0209+  067D ED 69                           OUT     (C), L
0210+  067F D3 13                           OUT     (PIO_B_CTRL),A                  ; Clock low
0211+  0681 10 EB                           DJNZ    _fast_loop
0212+  0683             
0213+  0683 7C                              LD      A, H
0214+  0684 37                              SCF
0215+  0685 CB 1F                           RR      A
0216+  0687 ED 69                           OUT     (C),L                           ; Release SDA
0217+  0689 D3 13                           OUT     (PIO_B_CTRL), A
0218+  068B             
0219+  068B B3                              OR      E
0220+  068C ED 69                           OUT     (C), L
0221+  068E D3 13                           OUT     (PIO_B_CTRL), A                 ; Clock high
0222+  0690             
0223+  0690 ED 69                           OUT     (C), L
0224+  0692 AB                              XOR     E
0225+  0693 6F                              LD      L, A
0226+  0694 32 01 FF                        LD      (port_b_dir), A
0227+  0697             
0228+  0697 DB 11                           IN      A, (PIO_B_DATA)                 ; Read ACK
0229+  0699 ED 69                           OUT     (C),L                           ; Clock low
0230+  069B             
0231+  069B D1                              POP     DE
0232+  069C E1                              POP     HL
0233+  069D 57                              LD      D, A
0234+  069E C9                              RET
0235+  069F             
0236+  069F             ; SCL/SDA toggle routines
0237+  069F             ;
0238+  069F             ; All use A
0239+  069F 3A 00 FF    i2c_scl_low         LD      A, (port_b_mode)
0240+  06A2 D3 13                           OUT     (PIO_B_CTRL), A
0241+  06A4             
0242+  06A4 3A 01 FF                        LD      A, (port_b_dir)
0243+  06A7 CB B7                           RES     I2C_CLK_BIT, A
0244+  06A9 D3 13                           OUT     (PIO_B_CTRL), A
0245+  06AB 32 01 FF                        LD      (port_b_dir), A
0246+  06AE C9                              RET
0247+  06AF             
0248+  06AF 3A 00 FF    i2c_sda_high        LD      A, (port_b_mode)
0249+  06B2 D3 13                           OUT     (PIO_B_CTRL), A
0250+  06B4             
0251+  06B4 3A 01 FF                        LD      A, (port_b_dir)
0252+  06B7 CB FF                           SET     I2C_DATA_BIT, A
0253+  06B9 D3 13                           OUT     (PIO_B_CTRL), A
0254+  06BB 32 01 FF                        LD      (port_b_dir), A
0255+  06BE C9                              RET
0256+  06BF             
0257+  06BF 3A 00 FF    i2c_sda_low         LD      A, (port_b_mode)
0258+  06C2 D3 13                           OUT     (PIO_B_CTRL), A
0259+  06C4             
0260+  06C4 3A 01 FF                        LD      A, (port_b_dir)
0261+  06C7 CB BF                           RES     I2C_DATA_BIT, A
0262+  06C9 D3 13                           OUT     (PIO_B_CTRL), A
0263+  06CB 32 01 FF                        LD      (port_b_dir), A
0264+  06CE C9                              RET
0265+  06CF             
0266+  06CF 3A 00 FF    i2c_scl_high        LD      A, (port_b_mode)
0267+  06D2 D3 13                           OUT     (PIO_B_CTRL), A
0268+  06D4             
0269+  06D4 3A 01 FF                        LD      A, (port_b_dir)
0270+  06D7 CB F7                           SET     I2C_CLK_BIT, A
0271+  06D9 D3 13                           OUT     (PIO_B_CTRL), A
0272+  06DB 32 01 FF                        LD      (port_b_dir), A
0273+  06DE C9                              RET
0274+  06DF             
0275+  06DF C5          i2c_scl_cycle       PUSH   BC
0276+  06E0 01 13 00                        LD     BC, PIO_B_CTRL
0277+  06E3 3A 00 FF                        LD     A, (port_b_mode)
0278+  06E6 57                              LD     D, A
0279+  06E7 3A 01 FF                        LD     A, (port_b_dir)
0280+  06EA             
0281+  06EA CB B7                           RES    I2C_CLK_BIT, A
0282+  06EC 32 01 FF                        LD     (port_b_dir), A
0283+  06EF ED 51                           OUT    (C), D
0284+  06F1 D3 13                           OUT    (PIO_B_CTRL), A
0285+  06F3                                 
0286+  06F3 CB F7                           SET    I2C_CLK_BIT, A
0287+  06F5 ED 51                           OUT    (C), D
0288+  06F7 D3 13                           OUT    (PIO_B_CTRL), A
0289+  06F9                                 
0290+  06F9 DB 11                           IN     A, (PIO_B_DATA)
0291+  06FB ED 51                           OUT    (C), D
0292+  06FD 57                              LD     D, A
0293+  06FE 3A 01 FF                        LD     A, (port_b_dir)
0294+  0701 D3 13                           OUT    (PIO_B_CTRL), A
0295+  0703 C1                              POP    BC
0296+  0704 C9                              RET
0297+  0705             
0298+  0705                                 .MODULE main
0184   0705                                 .INCLUDE  io.asm
0001+  0705             ;
0002+  0705             ; I/O routines.. specifically keyboard and serial
0003+  0705             ;
0004+  0705             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0005+  0705             ;
0006+  0705             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0007+  0705             ;
0008+  0705             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0009+  0705             ; of this software and associated documentation files (the "Software"), to deal
0010+  0705             ; in the Software without restriction, including without limitation the rights
0011+  0705             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0012+  0705             ; copies of the Software, and to permit persons to whom the Software is
0013+  0705             ; furnished to do so, subject to the following conditions:
0014+  0705             ; 
0015+  0705             ; The above copyright notice and this permission notice shall be included in all
0016+  0705             ; copies or substantial portions of the Software.
0017+  0705             ; 
0018+  0705             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0019+  0705             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0020+  0705             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0021+  0705             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0022+  0705             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0023+  0705             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0024+  0705             ; SOFTWARE.
0025+  0705             ;
0026+  0705             
0027+  0705             
0028+  0705 21 08 FF    keyboard_init       LD      HL, keyboard_state
0029+  0708 06 20                           LD      B, io_data_end - keyboard_state
0030+  070A AF                              XOR     A
0031+  070B 77          _init_loop          LD      (HL),A
0032+  070C 23                              INC     HL
0033+  070D 05                              DEC     B
0034+  070E 20 FB                           JR      NZ, _init_loop
0035+  0710 AF                              XOR     A
0036+  0711 32 27 FF                        LD      (input_size),A
0037+  0714 32 26 FF                        LD      (input_free),A
0038+  0717 32 25 FF                        LD      (input_pos),A
0039+  071A C9                              RET
0040+  071B             
0041+  071B             ; Poll the keyboard, adding raw codes to the keyboard_state buffer, and decoded characters to the input_buffer
0042+  071B             ;
0043+  071B 01 00 FD    keyboard_poll       LD      BC, 0FD00h          ; Check shift key
0044+  071E 3A 12 FF                        LD      A, (key_shift_state)
0045+  0721 E6 FC                           AND     ~(KEY_SHIFT_BIT | KEY_CTRL_BIT)
0046+  0723 57                              LD      D, A
0047+  0724             
0048+  0724 ED 78                           IN      A, (C)
0049+  0726 E6 20                           AND     020h
0050+  0728 20 04                           JR      NZ, _check_ctrl_key
0051+  072A 3E 01                           LD      A, KEY_SHIFT_BIT
0052+  072C B2                              OR      D
0053+  072D 57                              LD      D, A
0054+  072E             
0055+  072E 01 00 FE    _check_ctrl_key     LD      BC, 0FE00h          ; Keyboard row 0
0056+  0731 ED 78                           IN      A, (C)
0057+  0733 E6 10                           AND     010h
0058+  0735 20 04                           JR      NZ, _store_modifiers
0059+  0737 3E 02                           LD      A, KEY_CTRL_BIT
0060+  0739 B2                              OR      D
0061+  073A 57                              LD      D, A
0062+  073B             
0063+  073B 7A          _store_modifiers    LD      A, D
0064+  073C 32 12 FF                        LD      (key_shift_state), A
0065+  073F             
0066+  073F             
0067+  073F 21 A9 08                        LD      HL, keyboard
0068+  0742 ED 78       _poll_loop          IN      A, (C)              ; BC -> Keyboard row port..
0069+  0744 16 01                           LD      D, 1                ; D -> Current Bit
0070+  0746 5F                              LD      E, A                ; E -> Key row bit set
0071+  0747 22 10 FF    _next_key           LD      (keyboard_pos), HL
0072+  074A A2                              AND     D
0073+  074B 20 3F                           JR      NZ, _released
0074+  074D                                                             ; Key is pressed... add it to state buffer
0075+  074D C5                              PUSH    BC
0076+  074E 7E                              LD      A, (HL)             ; Raw key code in A
0077+  074F             
0078+  074F 21 08 FF                        LD      HL, keyboard_state
0079+  0752 06 08                           LD      B, _key_state_size
0080+  0754 BE          _check_pressed      CP      (HL)
0081+  0755 CA A5 07                        JP      Z, _do_nothing      ; Key already in state table - nothing to do..
0082+  0758 23                              INC     HL
0083+  0759 05                              DEC     B
0084+  075A 20 F8                           JR      NZ, _check_pressed
0085+  075C                                                             ; Key wasn't pressed, so add it to the first free slot
0086+  075C 21 08 FF                        LD      HL, keyboard_state
0087+  075F 06 08                           LD      B, _key_state_size
0088+  0761 4F                              LD      C, A
0089+  0762 AF                              XOR     A
0090+  0763 BE          _find_free          CP      (HL)
0091+  0764 28 07                           JR      Z, _key_pressed
0092+  0766 23                              INC     HL
0093+  0767 05                              DEC     B
0094+  0768 20 F9                           JR      NZ, _find_free
0095+  076A C3 A5 07                        JP      _do_nothing         ; No free slots, so ignore the key
0096+  076D             
0097+  076D 71          _key_pressed        LD      (HL), C             ; Found free slot, store the raw key code
0098+  076E             
0099+  076E                                 ; Reset repeat counter       
0100+  076E             
0101+  076E 2A 10 FF                        LD      HL, (keyboard_pos)  ; Get the current keyboard character location
0102+  0771 01 30 00                        LD      BC, _keyboard_size
0103+  0774 3A 12 FF                        LD      A, (key_shift_state)
0104+  0777 A7                              AND     A
0105+  0778 28 04                           JR      Z, _got_keycode
0106+  077A 09          _modifier_offset    ADD     HL, BC
0107+  077B 3D                              DEC     A
0108+  077C 20 FC                           JR      NZ, _modifier_offset
0109+  077E             
0110+  077E 7E          _got_keycode        LD      A, (HL) 
0111+  077F 32 13 FF                        LD      (last_keycode), A
0112+  0782 CD D5 07                        CALL    _store_key
0113+  0785 AF                              XOR     A
0114+  0786 32 14 FF                        LD      (key_repeat_time), A
0115+  0789             
0116+  0789 C1                              POP     BC
0117+  078A 18 1A                           JR      _poll_next
0118+  078C             
0119+  078C                                                             ; Key is not pressed... remove it from the state buffer if it was pressed (key up event)
0120+  078C                                                             ; TODO: This is rather inefficient...
0121+  078C C5          _released           PUSH    BC
0122+  078D 7E                              LD      A, (HL)             ; Raw key code in A
0123+  078E A7                              AND     A
0124+  078F 28 14                           JR      Z, _do_nothing      ; Ignore character zero
0125+  0791             
0126+  0791 21 08 FF                        LD      HL, keyboard_state
0127+  0794 06 08                           LD      B, _key_state_size
0128+  0796 BE          _check_released     CP      (HL)
0129+  0797 28 06                           JR      Z, _handle_release
0130+  0799 23                              INC     HL
0131+  079A 05                              DEC     B
0132+  079B 20 F9                           JR      NZ, _check_released
0133+  079D 18 06                           JR      _do_nothing         ; Code not in state buffer, not released
0134+  079F             
0135+  079F 4F          _handle_release     LD      C, A
0136+  07A0 AF                              XOR     A
0137+  07A1 77                              LD      (HL), A             ; Remove it from the buffer 
0138+  07A2 32 13 FF                        LD      (last_keycode), A
0139+  07A5                                                             ; TODO: We should probably tell someone about this...
0140+  07A5 C1          _do_nothing         POP     BC
0141+  07A6             
0142+  07A6 2A 10 FF    _poll_next          LD      HL, (keyboard_pos)
0143+  07A9 7B                              LD      A, E                ; Get the bitmask back
0144+  07AA 23                              INC     HL
0145+  07AB CB 22                           SLA     D
0146+  07AD CB 72                           BIT     6, D
0147+  07AF CA 47 07                        JP      Z, _next_key
0148+  07B2             
0149+  07B2 CB 00                           RLC     B                   ; Move to the next key row
0150+  07B4 3E FE                           LD      A, 0FEh
0151+  07B6 B8                              CP      B
0152+  07B7 C2 42 07                        JP      NZ, _poll_loop
0153+  07BA             
0154+  07BA 3A 13 FF                        LD      A, (last_keycode)
0155+  07BD A7                              AND     A
0156+  07BE C8                              RET     Z
0157+  07BF 3A 14 FF                        LD      A, (key_repeat_time)
0158+  07C2 3C                              INC     A
0159+  07C3 32 14 FF                        LD      (key_repeat_time), A
0160+  07C6 FE 28                           CP      KEY_REPEAT_DELAY
0161+  07C8 28 08                           JR      Z, _do_repeat
0162+  07CA FE 2F                           CP      KEY_REPEAT_AFTER
0163+  07CC C0                              RET     NZ
0164+  07CD 3E 28                           LD      A, KEY_REPEAT_DELAY
0165+  07CF 32 14 FF                        LD      (key_repeat_time),A
0166+  07D2 3A 13 FF    _do_repeat          LD      A, (last_keycode)
0167+  07D5             
0168+  07D5             
0169+  07D5             ; Store the decoded keycode in A to the relevant buffer...
0170+  07D5 4F          _store_key          LD      C, A
0171+  07D6 E6 F8                           AND     CTRL_KEY_MASK       ; Check for special control characters 
0172+  07D8 FE 90                           CP      CTRL_KEY_CHECK
0173+  07DA 20 05                           JR      NZ, _get_key
0174+  07DC             
0175+  07DC 79                              LD      A, C                ; Store them in a separate location
0176+  07DD 32 29 FF                        LD      (control_key_pressed), A
0177+  07E0 C9                              RET
0178+  07E1                                                             ; Write the character to the input buffer
0179+  07E1 79          _get_key            LD      A, C                ; Get the actual character...
0180+  07E2 A7                              AND     A                   ; Skip blank character codes
0181+  07E3 C8                              RET     Z
0182+  07E4             
0183+  07E4 6F                              LD      L, A                ; Store it in L
0184+  07E5             
0185+  07E5 3A 27 FF                        LD      A, (input_size)     ; Now check we have space
0186+  07E8 FE 10                           CP      _input_buffer_size
0187+  07EA C8                              RET     Z
0188+  07EB             
0189+  07EB 3C                              INC     A
0190+  07EC 32 27 FF                        LD      (input_size), A
0191+  07EF             
0192+  07EF 06 00                           LD      B, 0
0193+  07F1 3A 26 FF                        LD      A, (input_free)
0194+  07F4 4F                              LD      C, A
0195+  07F5 7D                              LD      A, L                ; Get the character from L
0196+  07F6 21 15 FF                        LD      HL, input_buffer
0197+  07F9 09                              ADD     HL, BC
0198+  07FA 77                              LD      (HL), A             ; Store the character
0199+  07FB             
0200+  07FB 0C                              INC     C                   ; Point to next byte in input
0201+  07FC 3E 0F                           LD      A, 0Fh
0202+  07FE A1                              AND     C
0203+  07FF 32 26 FF                        LD      (input_free), A
0204+  0802 C9                              RET
0205+  0803             
0206+  0803             ;
0207+  0803             ; Reads the next available character in A, returning that or 0 if none are available
0208+  0803             ; Z flag is set if no character
0209+  0803             ; Uses HL, BC, A
0210+  0803 3A 27 FF    read_character      LD      A, (input_size)
0211+  0806 A7                              AND     A
0212+  0807 C8                              RET     Z
0213+  0808             
0214+  0808 F3                              DI                          ; Make sure we don't get into a race condition..
0215+  0809 3A 27 FF                        LD      A, (input_size)
0216+  080C 3D                              DEC     A
0217+  080D 32 27 FF                        LD      (input_size),A
0218+  0810 3A 25 FF                        LD      A, (input_pos)
0219+  0813 4F                              LD      C, A
0220+  0814 3C                              INC     A
0221+  0815 E6 0F                           AND     0Fh
0222+  0817 32 25 FF                        LD      (input_pos),A
0223+  081A 06 00                           LD      B, 0
0224+  081C 21 15 FF                        LD      HL, input_buffer
0225+  081F 09                              ADD     HL, BC
0226+  0820 7E                              LD      A, (HL)
0227+  0821 B7                              OR      A
0228+  0822 FB                              EI
0229+  0823 C9                              RET
0230+  0824                                 
0231+  0824             ;;
0232+  0824             ; D = Octave 2-6
0233+  0824             ; E = Note 0-11
0234+  0824             ; C = 1-15 duration, ~tenths of a second
0235+  0824             ;
0236+  0824 3E 07       play_note           LD      A, 7
0237+  0826 92                              SUB     D
0238+  0827 16 00                           LD      D, 0
0239+  0829 21 6B 08                        LD      HL, _note_table
0240+  082C 19                              ADD     HL, DE
0241+  082D 19                              ADD     HL, DE
0242+  082E             
0243+  082E 5E                              LD      E, (HL)
0244+  082F 23                              INC     HL
0245+  0830 56                              LD      D, (HL)
0246+  0831             
0247+  0831 A7          _note_octave        AND     A
0248+  0832 28 07                           JR      Z, _note_shifted
0249+  0834             
0250+  0834 CB 3A                           SRL     D
0251+  0836 CB 1B                           RR      E
0252+  0838 3D                              DEC     A
0253+  0839 18 F6                           JR      _note_octave
0254+  083B             
0255+  083B 41          _note_shifted       LD      B, C
0256+  083C 4F                              LD      C, A        ; A is zero from previous octave calc
0257+  083D CB 20                           SLA     B    
0258+  083F CB 20                           SLA     B    
0259+  0841 CB 20                           SLA     B    
0260+  0843 CB 20                           SLA     B           ; Now BC = 4096 * C
0261+  0845             
0262+  0845 DB 24                           IN      A, (AUDIO_PORT)
0263+  0847 32 58 08                        LD      (_tone_val+1), A
0264+  084A F3                              DI
0265+  084B             
0266+  084B             _tone_loop          ; 186 T-states          
0267+  084B 19                              ADD     HL, DE              ; 11
0268+  084C 1F                              RRA                         ; 4   Carry into bit 7
0269+  084D CB 2F                           SRA     A                   ; 8   Copy to bit 6
0270+  084F CB 2F                           SRA     A                   ; 8   ..5
0271+  0851 CB 2F                           SRA     A                   ; 8   ..4
0272+  0853 CB 2F                           SRA     A                   ; 8   ..3
0273+  0855             
0274+  0855 E6 08                           AND     AUDIO_MASK          ; 7
0275+  0857 EE 00       _tone_val           XOR     0                   ; 7
0276+  0859 32 58 08                        LD      (_tone_val+1), A    ; 13
0277+  085C             
0278+  085C D3 24                           OUT     (AUDIO_PORT),A      ; 12
0279+  085E             
0280+  085E 78                              LD      A, B                ; 4
0281+  085F 06 05                           LD      B, 5                ; 7
0282+  0861 10 FE                           DJNZ    $                   ; 4 * 13 + 7 = 59
0283+  0863 47                              LD      B, A                ; 4
0284+  0864             
0285+  0864 0B                              DEC     BC                  ; 6
0286+  0865 78                              LD      A, B                ; 4
0287+  0866 B1                              OR      C                   ; 4
0288+  0867 20 E2                           JR      NZ, _tone_loop      ; 12
0289+  0869             
0290+  0869 FB                              EI
0291+  086A C9                              RET
0292+  086B             
0293+  086B EB 18       _note_table         .DW 6379
0294+  086D 65 1A                           .DW 6757
0295+  086F F6 1B                           .DW 7158
0296+  0871 A1 1D                           .DW 7585
0297+  0873 63 1F                           .DW 8035
0298+  0875 40 21                           .DW 8512
0299+  0877 3F 23                           .DW 9023
0300+  0879 51 25                           .DW 9553
0301+  087B 8C 27                           .DW 10124
0302+  087D EA 29                           .DW 10730
0303+  087F 60 2C                           .DW 11360
0304+  0881 0D 2F                           .DW 12045
0305+  0883 00 00                           .DW 0
0306+  0885             
0307+  0885             ;
0308+  0885             ; Get the next key press
0309+  0885             ;
0310+  0885 CD 03 08    get_key             CALL    read_character
0311+  0888 06 00                           LD      B, 0
0312+  088A 10 FE                           DJNZ    $
0313+  088C 28 F7                           JR      Z, get_key
0314+  088E C9                              RET
0315+  088F             ;
0316+  088F             ; Wait for a key to be pressed and released
0317+  088F             ;
0318+  088F             ;
0319+  088F CD 03 08    wait_for_key        CALL    read_character
0320+  0892 06 00                           LD      B, 0
0321+  0894 10 FE                           DJNZ    $
0322+  0896 28 F7                           JR      Z, wait_for_key
0323+  0898             
0324+  0898             ;
0325+  0898             ; wait until there are no keys being pressed
0326+  0898             ;
0327+  0898             ;
0328+  0898 CD 03 08    wait_no_keys        CALL    read_character
0329+  089B 20 FB                           JR      NZ, wait_no_keys
0330+  089D 01 00 00                        LD      BC, 0h              ; Make sure key is released
0331+  08A0 ED 78                           IN      A, (C)
0332+  08A2 E6 3F                           AND     03Fh
0333+  08A4 FE 3F                           CP      03Fh
0334+  08A6 20 F0                           JR      NZ, wait_no_keys
0335+  08A8 C9                              RET
0336+  08A9             
0337+  08A9             ; Non-printing key codes
0338+  08A9             ;
0339+  08A9             KEY_ENTER       .EQU    13
0340+  08A9             KEY_DELETE      .EQU    127
0341+  08A9             KEY_CTRL_C      .EQU    03h
0342+  08A9             KEY_CTRL_E      .EQU    05h
0343+  08A9             
0344+  08A9             KEY_CTRL_P      .EQU    10h
0345+  08A9             KEY_CTRL_R      .EQU    12h
0346+  08A9             KEY_CTRL_S      .EQU    13h
0347+  08A9             KEY_CTRL_U      .EQU    15h
0348+  08A9             KEY_CTRL_X      .EQU    18h
0349+  08A9             KEY_CTRL_Z      .EQU    1Ah
0350+  08A9             
0351+  08A9             KEY_BACKSPACE   .EQU    08h
0352+  08A9             
0353+  08A9             ; Modifier and special keys have key codes with the top bit set..
0354+  08A9             ;
0355+  08A9             KEY_UP          .EQU    128
0356+  08A9             KEY_DOWN        .EQU    129
0357+  08A9             KEY_LEFT        .EQU    130
0358+  08A9             KEY_RIGHT       .EQU    131
0359+  08A9             KEY_SHIFT       .EQU    132
0360+  08A9             KEY_CTRL        .EQU    134
0361+  08A9             
0362+  08A9             ; 144 = 90h
0363+  08A9             ;
0364+  08A9             CTRL_KEY_MASK   .EQU    0F8h
0365+  08A9             CTRL_KEY_CHECK  .EQU    090h
0366+  08A9             
0367+  08A9             KEY_CTRL_UP     .EQU    144             ; These characters start on an exact multiple of 8 so they 
0368+  08A9             KEY_CTRL_DOWN   .EQU    145             ; Can easily be detected
0369+  08A9             KEY_CTRL_LEFT   .EQU    146
0370+  08A9             KEY_CTRL_RIGHT  .EQU    147
0371+  08A9             KEY_CTRL_ENTER  .EQU    148
0372+  08A9             KEY_CTRL_SPACE  .EQU    149 
0373+  08A9             
0374+  08A9             _keyboard_size  .EQU    48
0375+  08A9             
0376+  08A9             KEY_SHIFT_BIT   .EQU    1
0377+  08A9             KEY_CTRL_BIT    .EQU    2
0378+  08A9             
0379+  08A9             KEY_REPEAT_DELAY .EQU   40
0380+  08A9             KEY_REPEAT_AFTER .EQU   KEY_REPEAT_DELAY+7
0381+  08A9             
0382+  08A9 76 63 78 7A keyboard        .DB    "vcxz", 0, 0
0382+  08AD 00 00 
0383+  08AF 67 66 64 73                 .DB    "gfdsa", 0
0383+  08B3 61 00 
0384+  08B5 74 72 65 77                 .DB    "trewq", KEY_DOWN
0384+  08B9 71 81 
0385+  08BB 35 34 33 32                 .DB    "54321", KEY_UP  
0385+  08BF 31 80 
0386+  08C1 36 37 38 39                 .DB    "67890", KEY_BACKSPACE
0386+  08C5 30 08 
0387+  08C7 79 75 69 6F                 .DB    "yuiop:"
0387+  08CB 70 3A 
0388+  08CD 68 6A 6B 6C                 .DB    "hjkl.", KEY_ENTER
0388+  08D1 2E 0D 
0389+  08D3 62 6E 6D 20                 .DB    "bnm ", KEY_LEFT, KEY_RIGHT
0389+  08D7 82 83 
0390+  08D9             
0391+  08D9 56 43 58 5A _shifted        .DB     "VCXZ", 0, 0
0391+  08DD 00 00 
0392+  08DF 47 46 44 53                 .DB     "GFDSA", 0
0392+  08E3 41 00 
0393+  08E5 54 52 45 57                 .DB     "TREWQ", 0              ; Shift + down?
0393+  08E9 51 00 
0394+  08EB 25 24 23 22                 .DB     "%$", 35, 34, "!", 0    ; Shift + up
0394+  08EF 21 00 
0395+  08F1 5E 26 2A 28                 .DB     "^&*()", 0              ; Shift + delete
0395+  08F5 29 00 
0396+  08F7 59 55 49 4F                 .DB     "YUIOP;"
0396+  08FB 50 3B 
0397+  08FD 48 4A 4B 4C                 .DB     "HJKL,", 0              ; Shift + enter
0397+  0901 2C 00 
0398+  0903 42 4E 4D 00                 .DB     "BNM", 0,0,0            ; Shift left + right
0398+  0907 00 00 
0399+  0909             
0400+  0909 00 03 18 1A _ctrl           .DB    0,KEY_CTRL_C,KEY_CTRL_X,KEY_CTRL_Z,0,0
0400+  090D 00 00 
0401+  090F 00 00 00 13                 .DB    0,0,0,KEY_CTRL_S,0,0
0401+  0913 00 00 
0402+  0915 00 12 05 00                 .DB    0,KEY_CTRL_R,KEY_CTRL_E,0,0,KEY_CTRL_DOWN
0402+  0919 00 91 
0403+  091B 00 00 00 27                 .DB    0,0,0,27h,7Ch,KEY_CTRL_UP ; Vertical bar, single quote
0403+  091F 7C 90 
0404+  0921 7B 7D 60 5B                 .DB    "{}`[]",KEY_DELETE
0404+  0925 5D 7F 
0405+  0927 00 15 2B 3D                 .DB    0,KEY_CTRL_U, "+=-", 0
0405+  092B 2D 00 
0406+  092D 00 3C 40 3E                 .DB    0, "<@>_", KEY_CTRL_ENTER
0406+  0931 5F 94 
0407+  0933 5C 3F 2F 95                 .DB    "\\?/", KEY_CTRL_SPACE,KEY_CTRL_LEFT,KEY_CTRL_RIGHT
0407+  0937 92 93 
0408+  0939             
0409+  0939 00 00 00 00 _shift_ctrl     .DB    0,0,0,0,0,0
0409+  093D 00 00 
0410+  093F 00 00 00 00                 .DB    0,0,0,0,0,0
0410+  0943 00 00 
0411+  0945 00 00 00 00                 .DB    0,0,0,0,0,0
0411+  0949 00 00 
0412+  094B 00 00 00 00                 .DB    0,0,0,0,0,0
0412+  094F 00 00 
0413+  0951 00 00 00 00                 .DB    0,0,0,0,0,0
0413+  0955 00 00 
0414+  0957 00 00 00 00                 .DB    0,0,0,0,KEY_CTRL_P,0
0414+  095B 10 00 
0415+  095D 00 00 00 00                 .DB    0,0,0,0,0,0
0415+  0961 00 00 
0416+  0963 00 00 00 00                 .DB    0,0,0,0,0,0
0416+  0967 00 00 
0185   0969                                 .INCLUDE  uart.asm
0001+  0969             ;
0002+  0969             ; UART routines..
0003+  0969             ;
0004+  0969             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0005+  0969             ;
0006+  0969             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0007+  0969             ;
0008+  0969             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0009+  0969             ; of this software and associated documentation files (the "Software"), to deal
0010+  0969             ; in the Software without restriction, including without limitation the rights
0011+  0969             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0012+  0969             ; copies of the Software, and to permit persons to whom the Software is
0013+  0969             ; furnished to do so, subject to the following conditions:
0014+  0969             ; 
0015+  0969             ; The above copyright notice and this permission notice shall be included in all
0016+  0969             ; copies or substantial portions of the Software.
0017+  0969             ; 
0018+  0969             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0019+  0969             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0020+  0969             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0021+  0969             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0022+  0969             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0023+  0969             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0024+  0969             ; SOFTWARE.
0025+  0969             ;
0026+  0969                                 .MODULE     uart
0027+  0969             
0028+  0969             ;
0029+  0969             ; Baud rates, assuming 1.8432Mhz crystal
0030+  0969             ;
0031+  0969             UART_9600           .EQU    12
0032+  0969             UART_19200          .EQU    6
0033+  0969             UART_38400          .EQU    3
0034+  0969             
0035+  0969             UART_MODE_AUTO      .EQU    022h   ; Auto flow mode
0036+  0969             UART_MODE_NO_FLOW   .EQU    000h   ; Auto RTS and CTS disabled
0037+  0969             UART_MODE_DIAG      .EQU    030h   ; Loopback mode
0038+  0969             
0039+  0969             ;
0040+  0969             ; Various constants
0041+  0969             ;
0042+  0969             UART_8N1            .EQU    003h
0043+  0969             UART_TIMEOUT        .EQU    50000
0044+  0969             
0045+  0969             _CTS_STATUS_MASK    .EQU    010h
0046+  0969             
0047+  0969             ;
0048+  0969             ; Set up the UART. Assume it has had time to settle after reset...
0049+  0969             ;
0050+  0969             ;
0051+  0969 01 06 00    uart_init           LD      BC, UART_19200              ; B is flow control, 0 -> No auto flow control
0052+  096C             
0053+  096C DB 26                           IN      A,(UART_MODEM_STATUS)       ; If CTS is enabled, assume we can use flow control
0054+  096E E6 10                           AND     _CTS_STATUS_MASK
0055+  0970 28 02                           JR      Z, _no_listener
0056+  0972             
0057+  0972 06 22                           LD      B, UART_MODE_AUTO
0058+  0974                                     
0059+  0974 3E 80       _no_listener        LD      A, 80h                      ; Divisor Latch Setting Mode
0060+  0976 D3 23                           OUT     (UART_LINE_CTRL), A         ;  - entered by writing 1 to bit 7 of LCR
0061+  0978 00                              NOP
0062+  0979 00                              NOP
0063+  097A 79                              LD      A, C
0064+  097B D3 20                           OUT     (UART_TX_RX), A
0065+  097D 00                              NOP
0066+  097E 00                              NOP
0067+  097F AF                              XOR     A
0068+  0980 D3 21                           OUT     (UART_INT_ENABLE), A
0069+  0982 00                              NOP
0070+  0983 00                              NOP
0071+  0984             
0072+  0984 3E 03                           LD      A, UART_8N1                 ; Set 8N1 and exit divisor latch setting mode
0073+  0986 D3 23                           OUT     (UART_LINE_CTRL), A
0074+  0988             
0075+  0988 3E 07                           LD      A, 07h                      ; Enable and clear FIFO registers
0076+  098A D3 22                           OUT     (UART_FIFO_CTRL), A
0077+  098C             
0078+  098C 78                              LD      A, B
0079+  098D A7                              AND     A
0080+  098E 28 02                           JR      Z, _no_flowcontrol
0081+  0990             
0082+  0990 D3 24                           OUT     (UART_MODEM_CTRL), A
0083+  0992             
0084+  0992 00          _no_flowcontrol     NOP
0085+  0993 00                              NOP
0086+  0994 C9                              RET
0087+  0995             
0088+  0995             ;
0089+  0995             ; Send character in A to UART
0090+  0995             ; Preserves all registers
0091+  0995             ;
0092+  0995             ; Carry flag is set on return if the UART send succeeded, clear if it timed out
0093+  0995             ;
0094+  0995 C5          uart_send           PUSH    BC
0095+  0996 F5                              PUSH    AF
0096+  0997 01 50 C3                        LD      BC, UART_TIMEOUT
0097+  099A DB 25       _check_ready        IN      A, (UART_LINE_STATUS)
0098+  099C CB 6F                           BIT     5, A
0099+  099E C2 AC 09                        JP      NZ, _uart_ready             ; Bit 5 is set when the UART is ready
0100+  09A1 0B                              DEC     BC
0101+  09A2 78                              LD      A, B
0102+  09A3 B1                              OR      C
0103+  09A4 C2 9A 09                        JP      NZ, _check_ready
0104+  09A7             
0105+  09A7 F1                              POP     AF
0106+  09A8 C1                              POP     BC
0107+  09A9 37                              SCF
0108+  09AA 3F                              CCF
0109+  09AB C9                              RET
0110+  09AC             
0111+  09AC F1          _uart_ready         POP     AF
0112+  09AD C1                              POP     BC
0113+  09AE D3 20                           OUT     (UART_TX_RX), A
0114+  09B0 37                              SCF
0115+  09B1 C9                              RET
0116+  09B2             
0117+  09B2             ;
0118+  09B2             ; Check to see if there are any characters to receive
0119+  09B2             ; Preserves all registers
0120+  09B2             ;
0121+  09B2             ; Returns with carry set if there are characters ready, clear if not
0122+  09B2             ;
0123+  09B2 F5          uart_ready          PUSH    AF
0124+  09B3 DB 25                           IN      A, (UART_LINE_STATUS)
0125+  09B5 CB 47                           BIT     0, A
0126+  09B7 CA BD 09                        JP      Z, _not_ready
0127+  09BA F1                              POP     AF
0128+  09BB 37                              SCF
0129+  09BC C9                              RET
0130+  09BD             
0131+  09BD F1          _not_ready          POP     AF
0132+  09BE 37                              SCF
0133+  09BF 3F                              CCF
0134+  09C0 C9                              RET
0135+  09C1             
0136+  09C1             ;
0137+  09C1             ; Receive a character from the UART in A
0138+  09C1             ; 
0139+  09C1             ; Returns with a character in A and the carry flag set. If no characters
0140+  09C1             ; are available, returns with the carry flag clear.
0141+  09C1             ;
0142+  09C1 DB 25       uart_receive        IN      A, (UART_LINE_STATUS)
0143+  09C3 CB 47                           BIT     0, A
0144+  09C5 CA CC 09                        JP      Z, _no_character
0145+  09C8 DB 20                           IN      A, (UART_TX_RX)
0146+  09CA 37                              SCF
0147+  09CB C9                              RET
0148+  09CC             
0149+  09CC 37          _no_character       SCF
0150+  09CD 3F                              CCF
0151+  09CE C9                              RET
0152+  09CF             
0153+  09CF             ;
0154+  09CF             ; Write A as a hex byte
0155+  09CF             ; Overwrites A...
0156+  09CF             ;
0157+  09CF F5          uart_hex            PUSH    AF
0158+  09D0 CB 2F                           SRA     A
0159+  09D2 CB 2F                           SRA     A
0160+  09D4 CB 2F                           SRA     A
0161+  09D6 CB 2F                           SRA     A
0162+  09D8 CD E5 09                        CALL    to_hex
0163+  09DB CD 95 09                        CALL    uart_send
0164+  09DE F1                              POP     AF
0165+  09DF CD E5 09                        CALL    to_hex
0166+  09E2 C3 95 09                        JP      uart_send
0167+  09E5             ;
0168+  09E5             ; Returns the low nibble of A as a hex digit
0169+  09E5             ;
0170+  09E5 E6 0F       to_hex              AND $0F      ;LOW NIBBLE ONLY
0171+  09E7 C6 90                           ADD A,$90
0172+  09E9 27                              DAA 
0173+  09EA CE 40                           ADC A,$40
0174+  09EC 27                              DAA 
0175+  09ED C9                              RET 
0176+  09EE             ;
0177+  09EE             ; Inline send. Sends the zero terminated string immediately following the call to this function to the UART.
0178+  09EE             ;  e.g.             CALL    uart_inline
0179+  09EE             ;                   .DB     "My text to send", 0
0180+  09EE             ;                   <code continues after message...>
0181+  09EE             ; Returns with Carry set if the string was successfully sent, otherwise, carry is clear.
0182+  09EE             ;
0183+  09EE             ; Uses A 
0184+  09EE             ;
0185+  09EE E3          uart_inline         EX      (SP), HL
0186+  09EF CD FD 09                        CALL    uart_string
0187+  09F2 DA FB 09                        JP      C, _inline_end      
0188+  09F5 7E          _find_end           LD      A, (HL)             ; Get the current character  (Carry preserved)
0189+  09F6 23                              INC     HL                  ; Point to next character    (Carry preserved)
0190+  09F7 A7                              AND     A                   ; Test if the current character was zero (Clears carry)
0191+  09F8 C2 F5 09                        JP      NZ, _find_end       ; If it was, we're done, otherwise repeat
0192+  09FB E3          _inline_end         EX      (SP), HL
0193+  09FC C9                              RET
0194+  09FD             ;
0195+  09FD             ; Send a zero terminated string pointed to by HL to the UART
0196+  09FD             ;
0197+  09FD             ; Returns with Carry Set if the string was sent sucessfully, clear otherwise
0198+  09FD             ;                    
0199+  09FD 7E          uart_string         LD      A,(HL)
0200+  09FE 23                              INC     HL
0201+  09FF A7                              AND     A
0202+  0A00 CA 0A 0A                        JP      Z, _string_end
0203+  0A03 CD 95 09                        CALL    uart_send
0204+  0A06 DA FD 09                        JP      C, uart_string
0205+  0A09 C9                              RET
0206+  0A0A 37          _string_end         SCF
0207+  0A0B C9                              RET
0208+  0A0C             
0209+  0A0C                                 .MODULE main0186   0A0C                                 .include  memory_test.asm
0001+  0A0C             ;
0002+  0A0C             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0003+  0A0C             ;
0004+  0A0C             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0005+  0A0C             ;
0006+  0A0C             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0007+  0A0C             ; of this software and associated documentation files (the "Software"), to deal
0008+  0A0C             ; in the Software without restriction, including without limitation the rights
0009+  0A0C             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0010+  0A0C             ; copies of the Software, and to permit persons to whom the Software is
0011+  0A0C             ; furnished to do so, subject to the following conditions:
0012+  0A0C             ; 
0013+  0A0C             ; The above copyright notice and this permission notice shall be included in all
0014+  0A0C             ; copies or substantial portions of the Software.
0015+  0A0C             ; 
0016+  0A0C             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0017+  0A0C             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0018+  0A0C             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0019+  0A0C             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0020+  0A0C             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0021+  0A0C             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0022+  0A0C             ; SOFTWARE.
0023+  0A0C             ;
0024+  0A0C                                 .MODULE     memory_test
0025+  0A0C F3          mem_test_start      DI 
0026+  0A0D 01 E1 E9                        LD          BC, 0E9E1h         ; POP HL, JP (HL)
0027+  0A10 ED 43 00 C0                     LD          (0C000h), BC
0028+  0A14 3A 00 C0                        LD          A, (0C000h)
0029+  0A17 FE E1                           CP          0E1h
0030+  0A19 28 06                           JR          Z, _locate_ok
0031+  0A1B             
0032+  0A1B 3E 4C                           LD          A, 'L'
0033+  0A1D D3 20                           OUT         (UART_TX_RX), A
0034+  0A1F 18 FE                           JR          $
0035+  0A21             
0036+  0A21 CD 00 C0    _locate_ok          CALL        0C000h
0037+  0A24 7C                              LD          A, H
0038+  0A25 E6 C0                           AND         0C0h
0039+  0A27 57                              LD          D, A            ; D = our page, to avoid
0040+  0A28             
0041+  0A28 1E 00                           LD          E, 0            ; E = Which page we're testing
0042+  0A2A             
0043+  0A2A 7B          _test_loop          LD          A, E            ; Don't test the page we're in
0044+  0A2B C6 30                           ADD         A, '0'
0045+  0A2D D3 20                           OUT         (UART_TX_RX), A
0046+  0A2F E6 03                           AND         03h
0047+  0A31 0F                              RRCA
0048+  0A32 0F                              RRCA
0049+  0A33             
0050+  0A33 BA                              CP          D
0051+  0A34             
0052+  0A34 4F                              LD          C, A
0053+  0A35 3E 0D                           LD          A, CARRIAGE_RETURN
0054+  0A37 D3 20                           OUT         (UART_TX_RX), A
0055+  0A39 3E 0A                           LD          A, NEWLINE
0056+  0A3B D3 20                           OUT         (UART_TX_RX), A
0057+  0A3D 79                              LD          A, C
0058+  0A3E                                 
0059+  0A3E 28 43                           JR          Z, _test_next
0060+  0A40             
0061+  0A40 67                              LD          H, A            ; HL = start of page
0062+  0A41 2E 00                           LD          L, 0
0063+  0A43             
0064+  0A43 3E 70                           LD          A, IO_MEM_0     ; C = the IO port controlling it..
0065+  0A45 83                              ADD         A, E
0066+  0A46 4F                              LD          C, A
0067+  0A47             
0068+  0A47 06 20                           LD          B, 32           ; B = the physical page we're paging in..
0069+  0A49             
0070+  0A49 05          _test_page_loop     DEC         B
0071+  0A4A 78                              LD          A, B
0072+  0A4B C6 20                           ADD         A, RAM_PAGE_0
0073+  0A4D ED 79                           OUT         (C), A
0074+  0A4F             
0075+  0A4F                                 ; Now we have a page in place.. report it and check it can be written and read..
0076+  0A4F DB 25       _wait_uart          IN          A, (UART_LINE_STATUS)
0077+  0A51 CB 6F                           BIT         5, A
0078+  0A53 28 FA                           JR          Z, _wait_uart           ; Bit 5 is set when the UART is ready
0079+  0A55             
0080+  0A55 3E 6F                           LD          A, 'o'
0081+  0A57 D3 20                           OUT         (UART_TX_RX), A
0082+  0A59 78                              LD          A, B
0083+  0A5A CB 3F                           SRL         A
0084+  0A5C CB 3F                           SRL         A
0085+  0A5E CB 3F                           SRL         A
0086+  0A60 C6 30                           ADD         A, '0'
0087+  0A62 D3 20                           OUT         (UART_TX_RX), A
0088+  0A64 78                              LD          A, B
0089+  0A65 E6 07                           AND         07h
0090+  0A67 C6 30                           ADD         A, '0'
0091+  0A69 D3 20                           OUT         (UART_TX_RX), A
0092+  0A6B FE 30                           CP          '0'
0093+  0A6D 20 08                           JR          NZ, _no_cr
0094+  0A6F 3E 0D                           LD          A, CARRIAGE_RETURN
0095+  0A71 D3 20                           OUT         (UART_TX_RX), A
0096+  0A73 3E 0A                           LD          A, NEWLINE
0097+  0A75 D3 20                           OUT         (UART_TX_RX), A
0098+  0A77             
0099+  0A77 AF          _no_cr              XOR         A
0100+  0A78 3D          _test_write         DEC         A
0101+  0A79 77                              LD          (HL), A
0102+  0A7A BE                              CP          (HL)
0103+  0A7B 20 0E                           JR          NZ, _test_fail
0104+  0A7D B8                              CP          B
0105+  0A7E 20 F8                           JR          NZ, _test_write
0106+  0A80             
0107+  0A80 A7                              AND         A
0108+  0A81 20 C6                           JR          NZ, _test_page_loop
0109+  0A83             
0110+  0A83 1C          _test_next          INC         E
0111+  0A84 3E 04                           LD          A, 4
0112+  0A86 BB                              CP          E
0113+  0A87 20 A1                           JR          NZ, _test_loop
0114+  0A89             
0115+  0A89 18 06                           JR          _test_read_page
0116+  0A8B             
0117+  0A8B 3E 78       _test_fail          LD          A, 'x'
0118+  0A8D D3 20                           OUT         (UART_TX_RX), A
0119+  0A8F 18 FE                           JR          $
0120+  0A91             
0121+  0A91 3E 79       _test_read_page     LD          A, 'y'
0122+  0A93 D3 20                           OUT         (UART_TX_RX), A
0123+  0A95 3E 0D                           LD          A, CARRIAGE_RETURN
0124+  0A97 D3 20                           OUT         (UART_TX_RX), A
0125+  0A99 3E 0A                           LD          A, NEWLINE
0126+  0A9B D3 20                           OUT         (UART_TX_RX), A
0127+  0A9D             
0128+  0A9D 06 00                           LD          B, 0           ; B = the physical page we're paging in..
0129+  0A9F             
0130+  0A9F 78          _read_page_loop     LD          A, B
0131+  0AA0 C6 20                           ADD         A, RAM_PAGE_0
0132+  0AA2 ED 79                           OUT         (C), A          ; C still points to the last valid page we wrote
0133+  0AA4             
0134+  0AA4 7E                              LD          A, (HL)
0135+  0AA5 B8                              CP          B
0136+  0AA6 20 21                           JR          NZ, _read_fail
0137+  0AA8             
0138+  0AA8 DB 25       _wait_uart2         IN          A, (UART_LINE_STATUS)
0139+  0AAA CB 6F                           BIT         5, A
0140+  0AAC 28 FA                           JR          Z, _wait_uart2           ; Bit 5 is set when the UART is ready
0141+  0AAE             
0142+  0AAE 78                              LD          A, B
0143+  0AAF E6 07                           AND         07h
0144+  0AB1 C6 30                           ADD         A, '0'
0145+  0AB3 D3 20                           OUT         (UART_TX_RX), A
0146+  0AB5 FE 37                           CP          '7'
0147+  0AB7 20 04                           JR          NZ, _no_space
0148+  0AB9 3E 20                           LD          A, ' '
0149+  0ABB D3 20                           OUT         (UART_TX_RX), A
0150+  0ABD             
0151+  0ABD 04          _no_space           INC         B
0152+  0ABE 3E 20                           LD          A, 32
0153+  0AC0 B8                              CP          B
0154+  0AC1 20 DC                           JR          NZ, _read_page_loop
0155+  0AC3             
0156+  0AC3 3E 79                           LD          A, 'y'
0157+  0AC5 D3 20       _test_complete      OUT         (UART_TX_RX), A
0158+  0AC7 18 FE                           JR          $
0159+  0AC9             
0160+  0AC9 3E 21       _read_fail          LD          A, '!'
0161+  0ACB 18 F8                           JR          _test_complete
0162+  0ACD             
0163+  0ACD                                 .END0187   0ACD             
0188   0ACD             bios_seg            .INCLUDE  build/monitor.inc
0001+  0ACD             ; Autogenerated by hex2inc from monitor.obj
0002+  0ACD             ;
0003+  0ACD             ; Start address DF00, endAddress FDFC - total bytes 7933
0004+  0ACD             ;
0005+  0ACD 00 DF FD 1E                      .DW 0df00h, 01EFDh ; Start, length 
0006+  0AD1             
0007+  0AD1 CD C2 F3 3E                      .DB 0CDh, 0C2h, 0F3h, 03Eh, 001h, 032h, 003h, 000h, 03Eh, 024h, 032h, 038h, 0FFh, 021h, 037h, 0E9h, 022h, 0FEh, 0FDh, 03Eh, 001h, 032h, 004h, 0FFh
0007+  0AD5 01 32 03 00 
0007+  0AD9 3E 24 32 38 
0007+  0ADD FF 21 37 E9 
0007+  0AE1 22 FE FD 3E 
0007+  0AE5 01 32 04 FF 
0008+  0AE9 3E 03 CD 28                      .DB 03Eh, 003h, 0CDh, 028h, 0E9h, 079h, 0B0h, 020h, 00Ah, 0CDh, 0AAh, 0F3h, 02Eh, 000h, 0CDh, 0EEh, 0F4h, 018h, 0E2h, 03Eh, 007h, 0CDh, 028h, 0E9h
0008+  0AED E9 79 B0 20 
0008+  0AF1 0A CD AA F3 
0008+  0AF5 2E 00 CD EE 
0008+  0AF9 F4 18 E2 3E 
0008+  0AFD 07 CD 28 E9 
0009+  0B01 79 B0 28 ED                      .DB 079h, 0B0h, 028h, 0EDh, 0C5h, 0E1h, 00Eh, 00Dh, 0CDh, 044h, 0E9h, 0E5h, 0D1h, 0CDh, 051h, 0E9h, 03Ah, 089h, 0E9h, 0FEh, 006h, 038h, 011h, 02Ah
0009+  0B05 C5 E1 0E 0D 
0009+  0B09 CD 44 E9 E5 
0009+  0B0D D1 CD 51 E9 
0009+  0B11 3A 89 E9 FE 
0009+  0B15 06 38 11 2A 
0010+  0B19 8A E9 06 04                      .DB 08Ah, 0E9h, 006h, 004h, 07Eh, 03Ch, 077h, 0FEh, 00Ah, 038h, 005h, 0AFh, 077h, 023h, 010h, 0F4h, 03Ah, 08Ch, 0E9h, 0A7h, 028h, 005h, 0C6h, 030h
0010+  0B1D 7E 3C 77 FE 
0010+  0B21 0A 38 05 AF 
0010+  0B25 77 23 10 F4 
0010+  0B29 3A 8C E9 A7 
0010+  0B2D 28 05 C6 30 
0011+  0B31 32 8A DF 3A                      .DB 032h, 08Ah, 0DFh, 03Ah, 08Bh, 0E9h, 0C6h, 030h, 032h, 08Bh, 0DFh, 03Ah, 08Ah, 0E9h, 0C6h, 030h, 032h, 08Dh, 0DFh, 001h, 060h, 000h, 0CDh, 011h
0011+  0B35 8B E9 C6 30 
0011+  0B39 32 8B DF 3A 
0011+  0B3D 8A E9 C6 30 
0011+  0B41 32 8D DF 01 
0011+  0B45 60 00 CD 11 
0012+  0B49 E9 CD AA F3                      .DB 0E9h, 0CDh, 0AAh, 0F3h, 00Ah, 00Dh, 043h, 06Ch, 06Fh, 063h, 06Bh, 020h, 073h, 070h, 065h, 065h, 064h, 020h, 020h, 030h, 02Ch, 030h, 04Dh, 068h
0012+  0B4D 0A 0D 43 6C 
0012+  0B51 6F 63 6B 20 
0012+  0B55 73 70 65 65 
0012+  0B59 64 20 20 30 
0012+  0B5D 2C 30 4D 68 
0013+  0B61 7A 00 21 97                      .DB 07Ah, 000h, 021h, 097h, 0F4h, 022h, 0FEh, 0FDh, 001h, 060h, 000h, 0CDh, 011h, 0E9h, 0CDh, 0AAh, 0F3h, 00Ah, 00Dh, 04Dh, 069h, 063h, 072h, 06Fh
0013+  0B65 F4 22 FE FD 
0013+  0B69 01 60 00 CD 
0013+  0B6D 11 E9 CD AA 
0013+  0B71 F3 0A 0D 4D 
0013+  0B75 69 63 72 6F 
0014+  0B79 42 65 61 73                      .DB 042h, 065h, 061h, 073h, 074h, 020h, 04Dh, 06Fh, 06Eh, 069h, 074h, 06Fh, 072h, 020h, 031h, 02Eh, 035h, 000h, 001h, 060h, 000h, 0CDh, 011h, 0E9h
0014+  0B7D 74 20 4D 6F 
0014+  0B81 6E 69 74 6F 
0014+  0B85 72 20 31 2E 
0014+  0B89 35 00 01 60 
0014+  0B8D 00 CD 11 E9 
0015+  0B91 0E 0A CD 00                      .DB 00Eh, 00Ah, 0CDh, 000h, 0F0h, 0CDh, 08Eh, 0E9h, 001h, 040h, 000h, 0CDh, 011h, 0E9h, 0CDh, 071h, 0EFh, 0A7h, 028h, 0F1h, 0CDh, 09Ah, 0EFh, 021h
0015+  0B95 F0 CD 8E E9 
0015+  0B99 01 40 00 CD 
0015+  0B9D 11 E9 CD 71 
0015+  0BA1 EF A7 28 F1 
0015+  0BA5 CD 9A EF 21 
0016+  0BA9 FE DF CD 42                      .DB 0FEh, 0DFh, 0CDh, 042h, 0E8h, 018h, 0E6h, 0CDh, 0AAh, 0F3h, 00Ah, 00Dh, 046h, 06Fh, 072h, 06Dh, 061h, 074h, 020h, 052h, 041h, 04Dh, 020h, 064h
0016+  0BAD E8 18 E6 CD 
0016+  0BB1 AA F3 0A 0D 
0016+  0BB5 46 6F 72 6D 
0016+  0BB9 61 74 20 52 
0016+  0BBD 41 4D 20 64 
0017+  0BC1 69 73 6B 00                      .DB 069h, 073h, 06Bh, 000h, 0CDh, 073h, 0E7h, 021h, 0F1h, 0EEh, 0E5h, 0C3h, 031h, 0EFh, 053h, 065h, 06Ch, 065h, 063h, 074h, 020h, 061h, 063h, 074h
0017+  0BC5 CD 73 E7 21 
0017+  0BC9 F1 EE E5 C3 
0017+  0BCD 31 EF 53 65 
0017+  0BD1 6C 65 63 74 
0017+  0BD5 20 61 63 74 
0018+  0BD9 69 6F 6E 00                      .DB 069h, 06Fh, 06Eh, 000h, 0DFh, 0DFh, 04Ch, 061h, 075h, 06Eh, 063h, 068h, 020h, 043h, 050h, 02Fh, 04Dh, 000h, 078h, 0E5h, 04Dh, 065h, 06Dh, 06Fh
0018+  0BDD DF DF 4C 61 
0018+  0BE1 75 6E 63 68 
0018+  0BE5 20 43 50 2F 
0018+  0BE9 4D 00 78 E5 
0018+  0BED 4D 65 6D 6F 
0019+  0BF1 72 79 20 45                      .DB 072h, 079h, 020h, 045h, 064h, 069h, 074h, 06Fh, 072h, 000h, 0B2h, 0E1h, 059h, 02Dh, 04Dh, 06Fh, 064h, 065h, 06Dh, 020h, 054h, 072h, 061h, 06Eh
0019+  0BF5 64 69 74 6F 
0019+  0BF9 72 00 B2 E1 
0019+  0BFD 59 2D 4D 6F 
0019+  0C01 64 65 6D 20 
0019+  0C05 54 72 61 6E 
0020+  0C09 73 66 65 72                      .DB 073h, 066h, 065h, 072h, 000h, 055h, 0E0h, 053h, 065h, 074h, 020h, 044h, 061h, 074h, 065h, 000h, 01Ch, 0E1h, 053h, 065h, 074h, 020h, 054h, 069h
0020+  0C0D 00 55 E0 53 
0020+  0C11 65 74 20 44 
0020+  0C15 61 74 65 00 
0020+  0C19 1C E1 53 65 
0020+  0C1D 74 20 54 69 
0021+  0C21 6D 65 00 00                      .DB 06Dh, 065h, 000h, 000h, 000h, 03Ah, 02Dh, 0FFh, 0C6h, 01Fh, 032h, 075h, 0E0h, 032h, 088h, 0E0h, 0CDh, 0AAh, 0F3h, 00Dh, 044h, 061h, 074h, 065h
0021+  0C25 00 3A 2D FF 
0021+  0C29 C6 1F 32 75 
0021+  0C2D E0 32 88 E0 
0021+  0C31 CD AA F3 0D 
0021+  0C35 44 61 74 65 
0022+  0C39 20 59 59 2F                      .DB 020h, 059h, 059h, 02Fh, 04Dh, 04Dh, 02Fh, 044h, 044h, 01Bh, 04Bh, 01Bh, 059h, 000h, 025h, 000h, 021h, 063h, 0E1h, 0CDh, 071h, 0E1h, 03Eh, 001h
0022+  0C3D 4D 4D 2F 44 
0022+  0C41 44 1B 4B 1B 
0022+  0C45 59 00 25 00 
0022+  0C49 21 63 E1 CD 
0022+  0C4D 71 E1 3E 01 
0023+  0C51 32 69 E1 CD                      .DB 032h, 069h, 0E1h, 0CDh, 0AAh, 0F3h, 01Bh, 059h, 000h, 02Fh, 000h, 03Ah, 069h, 0E1h, 047h, 021h, 027h, 0EAh, 010h, 00Ah, 07Eh, 023h, 0A7h, 028h
0023+  0C55 AA F3 1B 59 
0023+  0C59 00 2F 00 3A 
0023+  0C5D 69 E1 47 21 
0023+  0C61 27 EA 10 0A 
0023+  0C65 7E 23 A7 28 
0024+  0C69 0C CD B7 F3                      .DB 00Ch, 0CDh, 0B7h, 0F3h, 018h, 0F6h, 07Eh, 023h, 0A7h, 020h, 0FBh, 018h, 0EDh, 0CDh, 071h, 0EFh, 0A7h, 028h, 0FAh, 0CDh, 09Ah, 0EFh, 0FEh, 080h
0024+  0C6D 18 F6 7E 23 
0024+  0C71 A7 20 FB 18 
0024+  0C75 ED CD 71 EF 
0024+  0C79 A7 28 FA CD 
0024+  0C7D 9A EF FE 80 
0025+  0C81 20 0A 3A 69                      .DB 020h, 00Ah, 03Ah, 069h, 0E1h, 0FEh, 007h, 028h, 0ECh, 03Ch, 018h, 0C4h, 0FEh, 081h, 020h, 00Ah, 03Ah, 069h, 0E1h, 0FEh, 001h, 028h, 0DEh, 03Dh
0025+  0C85 E1 FE 07 28 
0025+  0C89 EC 3C 18 C4 
0025+  0C8D FE 81 20 0A 
0025+  0C91 3A 69 E1 FE 
0025+  0C95 01 28 DE 3D 
0026+  0C99 18 B6 FE 0D                      .DB 018h, 0B6h, 0FEh, 00Dh, 020h, 0D7h, 0F3h, 026h, 06Fh, 02Eh, 003h, 0CDh, 01Dh, 0F9h, 0D2h, 005h, 0E1h, 021h, 069h, 0E1h, 07Eh, 023h, 0F6h, 008h
0026+  0C9D 20 D7 F3 26 
0026+  0CA1 6F 2E 03 CD 
0026+  0CA5 1D F9 D2 05 
0026+  0CA9 E1 21 69 E1 
0026+  0CAD 7E 23 F6 08 
0027+  0CB1 CD 31 F9 D2                      .DB 0CDh, 031h, 0F9h, 0D2h, 005h, 0E1h, 046h, 023h, 07Eh, 023h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0B0h, 0FEh, 0FFh, 0CAh, 000h, 0E1h
0027+  0CB5 05 E1 46 23 
0027+  0CB9 7E 23 CB 27 
0027+  0CBD CB 27 CB 27 
0027+  0CC1 CB 27 B0 FE 
0027+  0CC5 FF CA 00 E1 
0028+  0CC9 CD 31 F9 D2                      .DB 0CDh, 031h, 0F9h, 0D2h, 005h, 0E1h, 018h, 0E6h, 0CDh, 0E5h, 0F8h, 0FBh, 0C9h, 0CDh, 0E5h, 0F8h, 0FBh, 0CDh, 0AAh, 0F3h, 00Dh, 052h, 054h, 043h
0028+  0CCD 05 E1 18 E6 
0028+  0CD1 CD E5 F8 FB 
0028+  0CD5 C9 CD E5 F8 
0028+  0CD9 FB CD AA F3 
0028+  0CDD 0D 52 54 43 
0029+  0CE1 20 45 72 72                      .DB 020h, 045h, 072h, 072h, 06Fh, 072h, 01Bh, 04Bh, 000h, 0C3h, 09Ah, 0EFh, 03Ah, 02Dh, 0FFh, 0C6h, 01Fh, 032h, 039h, 0E1h, 0CDh, 0AAh, 0F3h, 00Dh
0029+  0CE5 6F 72 1B 4B 
0029+  0CE9 00 C3 9A EF 
0029+  0CED 3A 2D FF C6 
0029+  0CF1 1F 32 39 E1 
0029+  0CF5 CD AA F3 0D 
0030+  0CF9 54 69 6D 65                      .DB 054h, 069h, 06Dh, 065h, 020h, 048h, 048h, 02Fh, 06Dh, 06Dh, 02Fh, 073h, 073h, 01Bh, 04Bh, 01Bh, 059h, 000h, 025h, 000h, 021h, 05Dh, 0E1h, 0CDh
0030+  0CFD 20 48 48 2F 
0030+  0D01 6D 6D 2F 73 
0030+  0D05 73 1B 4B 1B 
0030+  0D09 59 00 25 00 
0030+  0D0D 21 5D E1 CD 
0031+  0D11 71 E1 3A 6B                      .DB 071h, 0E1h, 03Ah, 06Bh, 0E1h, 0F6h, 008h, 032h, 06Bh, 0E1h, 0CDh, 09Ah, 0EFh, 0F3h, 026h, 06Fh, 02Eh, 000h, 0CDh, 01Dh, 0F9h, 0D2h, 005h, 0E1h
0031+  0D15 E1 F6 08 32 
0031+  0D19 6B E1 CD 9A 
0031+  0D1D EF F3 26 6F 
0031+  0D21 2E 00 CD 1D 
0031+  0D25 F9 D2 05 E1 
0032+  0D29 21 6A E1 18                      .DB 021h, 06Ah, 0E1h, 018h, 089h, 009h, 005h, 009h, 005h, 003h, 002h, 001h, 003h, 002h, 001h, 009h, 009h, 001h, 000h, 000h, 000h, 000h, 000h, 000h
0032+  0D2D 89 09 05 09 
0032+  0D31 05 03 02 01 
0032+  0D35 03 02 01 09 
0032+  0D39 09 01 00 00 
0032+  0D3D 00 00 00 00 
0033+  0D41 FF 11 6A E1                      .DB 0FFh, 011h, 06Ah, 0E1h, 001h, 006h, 000h, 0EDh, 0B0h, 02Bh, 01Bh, 006h, 006h, 0E5h, 0D5h, 0C5h, 0CDh, 09Ah, 0EFh, 0C1h, 0D1h, 0E1h, 0D6h, 030h
0033+  0D45 01 06 00 ED 
0033+  0D49 B0 2B 1B 06 
0033+  0D4D 06 E5 D5 C5 
0033+  0D51 CD 9A EF C1 
0033+  0D55 D1 E1 D6 30 
0034+  0D59 38 F3 4F 1A                      .DB 038h, 0F3h, 04Fh, 01Ah, 032h, 0A1h, 0E1h, 0B9h, 038h, 0EBh, 079h, 012h, 0C6h, 030h, 0CDh, 0B7h, 0F3h, 01Ah, 02Bh, 01Bh, 0CBh, 040h, 020h, 00Ah
0034+  0D5D 32 A1 E1 B9 
0034+  0D61 38 EB 79 12 
0034+  0D65 C6 30 CD B7 
0034+  0D69 F3 1A 2B 1B 
0034+  0D6D CB 40 20 0A 
0035+  0D71 FE 00 28 03                      .DB 0FEh, 000h, 028h, 003h, 03Eh, 009h, 012h, 010h, 0D4h, 0C9h, 0CDh, 0AAh, 0F3h, 01Bh, 043h, 000h, 018h, 0F5h, 0AFh, 032h, 004h, 0E4h, 021h, 07Dh
0035+  0D75 3E 09 12 10 
0035+  0D79 D4 C9 CD AA 
0035+  0D7D F3 1B 43 00 
0035+  0D81 18 F5 AF 32 
0035+  0D85 04 E4 21 7D 
0036+  0D89 E4 CD 42 E8                      .DB 0E4h, 0CDh, 042h, 0E8h, 03Ah, 004h, 0E4h, 0A7h, 0C8h, 0EDh, 05Bh, 001h, 0E4h, 03Ah, 003h, 0E4h, 021h, 06Fh, 0DEh, 0F3h, 0CDh, 0B1h, 0EAh, 0FBh
0036+  0D8D 3A 04 E4 A7 
0036+  0D91 C8 ED 5B 01 
0036+  0D95 E4 3A 03 E4 
0036+  0D99 21 6F DE F3 
0036+  0D9D CD B1 EA FB 
0037+  0DA1 A7 CA 83 E2                      .DB 0A7h, 0CAh, 083h, 0E2h, 03Dh, 05Fh, 016h, 000h, 021h, 003h, 0E2h, 019h, 019h, 07Eh, 023h, 066h, 06Fh, 079h, 0C6h, 030h, 032h, 03Fh, 0E2h, 0E5h
0037+  0DA5 3D 5F 16 00 
0037+  0DA9 21 03 E2 19 
0037+  0DAD 19 7E 23 66 
0037+  0DB1 6F 79 C6 30 
0037+  0DB5 32 3F E2 E5 
0038+  0DB9 CD AA F3 0D                      .DB 0CDh, 0AAh, 0F3h, 00Dh, 045h, 052h, 052h, 04Fh, 052h, 03Ah, 020h, 000h, 0E1h, 07Eh, 023h, 0A7h, 0CAh, 09Ah, 0EFh, 04Fh, 0E5h, 0CDh, 000h, 0F0h
0038+  0DBD 45 52 52 4F 
0038+  0DC1 52 3A 20 00 
0038+  0DC5 E1 7E 23 A7 
0038+  0DC9 CA 9A EF 4F 
0038+  0DCD E5 CD 00 F0 
0039+  0DD1 E1 18 F2 13                      .DB 0E1h, 018h, 0F2h, 013h, 0E2h, 01Dh, 0E2h, 02Eh, 0E2h, 037h, 0E2h, 044h, 0E2h, 052h, 0E2h, 063h, 0E2h, 072h, 0E2h, 054h, 069h, 06Dh, 065h, 06Fh
0039+  0DD5 E2 1D E2 2E 
0039+  0DD9 E2 37 E2 44 
0039+  0DDD E2 52 E2 63 
0039+  0DE1 E2 72 E2 54 
0039+  0DE5 69 6D 65 6F 
0040+  0DE9 75 74 1B 4B                      .DB 075h, 074h, 01Bh, 04Bh, 000h, 055h, 06Eh, 06Bh, 06Eh, 06Fh, 077h, 06Eh, 020h, 070h, 061h, 063h, 06Bh, 065h, 074h, 01Bh, 04Bh, 000h, 043h, 061h
0040+  0DED 00 55 6E 6B 
0040+  0DF1 6E 6F 77 6E 
0040+  0DF5 20 70 61 63 
0040+  0DF9 6B 65 74 1B 
0040+  0DFD 4B 00 43 61 
0041+  0E01 6E 63 65 6C                      .DB 06Eh, 063h, 065h, 06Ch, 01Bh, 04Bh, 000h, 050h, 061h, 063h, 06Bh, 065h, 074h, 020h, 028h, 030h, 029h, 01Bh, 04Bh, 000h, 046h, 069h, 06Ch, 065h
0041+  0E05 1B 4B 00 50 
0041+  0E09 61 63 6B 65 
0041+  0E0D 74 20 28 30 
0041+  0E11 29 1B 4B 00 
0041+  0E15 46 69 6C 65 
0042+  0E19 20 6C 65 6E                      .DB 020h, 06Ch, 065h, 06Eh, 067h, 074h, 068h, 01Bh, 04Bh, 000h, 04Eh, 06Fh, 020h, 064h, 065h, 073h, 074h, 069h, 06Eh, 061h, 074h, 069h, 06Fh, 06Eh
0042+  0E1D 67 74 68 1B 
0042+  0E21 4B 00 4E 6F 
0042+  0E25 20 64 65 73 
0042+  0E29 74 69 6E 61 
0042+  0E2D 74 69 6F 6E 
0043+  0E31 1B 4B 00 53                      .DB 01Bh, 04Bh, 000h, 053h, 065h, 06Eh, 064h, 020h, 054h, 069h, 06Dh, 065h, 06Fh, 075h, 074h, 01Bh, 04Bh, 000h, 04Dh, 075h, 06Ch, 074h, 069h, 070h
0043+  0E35 65 6E 64 20 
0043+  0E39 54 69 6D 65 
0043+  0E3D 6F 75 74 1B 
0043+  0E41 4B 00 4D 75 
0043+  0E45 6C 74 69 70 
0044+  0E49 6C 65 20 66                      .DB 06Ch, 065h, 020h, 066h, 069h, 06Ch, 065h, 073h, 01Bh, 04Bh, 000h, 0CDh, 0AAh, 0F3h, 00Dh, 04Fh, 04Bh, 020h, 000h, 03Ah, 073h, 0DEh, 0FEh, 0FFh
0044+  0E4D 69 6C 65 73 
0044+  0E51 1B 4B 00 CD 
0044+  0E55 AA F3 0D 4F 
0044+  0E59 4B 20 00 3A 
0044+  0E5D 73 DE FE FF 
0045+  0E61 28 06 C6 30                      .DB 028h, 006h, 0C6h, 030h, 04Fh, 0CDh, 000h, 0F0h, 03Ah, 072h, 0DEh, 0CDh, 0D0h, 0E8h, 03Ah, 071h, 0DEh, 0CDh, 0D0h, 0E8h, 0CDh, 0AAh, 0F3h, 020h
0045+  0E65 4F CD 00 F0 
0045+  0E69 3A 72 DE CD 
0045+  0E6D D0 E8 3A 71 
0045+  0E71 DE CD D0 E8 
0045+  0E75 CD AA F3 20 
0046+  0E79 42 59 54 45                      .DB 042h, 059h, 054h, 045h, 053h, 020h, 040h, 020h, 000h, 03Ah, 06Fh, 0DEh, 017h, 038h, 010h, 01Fh, 0CDh, 0D0h, 0E8h, 00Eh, 02Fh, 0CDh, 000h, 0F0h
0046+  0E7D 53 20 40 20 
0046+  0E81 00 3A 6F DE 
0046+  0E85 17 38 10 1F 
0046+  0E89 CD D0 E8 0E 
0046+  0E8D 2F CD 00 F0 
0047+  0E91 3A 79 DE D6                      .DB 03Ah, 079h, 0DEh, 0D6h, 040h, 018h, 003h, 03Ah, 079h, 0DEh, 0CDh, 0D0h, 0E8h, 03Ah, 078h, 0DEh, 0CDh, 0D0h, 0E8h, 0CDh, 0AAh, 0F3h, 01Bh, 04Bh
0047+  0E95 40 18 03 3A 
0047+  0E99 79 DE CD D0 
0047+  0E9D E8 3A 78 DE 
0047+  0EA1 CD D0 E8 CD 
0047+  0EA5 AA F3 1B 4B 
0048+  0EA9 00 CD 71 EF                      .DB 000h, 0CDh, 071h, 0EFh, 0A7h, 028h, 0FAh, 0CDh, 09Ah, 0EFh, 03Ah, 06Fh, 0DEh, 017h, 030h, 006h, 021h, 005h, 0E4h, 0C3h, 042h, 0E8h, 021h, 032h
0048+  0EAD A7 28 FA CD 
0048+  0EB1 9A EF 3A 6F 
0048+  0EB5 DE 17 30 06 
0048+  0EB9 21 05 E4 C3 
0048+  0EBD 42 E8 21 32 
0049+  0EC1 E4 C3 42 E8                      .DB 0E4h, 0C3h, 042h, 0E8h, 02Ah, 078h, 0DEh, 022h, 072h, 0E5h, 0C3h, 051h, 0E6h, 02Ah, 078h, 0DEh, 0E5h, 0C9h, 0CDh, 0AAh, 0F3h, 00Dh, 00Ah, 050h
0049+  0EC5 2A 78 DE 22 
0049+  0EC9 72 E5 C3 51 
0049+  0ECD E6 2A 78 DE 
0049+  0ED1 E5 C9 CD AA 
0049+  0ED5 F3 0D 0A 50 
0050+  0ED9 61 67 65 20                      .DB 061h, 067h, 065h, 020h, 030h, 030h, 02Dh, 031h, 066h, 020h, 03Eh, 01Bh, 04Bh, 000h, 006h, 002h, 0CDh, 0BCh, 0E7h, 0CDh, 02Eh, 0E8h, 03Ah, 02Ch
0050+  0EDD 30 30 2D 31 
0050+  0EE1 66 20 3E 1B 
0050+  0EE5 4B 00 06 02 
0050+  0EE9 CD BC E7 CD 
0050+  0EED 2E E8 3A 2C 
0051+  0EF1 E8 FE 1F 30                      .DB 0E8h, 0FEh, 01Fh, 030h, 0DDh, 0CDh, 0AAh, 0F3h, 020h, 059h, 02Fh, 04Eh, 03Fh, 000h, 0CDh, 09Ah, 0EFh, 0FEh, 079h, 020h, 0B9h, 0CDh, 0AAh, 0F3h
0051+  0EF5 DD CD AA F3 
0051+  0EF9 20 59 2F 4E 
0051+  0EFD 3F 00 CD 9A 
0051+  0F01 EF FE 79 20 
0051+  0F05 B9 CD AA F3 
0052+  0F09 0D 0A 57 72                      .DB 00Dh, 00Ah, 057h, 072h, 069h, 074h, 069h, 06Eh, 067h, 01Bh, 04Bh, 000h, 03Ah, 02Ch, 0E8h, 017h, 017h, 057h, 03Ah, 06Fh, 0DEh, 032h, 003h, 0E4h
0052+  0F0D 69 74 69 6E 
0052+  0F11 67 1B 4B 00 
0052+  0F15 3A 2C E8 17 
0052+  0F19 17 57 3A 6F 
0052+  0F1D DE 32 03 E4 
0053+  0F21 D3 71 2A 72                      .DB 0D3h, 071h, 02Ah, 072h, 0DEh, 07Dh, 0E6h, 0C0h, 0B4h, 020h, 022h, 0EDh, 04Bh, 071h, 0DEh, 078h, 0B1h, 028h, 006h, 021h, 000h, 040h, 0CDh, 084h
0053+  0F25 DE 7D E6 C0 
0053+  0F29 B4 20 22 ED 
0053+  0F2D 4B 71 DE 78 
0053+  0F31 B1 28 06 21 
0053+  0F35 00 40 CD 84 
0054+  0F39 FD 3E 20 D3                      .DB 0FDh, 03Eh, 020h, 0D3h, 070h, 0CDh, 0AAh, 0F3h, 00Dh, 00Ah, 044h, 06Fh, 06Eh, 065h, 020h, 01Bh, 04Bh, 000h, 0C3h, 09Ah, 0EFh, 001h, 040h, 000h
0054+  0F3D 70 CD AA F3 
0054+  0F41 0D 0A 44 6F 
0054+  0F45 6E 65 20 1B 
0054+  0F49 4B 00 C3 9A 
0054+  0F4D EF 01 40 00 
0055+  0F51 AF ED 42 22                      .DB 0AFh, 0EDh, 042h, 022h, 072h, 0DEh, 021h, 000h, 040h, 044h, 04Dh, 0CDh, 084h, 0FDh, 014h, 03Ah, 003h, 0E4h, 03Ch, 018h, 0B8h, 03Ah, 073h, 0DEh
0055+  0F55 72 DE 21 00 
0055+  0F59 40 44 4D CD 
0055+  0F5D 84 FD 14 3A 
0055+  0F61 03 E4 3C 18 
0055+  0F65 B8 3A 73 DE 
0056+  0F69 A7 20 52 3A                      .DB 0A7h, 020h, 052h, 03Ah, 072h, 0DEh, 0FEh, 040h, 030h, 04Bh, 0CDh, 0AAh, 0F3h, 00Dh, 057h, 072h, 069h, 074h, 065h, 020h, 066h, 069h, 072h, 06Dh
0056+  0F6D 72 DE FE 40 
0056+  0F71 30 4B CD AA 
0056+  0F75 F3 0D 57 72 
0056+  0F79 69 74 65 20 
0056+  0F7D 66 69 72 6D 
0057+  0F81 77 61 72 65                      .DB 077h, 061h, 072h, 065h, 02Ch, 020h, 059h, 02Fh, 04Eh, 03Fh, 01Bh, 04Bh, 000h, 0CDh, 09Ah, 0EFh, 0FEh, 079h, 0C2h, 0EEh, 0E2h, 0EDh, 04Bh, 071h
0057+  0F85 2C 20 59 2F 
0057+  0F89 4E 3F 1B 4B 
0057+  0F8D 00 CD 9A EF 
0057+  0F91 FE 79 C2 EE 
0057+  0F95 E2 ED 4B 71 
0058+  0F99 DE 3A 6F DE                      .DB 0DEh, 03Ah, 06Fh, 0DEh, 0D3h, 071h, 021h, 000h, 040h, 016h, 000h, 0CDh, 084h, 0FDh, 0CDh, 0AAh, 0F3h, 00Dh, 00Ah, 044h, 06Fh, 06Eh, 065h, 020h
0058+  0F9D D3 71 21 00 
0058+  0FA1 40 16 00 CD 
0058+  0FA5 84 FD CD AA 
0058+  0FA9 F3 0D 0A 44 
0058+  0FAD 6F 6E 65 20 
0059+  0FB1 1B 4B 00 ED                      .DB 01Bh, 04Bh, 000h, 0EDh, 05Bh, 071h, 0DEh, 0CDh, 0C9h, 0E8h, 0C3h, 09Ah, 0EFh, 0CDh, 0AAh, 0F3h, 00Dh, 00Ah, 054h, 06Fh, 06Fh, 020h, 06Ch, 061h
0059+  0FB5 5B 71 DE CD 
0059+  0FB9 C9 E8 C3 9A 
0059+  0FBD EF CD AA F3 
0059+  0FC1 0D 0A 54 6F 
0059+  0FC5 6F 20 6C 61 
0060+  0FC9 72 67 65 1B                      .DB 072h, 067h, 065h, 01Bh, 04Bh, 000h, 0C3h, 09Ah, 0EFh, 000h, 000h, 000h, 000h, 046h, 069h, 06Ch, 065h, 020h, 061h, 063h, 074h, 069h, 06Fh, 06Eh
0060+  0FCD 4B 00 C3 9A 
0060+  0FD1 EF 00 00 00 
0060+  0FD5 00 46 69 6C 
0060+  0FD9 65 20 61 63 
0060+  0FDD 74 69 6F 6E 
0061+  0FE1 73 00 F4 E2                      .DB 073h, 000h, 0F4h, 0E2h, 056h, 069h, 065h, 077h, 020h, 066h, 069h, 06Ch, 065h, 000h, 0FDh, 0E2h, 052h, 075h, 06Eh, 000h, 001h, 0E3h, 04Dh, 061h
0061+  0FE5 56 69 65 77 
0061+  0FE9 20 66 69 6C 
0061+  0FED 65 00 FD E2 
0061+  0FF1 52 75 6E 00 
0061+  0FF5 01 E3 4D 61 
0062+  0FF9 69 6E 20 6D                      .DB 069h, 06Eh, 020h, 06Dh, 065h, 06Eh, 075h, 000h, 000h, 000h, 046h, 069h, 06Ch, 065h, 020h, 061h, 063h, 074h, 069h, 06Fh, 06Eh, 073h, 000h, 002h
0062+  0FFD 65 6E 75 00 
0062+  1001 00 00 46 69 
0062+  1005 6C 65 20 61 
0062+  1009 63 74 69 6F 
0062+  100D 6E 73 00 02 
0063+  1011 E3 43 6F 70                      .DB 0E3h, 043h, 06Fh, 070h, 079h, 020h, 074h, 06Fh, 020h, 066h, 06Ch, 061h, 073h, 068h, 000h, 0F7h, 0DFh, 043h, 050h, 04Dh, 020h, 044h, 072h, 069h
0063+  1015 79 20 74 6F 
0063+  1019 20 66 6C 61 
0063+  101D 73 68 00 F7 
0063+  1021 DF 43 50 4D 
0063+  1025 20 44 72 69 
0064+  1029 76 65 20 42                      .DB 076h, 065h, 020h, 042h, 000h, 095h, 0E3h, 055h, 070h, 064h, 061h, 074h, 065h, 020h, 066h, 069h, 072h, 06Dh, 077h, 061h, 072h, 065h, 000h, 001h
0064+  102D 00 95 E3 55 
0064+  1031 70 64 61 74 
0064+  1035 65 20 66 69 
0064+  1039 72 6D 77 61 
0064+  103D 72 65 00 01 
0065+  1041 E3 4D 61 69                      .DB 0E3h, 04Dh, 061h, 069h, 06Eh, 020h, 06Dh, 065h, 06Eh, 075h, 000h, 000h, 000h, 044h, 06Fh, 077h, 06Eh, 06Ch, 06Fh, 061h, 064h, 020h, 06Fh, 070h
0065+  1045 6E 20 6D 65 
0065+  1049 6E 75 00 00 
0065+  104D 00 44 6F 77 
0065+  1051 6E 6C 6F 61 
0065+  1055 64 20 6F 70 
0066+  1059 74 69 6F 6E                      .DB 074h, 069h, 06Fh, 06Eh, 073h, 000h, 0CFh, 0E4h, 041h, 064h, 064h, 072h, 065h, 073h, 073h, 020h, 066h, 072h, 06Fh, 06Dh, 020h, 066h, 069h, 06Ch
0066+  105D 73 00 CF E4 
0066+  1061 41 64 64 72 
0066+  1065 65 73 73 20 
0066+  1069 66 72 6F 6D 
0066+  106D 20 66 69 6C 
0067+  1071 65 00 F0 E4                      .DB 065h, 000h, 0F0h, 0E4h, 043h, 050h, 055h, 020h, 028h, 04Ch, 06Fh, 067h, 069h, 063h, 061h, 06Ch, 029h, 020h, 061h, 064h, 064h, 072h, 065h, 073h
0067+  1075 43 50 55 20 
0067+  1079 28 4C 6F 67 
0067+  107D 69 63 61 6C 
0067+  1081 29 20 61 64 
0067+  1085 64 72 65 73 
0068+  1089 73 00 26 E5                      .DB 073h, 000h, 026h, 0E5h, 050h, 068h, 079h, 073h, 069h, 063h, 061h, 06Ch, 020h, 061h, 064h, 064h, 072h, 065h, 073h, 073h, 000h, 000h, 000h, 011h
0068+  108D 50 68 79 73 
0068+  1091 69 63 61 6C 
0068+  1095 20 61 64 64 
0068+  1099 72 65 73 73 
0068+  109D 00 00 00 11 
0069+  10A1 FF FF ED 53                      .DB 0FFh, 0FFh, 0EDh, 053h, 001h, 0E4h, 0EDh, 053h, 003h, 0E4h, 0CDh, 0AAh, 0F3h, 00Dh, 053h, 074h, 061h, 072h, 074h, 020h, 074h, 072h, 061h, 06Eh
0069+  10A5 01 E4 ED 53 
0069+  10A9 03 E4 CD AA 
0069+  10AD F3 0D 53 74 
0069+  10B1 61 72 74 20 
0069+  10B5 74 72 61 6E 
0070+  10B9 73 66 65 72                      .DB 073h, 066h, 065h, 072h, 01Bh, 04Bh, 000h, 0C9h, 0CDh, 0AAh, 0F3h, 00Dh, 041h, 064h, 064h, 072h, 065h, 073h, 073h, 020h, 030h, 030h, 030h, 030h
0070+  10BD 1B 4B 00 C9 
0070+  10C1 CD AA F3 0D 
0070+  10C5 41 64 64 72 
0070+  10C9 65 73 73 20 
0070+  10CD 30 30 30 30 
0071+  10D1 2D 46 46 46                      .DB 02Dh, 046h, 046h, 046h, 046h, 020h, 03Eh, 01Bh, 04Bh, 000h, 006h, 004h, 0CDh, 0BCh, 0E7h, 0CDh, 02Eh, 0E8h, 03Eh, 0FFh, 032h, 003h, 0E4h, 0EDh
0071+  10D5 46 20 3E 1B 
0071+  10D9 4B 00 06 04 
0071+  10DD CD BC E7 CD 
0071+  10E1 2E E8 3E FF 
0071+  10E5 32 03 E4 ED 
0072+  10E9 5B 2C E8 ED                      .DB 05Bh, 02Ch, 0E8h, 0EDh, 053h, 001h, 0E4h, 03Eh, 0FFh, 032h, 004h, 0E4h, 018h, 0B4h, 0CDh, 0AAh, 0F3h, 00Dh, 050h, 061h, 067h, 065h, 020h, 032h
0072+  10ED 53 01 E4 3E 
0072+  10F1 FF 32 04 E4 
0072+  10F5 18 B4 CD AA 
0072+  10F9 F3 0D 50 61 
0072+  10FD 67 65 20 32 
0073+  1101 30 2D 33 46                      .DB 030h, 02Dh, 033h, 046h, 020h, 03Eh, 01Bh, 04Bh, 000h, 006h, 002h, 0CDh, 0BCh, 0E7h, 0CDh, 02Eh, 0E8h, 03Ah, 02Ch, 0E8h, 032h, 003h, 0E4h, 0CDh
0073+  1105 20 3E 1B 4B 
0073+  1109 00 06 02 CD 
0073+  110D BC E7 CD 2E 
0073+  1111 E8 3A 2C E8 
0073+  1115 32 03 E4 CD 
0074+  1119 AA F3 0D 4F                      .DB 0AAh, 0F3h, 00Dh, 04Fh, 066h, 066h, 073h, 065h, 074h, 020h, 030h, 030h, 030h, 030h, 02Dh, 033h, 046h, 046h, 046h, 020h, 03Eh, 01Bh, 04Bh, 000h
0074+  111D 66 66 73 65 
0074+  1121 74 20 30 30 
0074+  1125 30 30 2D 33 
0074+  1129 46 46 46 20 
0074+  112D 3E 1B 4B 00 
0075+  1131 06 04 CD BC                      .DB 006h, 004h, 0CDh, 0BCh, 0E7h, 0CDh, 02Eh, 0E8h, 03Ah, 02Dh, 0E8h, 0F6h, 040h, 032h, 02Dh, 0E8h, 018h, 0A5h, 000h, 080h, 000h, 000h, 000h, 000h
0075+  1135 E7 CD 2E E8 
0075+  1139 3A 2D E8 F6 
0075+  113D 40 32 2D E8 
0075+  1141 18 A5 00 80 
0075+  1145 00 00 00 00 
0076+  1149 CD 0E E7 CD                      .DB 0CDh, 00Eh, 0E7h, 0CDh, 071h, 0EFh, 0A7h, 028h, 0FAh, 0CDh, 09Ah, 0EFh, 0FEh, 080h, 020h, 00Dh, 02Ah, 072h, 0E5h, 011h, 008h, 000h, 0EDh, 052h
0076+  114D 71 EF A7 28 
0076+  1151 FA CD 9A EF 
0076+  1155 FE 80 20 0D 
0076+  1159 2A 72 E5 11 
0076+  115D 08 00 ED 52 
0077+  1161 22 72 E5 18                      .DB 022h, 072h, 0E5h, 018h, 0E3h, 0FEh, 081h, 020h, 00Ch, 02Ah, 072h, 0E5h, 011h, 008h, 000h, 019h, 022h, 072h, 0E5h, 018h, 0D3h, 0FEh, 020h, 020h
0077+  1165 E3 FE 81 20 
0077+  1169 0C 2A 72 E5 
0077+  116D 11 08 00 19 
0077+  1171 22 72 E5 18 
0077+  1175 D3 FE 20 20 
0078+  1179 09 3A 74 E5                      .DB 009h, 03Ah, 074h, 0E5h, 02Fh, 032h, 074h, 0E5h, 018h, 0C6h, 0FEh, 00Dh, 028h, 00Eh, 0FEh, 083h, 0CAh, 051h, 0E6h, 0FEh, 008h, 0C8h, 0FEh, 078h
0078+  117D 2F 32 74 E5 
0078+  1181 18 C6 FE 0D 
0078+  1185 28 0E FE 83 
0078+  1189 CA 51 E6 FE 
0078+  118D 08 C8 FE 78 
0079+  1191 28 1C 18 B7                      .DB 028h, 01Ch, 018h, 0B7h, 0AFh, 032h, 074h, 0E5h, 0CDh, 00Eh, 0E7h, 00Eh, 00Dh, 0CDh, 000h, 0F0h, 006h, 004h, 0CDh, 0BCh, 0E7h, 02Ah, 02Ch, 0E8h
0079+  1195 AF 32 74 E5 
0079+  1199 CD 0E E7 0E 
0079+  119D 0D CD 00 F0 
0079+  11A1 06 04 CD BC 
0079+  11A5 E7 2A 2C E8 
0080+  11A9 22 72 E5 C3                      .DB 022h, 072h, 0E5h, 0C3h, 078h, 0E5h, 0AFh, 032h, 075h, 0E5h, 0CDh, 0AAh, 0F3h, 00Dh, 01Bh, 062h, 02Eh, 045h, 078h, 065h, 063h, 075h, 074h, 065h
0080+  11AD 78 E5 AF 32 
0080+  11B1 75 E5 CD AA 
0080+  11B5 F3 0D 1B 62 
0080+  11B9 2E 45 78 65 
0080+  11BD 63 75 74 65 
0081+  11C1 20 66 72 6F                      .DB 020h, 066h, 072h, 06Fh, 06Dh, 020h, 000h, 021h, 035h, 0E6h, 0E5h, 02Ah, 072h, 0E5h, 03Ah, 075h, 0E5h, 05Fh, 016h, 000h, 019h, 0E5h, 0EBh, 0CDh
0081+  11C5 6D 20 00 21 
0081+  11C9 35 E6 E5 2A 
0081+  11CD 72 E5 3A 75 
0081+  11D1 E5 5F 16 00 
0081+  11D5 19 E5 EB CD 
0082+  11D9 C9 E8 CD AA                      .DB 0C9h, 0E8h, 0CDh, 0AAh, 0F3h, 020h, 059h, 02Fh, 04Eh, 03Fh, 01Bh, 04Bh, 000h, 0CDh, 09Ah, 0EFh, 0FEh, 079h, 028h, 009h, 0FEh, 06Eh, 020h, 0F5h
0082+  11DD F3 20 59 2F 
0082+  11E1 4E 3F 1B 4B 
0082+  11E5 00 CD 9A EF 
0082+  11E9 FE 79 28 09 
0082+  11ED FE 6E 20 F5 
0083+  11F1 E1 E1 C3 78                      .DB 0E1h, 0E1h, 0C3h, 078h, 0E5h, 0CDh, 0AAh, 0F3h, 00Ah, 00Dh, 052h, 075h, 06Eh, 06Eh, 069h, 06Eh, 067h, 01Bh, 04Bh, 000h, 0C9h, 0F5h, 0CDh, 0AAh
0083+  11F5 E5 CD AA F3 
0083+  11F9 0A 0D 52 75 
0083+  11FD 6E 6E 69 6E 
0083+  1201 67 1B 4B 00 
0083+  1205 C9 F5 CD AA 
0084+  1209 F3 0A 0D 44                      .DB 0F3h, 00Ah, 00Dh, 044h, 06Fh, 06Eh, 065h, 02Eh, 020h, 041h, 03Dh, 000h, 0F1h, 0CDh, 0D0h, 0E8h, 0CDh, 0AAh, 0F3h, 01Bh, 04Bh, 000h, 0CDh, 09Ah
0084+  120D 6F 6E 65 2E 
0084+  1211 20 41 3D 00 
0084+  1215 F1 CD D0 E8 
0084+  1219 CD AA F3 1B 
0084+  121D 4B 00 CD 9A 
0085+  1221 EF AF 32 75                      .DB 0EFh, 0AFh, 032h, 075h, 0E5h, 0CDh, 00Eh, 0E7h, 03Ah, 075h, 0E5h, 087h, 04Fh, 03Ah, 074h, 0E5h, 0A7h, 020h, 004h, 03Eh, 005h, 081h, 04Fh, 03Ah
0085+  1225 E5 CD 0E E7 
0085+  1229 3A 75 E5 87 
0085+  122D 4F 3A 74 E5 
0085+  1231 A7 20 04 3E 
0085+  1235 05 81 4F 3A 
0086+  1239 2D FF C6 1F                      .DB 02Dh, 0FFh, 0C6h, 01Fh, 032h, 07Dh, 0E6h, 079h, 0C6h, 020h, 032h, 07Eh, 0E6h, 0CDh, 0AAh, 0F3h, 01Bh, 062h, 027h, 01Bh, 059h, 000h, 000h, 000h
0086+  123D 32 7D E6 79 
0086+  1241 C6 20 32 7E 
0086+  1245 E6 CD AA F3 
0086+  1249 1B 62 27 1B 
0086+  124D 59 00 00 00 
0087+  1251 11 00 02 ED                      .DB 011h, 000h, 002h, 0EDh, 053h, 076h, 0E5h, 0CDh, 09Ah, 0EFh, 0FEh, 078h, 0CAh, 0E2h, 0E5h, 0FEh, 083h, 020h, 01Bh, 03Ah, 075h, 0E5h, 0FEh, 007h
0087+  1255 53 76 E5 CD 
0087+  1259 9A EF FE 78 
0087+  125D CA E2 E5 FE 
0087+  1261 83 20 1B 3A 
0087+  1265 75 E5 FE 07 
0088+  1269 28 03 3C 18                      .DB 028h, 003h, 03Ch, 018h, 0B5h, 0AFh, 032h, 075h, 0E5h, 011h, 008h, 000h, 02Ah, 072h, 0E5h, 019h, 022h, 072h, 0E5h, 0C3h, 055h, 0E6h, 0FEh, 082h
0088+  126D B5 AF 32 75 
0088+  1271 E5 11 08 00 
0088+  1275 2A 72 E5 19 
0088+  1279 22 72 E5 C3 
0088+  127D 55 E6 FE 82 
0089+  1281 20 13 3A 75                      .DB 020h, 013h, 03Ah, 075h, 0E5h, 0A7h, 028h, 003h, 03Dh, 018h, 097h, 03Eh, 007h, 032h, 075h, 0E5h, 011h, 0F8h, 0FFh, 018h, 0DFh, 0FEh, 080h, 0CAh
0089+  1285 E5 A7 28 03 
0089+  1289 3D 18 97 3E 
0089+  128D 07 32 75 E5 
0089+  1291 11 F8 FF 18 
0089+  1295 DF FE 80 CA 
0090+  1299 C0 E6 FE 81                      .DB 0C0h, 0E6h, 0FEh, 081h, 0CAh, 0A1h, 0E6h, 0FEh, 008h, 0C2h, 0DFh, 0E6h, 03Ah, 077h, 0E5h, 0FEh, 002h, 0CAh, 078h, 0E5h, 0C3h, 055h, 0E6h, 0CDh
0090+  129D CA A1 E6 FE 
0090+  12A1 08 C2 DF E6 
0090+  12A5 3A 77 E5 FE 
0090+  12A9 02 CA 78 E5 
0090+  12AD C3 55 E6 CD 
0091+  12B1 F7 E8 38 A3                      .DB 0F7h, 0E8h, 038h, 0A3h, 04Fh, 0CDh, 007h, 0E9h, 0F5h, 0CDh, 000h, 0F0h, 0F1h, 0EDh, 05Bh, 076h, 0E5h, 0CBh, 023h, 0CBh, 023h, 0CBh, 023h, 0CBh
0091+  12B5 4F CD 07 E9 
0091+  12B9 F5 CD 00 F0 
0091+  12BD F1 ED 5B 76 
0091+  12C1 E5 CB 23 CB 
0091+  12C5 23 CB 23 CB 
0092+  12C9 23 B3 5F 15                      .DB 023h, 0B3h, 05Fh, 015h, 020h, 085h, 03Ah, 075h, 0E5h, 04Fh, 006h, 000h, 02Ah, 072h, 0E5h, 009h, 073h, 0CDh, 00Eh, 0E7h, 018h, 085h, 00Eh, 00Dh
0092+  12CD 20 85 3A 75 
0092+  12D1 E5 4F 06 00 
0092+  12D5 2A 72 E5 09 
0092+  12D9 73 CD 0E E7 
0092+  12DD 18 85 0E 0D 
0093+  12E1 CD 00 F0 3A                      .DB 0CDh, 000h, 0F0h, 03Ah, 074h, 0E5h, 0A7h, 020h, 014h, 0CDh, 0AAh, 0F3h, 00Dh, 01Bh, 062h, 02Eh, 000h, 0EDh, 05Bh, 072h, 0E5h, 0CDh, 0C9h, 0E8h
0093+  12E5 74 E5 A7 20 
0093+  12E9 14 CD AA F3 
0093+  12ED 0D 1B 62 2E 
0093+  12F1 00 ED 5B 72 
0093+  12F5 E5 CD C9 E8 
0094+  12F9 0E 20 CD 00                      .DB 00Eh, 020h, 0CDh, 000h, 0F0h, 0CDh, 0AAh, 0F3h, 01Bh, 062h, 027h, 000h, 02Ah, 072h, 0E5h, 006h, 008h, 07Eh, 0E5h, 0C5h, 0CDh, 0D0h, 0E8h, 0C1h
0094+  12FD F0 CD AA F3 
0094+  1301 1B 62 27 00 
0094+  1305 2A 72 E5 06 
0094+  1309 08 7E E5 C5 
0094+  130D CD D0 E8 C1 
0095+  1311 E1 23 10 F5                      .DB 0E1h, 023h, 010h, 0F5h, 0CDh, 0AAh, 0F3h, 01Bh, 062h, 02Eh, 000h, 02Ah, 072h, 0E5h, 006h, 003h, 03Ah, 074h, 0E5h, 0A7h, 028h, 002h, 006h, 008h
0095+  1315 CD AA F3 1B 
0095+  1319 62 2E 00 2A 
0095+  131D 72 E5 06 03 
0095+  1321 3A 74 E5 A7 
0095+  1325 28 02 06 08 
0096+  1329 7E FE 20 D2                      .DB 07Eh, 0FEh, 020h, 0D2h, 060h, 0E7h, 03Eh, 02Eh, 0FEh, 080h, 0DAh, 067h, 0E7h, 03Eh, 02Eh, 0E5h, 0C5h, 04Fh, 0CDh, 000h, 0F0h, 0C1h, 0E1h, 023h
0096+  132D 60 E7 3E 2E 
0096+  1331 FE 80 DA 67 
0096+  1335 E7 3E 2E E5 
0096+  1339 C5 4F CD 00 
0096+  133D F0 C1 E1 23 
0097+  1341 10 E6 C9 3E                      .DB 010h, 0E6h, 0C9h, 03Eh, 001h, 04Fh, 0CDh, 0D5h, 0F2h, 021h, 080h, 000h, 022h, 0BAh, 0E7h, 054h, 05Dh, 013h, 03Eh, 0E5h, 077h, 001h, 07Fh, 000h
0097+  1345 01 4F CD D5 
0097+  1349 F2 21 80 00 
0097+  134D 22 BA E7 54 
0097+  1351 5D 13 3E E5 
0097+  1355 77 01 7F 00 
0098+  1359 ED B0 3E 02                      .DB 0EDh, 0B0h, 03Eh, 002h, 032h, 0B8h, 0E7h, 04Fh, 0CDh, 0F0h, 0F2h, 0AFh, 032h, 0B9h, 0E7h, 0FEh, 01Ah, 028h, 014h, 04Fh, 0CDh, 0F5h, 0F2h, 0EDh
0098+  135D 32 B8 E7 4F 
0098+  1361 CD F0 F2 AF 
0098+  1365 32 B9 E7 FE 
0098+  1369 1A 28 14 4F 
0098+  136D CD F5 F2 ED 
0099+  1371 4B BA E7 CD                      .DB 04Bh, 0BAh, 0E7h, 0CDh, 0FAh, 0F2h, 0CDh, 038h, 0F3h, 03Ah, 0B9h, 0E7h, 03Ch, 018h, 0E5h, 03Ah, 0B8h, 0E7h, 0FEh, 04Fh, 0C8h, 03Ch, 018h, 0D4h
0099+  1375 FA F2 CD 38 
0099+  1379 F3 3A B9 E7 
0099+  137D 3C 18 E5 3A 
0099+  1381 B8 E7 FE 4F 
0099+  1385 C8 3C 18 D4 
0100+  1389 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 078h, 032h, 001h, 0E8h, 021h, 000h, 000h, 022h, 02Ch, 0E8h, 0C5h, 0CDh, 0EBh, 0E8h, 0FEh, 008h, 028h, 034h, 04Fh, 0F5h
0100+  138D 78 32 01 E8 
0100+  1391 21 00 00 22 
0100+  1395 2C E8 C5 CD 
0100+  1399 EB E8 FE 08 
0100+  139D 28 34 4F F5 
0101+  13A1 CD 00 F0 F1                      .DB 0CDh, 000h, 0F0h, 0F1h, 0CDh, 007h, 0E9h, 02Ah, 02Ch, 0E8h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 015h, 0CBh, 014h
0101+  13A5 CD 07 E9 2A 
0101+  13A9 2C E8 CB 27 
0101+  13AD CB 27 CB 27 
0101+  13B1 CB 27 CB 27 
0101+  13B5 CB 15 CB 14 
0102+  13B9 CB 27 CB 15                      .DB 0CBh, 027h, 0CBh, 015h, 0CBh, 014h, 0CBh, 027h, 0CBh, 015h, 0CBh, 014h, 0CBh, 027h, 0CBh, 015h, 0CBh, 014h, 022h, 02Ch, 0E8h, 0C1h, 010h, 0C6h
0102+  13BD CB 14 CB 27 
0102+  13C1 CB 15 CB 14 
0102+  13C5 CB 27 CB 15 
0102+  13C9 CB 14 22 2C 
0102+  13CD E8 C1 10 C6 
0103+  13D1 C9 00 C1 3A                      .DB 0C9h, 000h, 0C1h, 03Ah, 001h, 0E8h, 0B8h, 028h, 0BDh, 004h, 0C5h, 02Ah, 02Ch, 0E8h, 0CBh, 03Ch, 0CBh, 01Dh, 0CBh, 03Ch, 0CBh, 01Dh, 0CBh, 03Ch
0103+  13D5 01 E8 B8 28 
0103+  13D9 BD 04 C5 2A 
0103+  13DD 2C E8 CB 3C 
0103+  13E1 CB 1D CB 3C 
0103+  13E5 CB 1D CB 3C 
0104+  13E9 CB 1D CB 3C                      .DB 0CBh, 01Dh, 0CBh, 03Ch, 0CBh, 01Dh, 022h, 02Ch, 0E8h, 0CDh, 0AAh, 0F3h, 01Bh, 044h, 020h, 01Bh, 044h, 000h, 018h, 09Bh, 000h, 000h, 0CDh, 09Ah
0104+  13ED CB 1D 22 2C 
0104+  13F1 E8 CD AA F3 
0104+  13F5 1B 44 20 1B 
0104+  13F9 44 00 18 9B 
0104+  13FD 00 00 CD 9A 
0105+  1401 EF FE 0D C8                      .DB 0EFh, 0FEh, 00Dh, 0C8h, 006h, 000h, 0FEh, 008h, 0CCh, 003h, 0E8h, 018h, 0F1h, 000h, 000h, 000h, 000h, 000h, 0AFh, 032h, 03Dh, 0E8h, 022h, 03Eh
0105+  1405 06 00 FE 08 
0105+  1409 CC 03 E8 18 
0105+  140D F1 00 00 00 
0105+  1411 00 00 AF 32 
0105+  1415 3D E8 22 3E 
0106+  1419 E8 CD 89 E8                      .DB 0E8h, 0CDh, 089h, 0E8h, 001h, 058h, 002h, 0CDh, 011h, 0E9h, 0CDh, 071h, 0EFh, 0A7h, 0C8h, 0CDh, 09Ah, 0EFh, 0FEh, 081h, 020h, 009h, 03Ah, 03Dh
0106+  141D 01 58 02 CD 
0106+  1421 11 E9 CD 71 
0106+  1425 EF A7 C8 CD 
0106+  1429 9A EF FE 81 
0106+  142D 20 09 3A 3D 
0107+  1431 E8 3C 32 3D                      .DB 0E8h, 03Ch, 032h, 03Dh, 0E8h, 018h, 0E2h, 0FEh, 080h, 020h, 008h, 03Ah, 03Dh, 0E8h, 03Dh, 028h, 0D8h, 018h, 0EFh, 0FEh, 008h, 0C8h, 0FEh, 00Dh
0107+  1435 E8 18 E2 FE 
0107+  1439 80 20 08 3A 
0107+  143D 3D E8 3D 28 
0107+  1441 D8 18 EF FE 
0107+  1445 08 C8 FE 0D 
0108+  1449 20 CF 3A 3D                      .DB 020h, 0CFh, 03Ah, 03Dh, 0E8h, 0A7h, 028h, 0C9h, 02Ah, 040h, 0E8h, 07Eh, 023h, 066h, 06Fh, 0E5h, 0C9h, 00Eh, 00Dh, 0CDh, 000h, 0F0h, 03Ah, 03Dh
0108+  144D E8 A7 28 C9 
0108+  1451 2A 40 E8 7E 
0108+  1455 23 66 6F E5 
0108+  1459 C9 0E 0D CD 
0108+  145D 00 F0 3A 3D 
0109+  1461 E8 2A 3E E8                      .DB 0E8h, 02Ah, 03Eh, 0E8h, 0A7h, 028h, 012h, 047h, 07Eh, 023h, 0A7h, 020h, 0FBh, 022h, 040h, 0E8h, 07Eh, 023h, 05Eh, 023h, 0B3h, 028h, 019h, 010h
0109+  1465 A7 28 12 47 
0109+  1469 7E 23 A7 20 
0109+  146D FB 22 40 E8 
0109+  1471 7E 23 5E 23 
0109+  1475 B3 28 19 10 
0110+  1479 EF 7E A7 28                      .DB 0EFh, 07Eh, 0A7h, 028h, 009h, 04Fh, 0E5h, 0CDh, 000h, 0F0h, 0E1h, 023h, 018h, 0F3h, 00Eh, 01Bh, 0CDh, 000h, 0F0h, 00Eh, 04Bh, 0C3h, 000h, 0F0h
0110+  147D 09 4F E5 CD 
0110+  1481 00 F0 E1 23 
0110+  1485 18 F3 0E 1B 
0110+  1489 CD 00 F0 0E 
0110+  148D 4B C3 00 F0 
0111+  1491 3A 3D E8 3D                      .DB 03Ah, 03Dh, 0E8h, 03Dh, 032h, 03Dh, 0E8h, 018h, 0C0h, 0D5h, 07Ah, 0CDh, 0D0h, 0E8h, 0D1h, 07Bh, 04Fh, 0CBh, 03Fh, 0CBh, 03Fh, 0CBh, 03Fh, 0CBh
0111+  1495 32 3D E8 18 
0111+  1499 C0 D5 7A CD 
0111+  149D D0 E8 D1 7B 
0111+  14A1 4F CB 3F CB 
0111+  14A5 3F CB 3F CB 
0112+  14A9 3F C5 CD DF                      .DB 03Fh, 0C5h, 0CDh, 0DFh, 0E8h, 0C1h, 079h, 0E6h, 00Fh, 0C6h, 090h, 027h, 0CEh, 040h, 027h, 04Fh, 0C3h, 000h, 0F0h, 0CDh, 09Ah, 0EFh, 0FEh, 008h
0112+  14AD E8 C1 79 E6 
0112+  14B1 0F C6 90 27 
0112+  14B5 CE 40 27 4F 
0112+  14B9 C3 00 F0 CD 
0112+  14BD 9A EF FE 08 
0113+  14C1 C8 CD F7 E8                      .DB 0C8h, 0CDh, 0F7h, 0E8h, 038h, 0F5h, 0C9h, 0FEh, 030h, 0D8h, 0FEh, 03Ah, 03Fh, 0D0h, 0FEh, 061h, 0D8h, 0FEh, 067h, 0CBh, 0AFh, 03Fh, 0C9h, 0FEh
0113+  14C5 38 F5 C9 FE 
0113+  14C9 30 D8 FE 3A 
0113+  14CD 3F D0 FE 61 
0113+  14D1 D8 FE 67 CB 
0113+  14D5 AF 3F C9 FE 
0114+  14D9 41 30 03 D6                      .DB 041h, 030h, 003h, 0D6h, 030h, 0C9h, 0D6h, 037h, 0C9h, 0EDh, 05Bh, 004h, 0FFh, 0C5h, 0D5h, 0CDh, 071h, 0EFh, 0D1h, 0C1h, 0A7h, 0C0h, 02Ah, 004h
0114+  14DD 30 C9 D6 37 
0114+  14E1 C9 ED 5B 04 
0114+  14E5 FF C5 D5 CD 
0114+  14E9 71 EF D1 C1 
0114+  14ED A7 C0 2A 04 
0115+  14F1 FF ED 52 ED                      .DB 0FFh, 0EDh, 052h, 0EDh, 042h, 038h, 0EEh, 0C9h, 001h, 000h, 000h, 057h, 03Ah, 004h, 0FFh, 0A2h, 0C8h, 003h, 079h, 0B0h, 020h, 0F6h, 0C9h, 0F3h
0115+  14F5 42 38 EE C9 
0115+  14F9 01 00 00 57 
0115+  14FD 3A 04 FF A2 
0115+  1501 C8 03 79 B0 
0115+  1505 20 F6 C9 F3 
0116+  1509 E5 2A 04 FF                      .DB 0E5h, 02Ah, 004h, 0FFh, 023h, 022h, 004h, 0FFh, 0E1h, 0FBh, 0EDh, 04Dh, 006h, 010h, 0AFh, 029h, 017h, 0B9h, 038h, 002h, 02Ch, 091h, 010h, 0F7h
0116+  150D 23 22 04 FF 
0116+  1511 E1 FB ED 4D 
0116+  1515 06 10 AF 29 
0116+  1519 17 B9 38 02 
0116+  151D 2C 91 10 F7 
0117+  1521 C9 AF 21 89                      .DB 0C9h, 0AFh, 021h, 089h, 0E9h, 006h, 005h, 077h, 023h, 010h, 0FCh, 006h, 010h, 00Eh, 005h, 021h, 089h, 0E9h, 07Eh, 0FEh, 005h, 038h, 003h, 0C6h
0117+  1525 E9 06 05 77 
0117+  1529 23 10 FC 06 
0117+  152D 10 0E 05 21 
0117+  1531 89 E9 7E FE 
0117+  1535 05 38 03 C6 
0118+  1539 03 77 23 0D                      .DB 003h, 077h, 023h, 00Dh, 020h, 0F4h, 021h, 089h, 0E9h, 00Eh, 005h, 0CBh, 023h, 0CBh, 012h, 07Eh, 0CBh, 017h, 0CBh, 067h, 028h, 003h, 0E6h, 00Fh
0118+  153D 20 F4 21 89 
0118+  1541 E9 0E 05 CB 
0118+  1545 23 CB 12 7E 
0118+  1549 CB 17 CB 67 
0118+  154D 28 03 E6 0F 
0119+  1551 37 77 23 0D                      .DB 037h, 077h, 023h, 00Dh, 020h, 0F1h, 010h, 0D5h, 0C9h, 000h, 000h, 000h, 000h, 000h, 0CDh, 073h, 0EAh, 00Eh, 00Dh, 0CDh, 000h, 0F0h, 03Ah, 0E0h
0119+  1555 20 F1 10 D5 
0119+  1559 C9 00 00 00 
0119+  155D 00 00 CD 73 
0119+  1561 EA 0E 0D CD 
0119+  1565 00 F0 3A E0 
0120+  1569 FC 21 27 EA                      .DB 0FCh, 021h, 027h, 0EAh, 0E6h, 007h, 04Fh, 0CDh, 011h, 0EAh, 0CDh, 0F2h, 0E9h, 03Ah, 0E1h, 0FCh, 0E6h, 03Fh, 0CDh, 0F7h, 0E9h, 0CDh, 0F2h, 0E9h
0120+  156D E6 07 4F CD 
0120+  1571 11 EA CD F2 
0120+  1575 E9 3A E1 FC 
0120+  1579 E6 3F CD F7 
0120+  157D E9 CD F2 E9 
0121+  1581 3A E2 FC 21                      .DB 03Ah, 0E2h, 0FCh, 021h, 043h, 0EAh, 0E6h, 01Fh, 0CBh, 067h, 028h, 002h, 0D6h, 006h, 04Fh, 0CDh, 011h, 0EAh, 0CDh, 0F2h, 0E9h, 03Eh, 020h, 0CDh
0121+  1585 43 EA E6 1F 
0121+  1589 CB 67 28 02 
0121+  158D D6 06 4F CD 
0121+  1591 11 EA CD F2 
0121+  1595 E9 3E 20 CD 
0122+  1599 F7 E9 3A E3                      .DB 0F7h, 0E9h, 03Ah, 0E3h, 0FCh, 0CDh, 0F7h, 0E9h, 0CDh, 0F2h, 0E9h, 03Ah, 0DFh, 0FCh, 0E6h, 03Fh, 0CDh, 0F7h, 0E9h, 0CDh, 0F2h, 0E9h, 03Ah, 0DEh
0122+  159D FC CD F7 E9 
0122+  15A1 CD F2 E9 3A 
0122+  15A5 DF FC E6 3F 
0122+  15A9 CD F7 E9 CD 
0122+  15AD F2 E9 3A DE 
0123+  15B1 FC E6 7F CD                      .DB 0FCh, 0E6h, 07Fh, 0CDh, 0F7h, 0E9h, 0CDh, 0F2h, 0E9h, 03Ah, 0DDh, 0FCh, 0E6h, 07Fh, 0CDh, 0F7h, 0E9h, 0C9h, 00Eh, 020h, 0C3h, 000h, 0F0h, 04Fh
0123+  15B5 F7 E9 CD F2 
0123+  15B9 E9 3A DD FC 
0123+  15BD E6 7F CD F7 
0123+  15C1 E9 C9 0E 20 
0123+  15C5 C3 00 F0 4F 
0124+  15C9 CB 3F CB 3F                      .DB 0CBh, 03Fh, 0CBh, 03Fh, 0CBh, 03Fh, 0CBh, 03Fh, 0C6h, 030h, 0C5h, 04Fh, 0CDh, 000h, 0F0h, 0C1h, 079h, 0E6h, 00Fh, 0C6h, 030h, 04Fh, 0C3h, 000h
0124+  15CD CB 3F CB 3F 
0124+  15D1 C6 30 C5 4F 
0124+  15D5 CD 00 F0 C1 
0124+  15D9 79 E6 0F C6 
0124+  15DD 30 4F C3 00 
0125+  15E1 F0 0D 20 0C                      .DB 0F0h, 00Dh, 020h, 00Ch, 07Eh, 023h, 0A7h, 0C8h, 04Fh, 0E5h, 0CDh, 000h, 0F0h, 0E1h, 018h, 0F4h, 07Eh, 023h, 0A7h, 020h, 0FBh, 018h, 0EAh, 04Dh
0125+  15E5 7E 23 A7 C8 
0125+  15E9 4F E5 CD 00 
0125+  15ED F0 E1 18 F4 
0125+  15F1 7E 23 A7 20 
0125+  15F5 FB 18 EA 4D 
0126+  15F9 6F 6E 00 54                      .DB 06Fh, 06Eh, 000h, 054h, 075h, 065h, 000h, 057h, 065h, 064h, 000h, 054h, 068h, 075h, 000h, 046h, 072h, 069h, 000h, 053h, 061h, 074h, 000h, 053h
0126+  15FD 75 65 00 57 
0126+  1601 65 64 00 54 
0126+  1605 68 75 00 46 
0126+  1609 72 69 00 53 
0126+  160D 61 74 00 53 
0127+  1611 75 6E 00 4A                      .DB 075h, 06Eh, 000h, 04Ah, 061h, 06Eh, 000h, 046h, 065h, 062h, 000h, 04Dh, 061h, 072h, 000h, 041h, 070h, 072h, 000h, 04Dh, 061h, 079h, 000h, 04Ah
0127+  1615 61 6E 00 46 
0127+  1619 65 62 00 4D 
0127+  161D 61 72 00 41 
0127+  1621 70 72 00 4D 
0127+  1625 61 79 00 4A 
0128+  1629 75 6E 00 4A                      .DB 075h, 06Eh, 000h, 04Ah, 075h, 06Ch, 000h, 041h, 075h, 067h, 000h, 053h, 065h, 070h, 000h, 04Fh, 063h, 074h, 000h, 04Eh, 06Fh, 076h, 000h, 044h
0128+  162D 75 6C 00 41 
0128+  1631 75 67 00 53 
0128+  1635 65 70 00 4F 
0128+  1639 63 74 00 4E 
0128+  163D 6F 76 00 44 
0129+  1641 65 63 00 26                      .DB 065h, 063h, 000h, 026h, 06Fh, 02Eh, 000h, 0CDh, 0FCh, 0F8h, 030h, 018h, 021h, 0DDh, 0FCh, 006h, 007h, 018h, 008h, 0C5h, 0CDh, 051h, 0F9h, 0CDh
0129+  1645 6F 2E 00 CD 
0129+  1649 FC F8 30 18 
0129+  164D 21 DD FC 06 
0129+  1651 07 18 08 C5 
0129+  1655 CD 51 F9 CD 
0130+  1659 3E F9 C1 77                      .DB 03Eh, 0F9h, 0C1h, 077h, 023h, 010h, 0F4h, 0CDh, 0E5h, 0F8h, 037h, 0C9h, 0CDh, 0E5h, 0F8h, 0CDh, 0AAh, 0F3h, 045h, 072h, 072h, 06Fh, 072h, 020h
0130+  165D 23 10 F4 CD 
0130+  1661 E5 F8 37 C9 
0130+  1665 CD E5 F8 CD 
0130+  1669 AA F3 45 72 
0130+  166D 72 6F 72 20 
0131+  1671 67 65 74 74                      .DB 067h, 065h, 074h, 074h, 069h, 06Eh, 067h, 020h, 074h, 069h, 06Dh, 065h, 00Dh, 00Ah, 000h, 0AFh, 0C9h, 001h, 011h, 000h, 009h, 0E5h, 0DDh, 0E1h
0131+  1675 69 6E 67 20 
0131+  1679 74 69 6D 65 
0131+  167D 0D 0A 00 AF 
0131+  1681 C9 01 11 00 
0131+  1685 09 E5 DD E1 
0132+  1689 DD 77 F7 DD                      .DB 0DDh, 077h, 0F7h, 0DDh, 077h, 0EFh, 0AFh, 0DDh, 077h, 0F0h, 03Dh, 0DDh, 073h, 0F8h, 0DDh, 072h, 0F9h, 0AFh, 0DDh, 077h, 0FAh, 0FDh, 021h, 0FFh
0132+  168D 77 EF AF DD 
0132+  1691 77 F0 3D DD 
0132+  1695 73 F8 DD 72 
0132+  1699 F9 AF DD 77 
0132+  169D FA FD 21 FF 
0133+  16A1 FF CD 5E ED                      .DB 0FFh, 0CDh, 05Eh, 0EDh, 020h, 007h, 03Eh, 043h, 0CDh, 089h, 0EDh, 018h, 0F4h, 0FEh, 001h, 0C2h, 0EAh, 0EAh, 0DDh, 0E5h, 0E1h, 001h, 080h, 000h
0133+  16A5 20 07 3E 43 
0133+  16A9 CD 89 ED 18 
0133+  16AD F4 FE 01 C2 
0133+  16B1 EA EA DD E5 
0133+  16B5 E1 01 80 00 
0134+  16B9 18 40 FE 02                      .DB 018h, 040h, 0FEh, 002h, 020h, 007h, 062h, 06Bh, 001h, 000h, 004h, 018h, 035h, 0FEh, 004h, 020h, 00Ah, 03Eh, 006h, 0CDh, 089h, 0EDh, 0DDh, 034h
0134+  16BD 20 07 62 6B 
0134+  16C1 01 00 04 18 
0134+  16C5 35 FE 04 20 
0134+  16C9 0A 3E 06 CD 
0134+  16CD 89 ED DD 34 
0135+  16D1 F0 18 C6 FE                      .DB 0F0h, 018h, 0C6h, 0FEh, 018h, 020h, 01Eh, 0CDh, 069h, 0EDh, 0FEh, 018h, 03Eh, 004h, 020h, 010h, 03Eh, 006h, 0CDh, 089h, 0EDh, 0CDh, 05Eh, 0EDh
0135+  16D5 18 20 1E CD 
0135+  16D9 69 ED FE 18 
0135+  16DD 3E 04 20 10 
0135+  16E1 3E 06 CD 89 
0135+  16E5 ED CD 5E ED 
0136+  16E9 20 FB 3E 03                      .DB 020h, 0FBh, 03Eh, 003h, 0A7h, 0C9h, 03Eh, 005h, 04Fh, 03Eh, 004h, 0A7h, 0C9h, 04Fh, 03Eh, 002h, 0A7h, 0C9h, 0DDh, 077h, 0FBh, 0DDh, 07Eh, 0F7h
0136+  16ED A7 C9 3E 05 
0136+  16F1 4F 3E 04 A7 
0136+  16F5 C9 4F 3E 02 
0136+  16F9 A7 C9 DD 77 
0136+  16FD FB DD 7E F7 
0137+  1701 FE FF 28 02                      .DB 0FEh, 0FFh, 028h, 002h, 0D3h, 071h, 0AFh, 0DDh, 077h, 0F5h, 0DDh, 077h, 0F6h, 0DDh, 0BEh, 0FAh, 020h, 007h, 03Eh, 001h, 0DDh, 096h, 0FBh, 020h
0137+  1705 D3 71 AF DD 
0137+  1709 77 F5 DD 77 
0137+  170D F6 DD BE FA 
0137+  1711 20 07 3E 01 
0137+  1715 DD 96 FB 20 
0138+  1719 D5 DD 77 FF                      .DB 0D5h, 0DDh, 077h, 0FFh, 0DDh, 077h, 0FEh, 0CDh, 069h, 0EDh, 0DDh, 077h, 0FCh, 0CDh, 069h, 0EDh, 0DDh, 077h, 0FDh, 07Dh, 0A7h, 020h, 012h, 07Ch
0138+  171D DD 77 FE CD 
0138+  1721 69 ED DD 77 
0138+  1725 FC CD 69 ED 
0138+  1729 DD 77 FD 7D 
0138+  172D A7 20 12 7C 
0139+  1731 FE 80 20 0D                      .DB 0FEh, 080h, 020h, 00Dh, 0DDh, 07Eh, 0F7h, 03Ch, 028h, 007h, 0DDh, 077h, 0F7h, 0D3h, 071h, 026h, 040h, 0CDh, 069h, 0EDh, 077h, 0CDh, 02Bh, 0EDh
0139+  1735 DD 7E F7 3C 
0139+  1739 28 07 DD 77 
0139+  173D F7 D3 71 26 
0139+  1741 40 CD 69 ED 
0139+  1745 77 CD 2B ED 
0140+  1749 C5 01 FF FF                      .DB 0C5h, 001h, 0FFh, 0FFh, 0FDh, 009h, 0C1h, 038h, 010h, 0DDh, 035h, 0F4h, 0F2h, 091h, 0EBh, 0DDh, 034h, 0F4h, 0FDh, 023h, 021h, 05Dh, 0EDh, 018h
0140+  174D FD 09 C1 38 
0140+  1751 10 DD 35 F4 
0140+  1755 F2 91 EB DD 
0140+  1759 34 F4 FD 23 
0140+  175D 21 5D ED 18 
0141+  1761 09 DD 34 F5                      .DB 009h, 0DDh, 034h, 0F5h, 020h, 003h, 0DDh, 034h, 0F6h, 023h, 00Bh, 078h, 0B1h, 020h, 0BCh, 0AFh, 0CDh, 02Bh, 0EDh, 0AFh, 0CDh, 02Bh, 0EDh, 0CDh
0141+  1765 20 03 DD 34 
0141+  1769 F6 23 0B 78 
0141+  176D B1 20 BC AF 
0141+  1771 CD 2B ED AF 
0141+  1775 CD 2B ED CD 
0142+  1779 69 ED 47 CD                      .DB 069h, 0EDh, 047h, 0CDh, 069h, 0EDh, 04Fh, 0DDh, 07Eh, 0FCh, 02Fh, 0DDh, 0BEh, 0FDh, 03Eh, 001h, 0C2h, 020h, 0EBh, 0DDh, 07Eh, 0FFh, 0B8h, 03Eh
0142+  177D 69 ED 4F DD 
0142+  1781 7E FC 2F DD 
0142+  1785 BE FD 3E 01 
0142+  1789 C2 20 EB DD 
0142+  178D 7E FF B8 3E 
0143+  1791 02 C2 20 EB                      .DB 002h, 0C2h, 020h, 0EBh, 0DDh, 07Eh, 0FEh, 0B9h, 03Eh, 003h, 0C2h, 020h, 0EBh, 0DDh, 07Eh, 0FCh, 0DDh, 0BEh, 0FAh, 020h, 023h, 0DDh, 034h, 0FAh
0143+  1795 DD 7E FE B9 
0143+  1799 3E 03 C2 20 
0143+  179D EB DD 7E FC 
0143+  17A1 DD BE FA 20 
0143+  17A5 23 DD 34 FA 
0144+  17A9 A7 28 4A DD                      .DB 0A7h, 028h, 04Ah, 0DDh, 07Eh, 0FBh, 0FEh, 001h, 020h, 00Ch, 0DDh, 04Eh, 0F5h, 006h, 000h, 0DDh, 0E5h, 0E1h, 0EDh, 0B0h, 018h, 002h, 054h, 05Dh
0144+  17AD 7E FB FE 01 
0144+  17B1 20 0C DD 4E 
0144+  17B5 F5 06 00 DD 
0144+  17B9 E5 E1 ED B0 
0144+  17BD 18 02 54 5D 
0145+  17C1 3E 06 CD 89                      .DB 03Eh, 006h, 0CDh, 089h, 0EDh, 0C3h, 0D6h, 0EAh, 0AFh, 0EDh, 052h, 030h, 00Dh, 0DDh, 07Eh, 0F7h, 0FEh, 0FFh, 028h, 006h, 03Dh, 0DDh, 077h, 0F7h
0145+  17C5 ED C3 D6 EA 
0145+  17C9 AF ED 52 30 
0145+  17CD 0D DD 7E F7 
0145+  17D1 FE FF 28 06 
0145+  17D5 3D DD 77 F7 
0146+  17D9 D3 71 DD 4E                      .DB 0D3h, 071h, 0DDh, 04Eh, 0F5h, 0DDh, 046h, 0F6h, 0FDh, 0E5h, 0E1h, 009h, 030h, 003h, 0DDh, 034h, 0F4h, 0E5h, 0FDh, 0E1h, 0CDh, 05Eh, 0EDh, 020h
0146+  17DD F5 DD 46 F6 
0146+  17E1 FD E5 E1 09 
0146+  17E5 30 03 DD 34 
0146+  17E9 F4 E5 FD E1 
0146+  17ED CD 5E ED 20 
0147+  17F1 FB 3E 15 18                      .DB 0FBh, 03Eh, 015h, 018h, 0CDh, 0DDh, 0E5h, 0E1h, 07Eh, 0A7h, 020h, 009h, 03Eh, 006h, 0CDh, 089h, 0EDh, 03Eh, 000h, 0A7h, 0C9h, 0DDh, 07Eh, 0F0h
0147+  17F5 CD DD E5 E1 
0147+  17F9 7E A7 20 09 
0147+  17FD 3E 06 CD 89 
0147+  1801 ED 3E 00 A7 
0147+  1805 C9 DD 7E F0 
0148+  1809 A7 28 04 3E                      .DB 0A7h, 028h, 004h, 03Eh, 008h, 0A7h, 0C9h, 07Eh, 023h, 0A7h, 028h, 071h, 0FEh, 05Fh, 020h, 0F7h, 07Eh, 04Fh, 023h, 0FEh, 06Dh, 020h, 007h, 006h
0148+  180D 08 A7 C9 7E 
0148+  1811 23 A7 28 71 
0148+  1815 FE 5F 20 F7 
0148+  1819 7E 4F 23 FE 
0148+  181D 6D 20 07 06 
0149+  1821 04 11 00 00                      .DB 004h, 011h, 000h, 000h, 018h, 009h, 0FEh, 070h, 020h, 0E7h, 006h, 002h, 011h, 000h, 000h, 07Eh, 023h, 0D6h, 030h, 038h, 048h, 0FEh, 00Ah, 038h
0149+  1825 18 09 FE 70 
0149+  1829 20 E7 06 02 
0149+  182D 11 00 00 7E 
0149+  1831 23 D6 30 38 
0149+  1835 48 FE 0A 38 
0150+  1839 08 D6 07 38                      .DB 008h, 0D6h, 007h, 038h, 040h, 0FEh, 010h, 030h, 03Ch, 0E5h, 062h, 06Bh, 029h, 029h, 029h, 029h, 0B5h, 054h, 05Fh, 0E1h, 010h, 0E1h, 079h, 0FEh
0150+  183D 40 FE 10 30 
0150+  1841 3C E5 62 6B 
0150+  1845 29 29 29 29 
0150+  1849 B5 54 5F E1 
0150+  184D 10 E1 79 FE 
0151+  1851 70 20 12 DD                      .DB 070h, 020h, 012h, 0DDh, 07Eh, 0F7h, 0FEh, 0FFh, 020h, 0B5h, 0DDh, 073h, 0EFh, 0DDh, 073h, 0F7h, 011h, 000h, 040h, 018h, 010h, 03Eh, 0FFh, 0DDh
0151+  1855 7E F7 FE FF 
0151+  1859 20 B5 DD 73 
0151+  185D EF DD 73 F7 
0151+  1861 11 00 40 18 
0151+  1865 10 3E FF DD 
0152+  1869 BE F8 20 A3                      .DB 0BEh, 0F8h, 020h, 0A3h, 0DDh, 0BEh, 0F9h, 020h, 09Eh, 0DDh, 036h, 0EFh, 0FEh, 0DDh, 073h, 0F8h, 0DDh, 072h, 0F9h, 018h, 092h, 0DDh, 05Eh, 0F8h
0152+  186D DD BE F9 20 
0152+  1871 9E DD 36 EF 
0152+  1875 FE DD 73 F8 
0152+  1879 DD 72 F9 18 
0152+  187D 92 DD 5E F8 
0153+  1881 DD 56 F9 18                      .DB 0DDh, 056h, 0F9h, 018h, 08Ah, 03Eh, 0FFh, 0DDh, 0BEh, 0F8h, 020h, 009h, 0DDh, 0BEh, 0F9h, 020h, 004h, 03Eh, 006h, 0A7h, 0C9h, 03Eh, 0FFh, 0DDh
0153+  1885 8A 3E FF DD 
0153+  1889 BE F8 20 09 
0153+  188D DD BE F9 20 
0153+  1891 04 3E 06 A7 
0153+  1895 C9 3E FF DD 
0154+  1899 77 F1 DD 77                      .DB 077h, 0F1h, 0DDh, 077h, 0F2h, 0DDh, 077h, 0F3h, 0DDh, 077h, 0F4h, 0FDh, 021h, 0FFh, 0FFh, 044h, 04Dh, 021h, 000h, 000h, 00Ah, 0A7h, 0CAh, 0F0h
0154+  189D F2 DD 77 F3 
0154+  18A1 DD 77 F4 FD 
0154+  18A5 21 FF FF 44 
0154+  18A9 4D 21 00 00 
0154+  18AD 0A A7 CA F0 
0155+  18B1 EB 0A 03 A7                      .DB 0EBh, 00Ah, 003h, 0A7h, 028h, 02Fh, 0FEh, 020h, 028h, 02Bh, 0D6h, 030h, 038h, 039h, 0FEh, 00Ah, 030h, 035h, 0C5h, 0D5h, 0F5h, 0EBh, 03Eh, 00Ah
0155+  18B5 28 2F FE 20 
0155+  18B9 28 2B D6 30 
0155+  18BD 38 39 FE 0A 
0155+  18C1 30 35 C5 D5 
0155+  18C5 F5 EB 3E 0A 
0156+  18C9 01 00 08 61                      .DB 001h, 000h, 008h, 061h, 069h, 029h, 017h, 030h, 002h, 019h, 089h, 010h, 0F8h, 0DDh, 077h, 0F3h, 0F1h, 05Fh, 051h, 019h, 030h, 003h, 0DDh, 034h
0156+  18CD 69 29 17 30 
0156+  18D1 02 19 89 10 
0156+  18D5 F8 DD 77 F3 
0156+  18D9 F1 5F 51 19 
0156+  18DD 30 03 DD 34 
0157+  18E1 F3 D1 C1 18                      .DB 0F3h, 0D1h, 0C1h, 018h, 0CCh, 0E5h, 0FDh, 0E1h, 0DDh, 075h, 0F1h, 0DDh, 074h, 0F2h, 0DDh, 07Eh, 0F3h, 0DDh, 077h, 0F4h, 0C3h, 0F0h, 0EBh, 03Eh
0157+  18E5 CC E5 FD E1 
0157+  18E9 DD 75 F1 DD 
0157+  18ED 74 F2 DD 7E 
0157+  18F1 F3 DD 77 F4 
0157+  18F5 C3 F0 EB 3E 
0158+  18F9 05 A7 C9 E5                      .DB 005h, 0A7h, 0C9h, 0E5h, 0C5h, 006h, 001h, 04Fh, 0DDh, 066h, 0FFh, 0DDh, 06Eh, 0FEh, 029h, 0F5h, 0CBh, 021h, 0CBh, 010h, 030h, 002h, 0CBh, 0C1h
0158+  18FD C5 06 01 4F 
0158+  1901 DD 66 FF DD 
0158+  1905 6E FE 29 F5 
0158+  1909 CB 21 CB 10 
0158+  190D 30 02 CB C1 
0159+  1911 CB 40 28 01                      .DB 0CBh, 040h, 028h, 001h, 023h, 0F1h, 030h, 008h, 03Eh, 021h, 0ADh, 06Fh, 03Eh, 010h, 0ACh, 067h, 0CBh, 041h, 028h, 0E2h, 0DDh, 074h, 0FFh, 0DDh
0159+  1915 23 F1 30 08 
0159+  1919 3E 21 AD 6F 
0159+  191D 3E 10 AC 67 
0159+  1921 CB 41 28 E2 
0159+  1925 DD 74 FF DD 
0160+  1929 75 FE C1 E1                      .DB 075h, 0FEh, 0C1h, 0E1h, 0C9h, 000h, 021h, 067h, 0EDh, 0E5h, 0CDh, 069h, 0EDh, 0E1h, 0C9h, 0AFh, 0C9h, 0C5h, 001h, 050h, 0C3h, 0DBh, 025h, 0CBh
0160+  192D C9 00 21 67 
0160+  1931 ED E5 CD 69 
0160+  1935 ED E1 C9 AF 
0160+  1939 C9 C5 01 50 
0160+  193D C3 DB 25 CB 
0161+  1941 47 20 12 78                      .DB 047h, 020h, 012h, 078h, 006h, 00Ah, 0A7h, 010h, 0FDh, 047h, 00Bh, 078h, 0B1h, 020h, 0EEh, 0C1h, 0C1h, 03Eh, 001h, 0A7h, 0C9h, 0DBh, 020h, 0C1h
0161+  1945 06 0A A7 10 
0161+  1949 FD 47 0B 78 
0161+  194D B1 20 EE C1 
0161+  1951 C1 3E 01 A7 
0161+  1955 C9 DB 20 C1 
0162+  1959 C9 C5 F5 01                      .DB 0C9h, 0C5h, 0F5h, 001h, 050h, 0C3h, 0DBh, 025h, 0CBh, 06Fh, 0C2h, 0A2h, 0EDh, 00Bh, 078h, 0B1h, 0C2h, 08Eh, 0EDh, 0F1h, 0C1h, 0C1h, 03Eh, 007h
0162+  195D 50 C3 DB 25 
0162+  1961 CB 6F C2 A2 
0162+  1965 ED 0B 78 B1 
0162+  1969 C2 8E ED F1 
0162+  196D C1 C1 3E 07 
0163+  1971 A7 C9 F1 C1                      .DB 0A7h, 0C9h, 0F1h, 0C1h, 0D3h, 020h, 0C9h, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh
0163+  1975 D3 20 C9 FF 
0163+  1979 FF FF FF FF 
0163+  197D FF FF FF FF 
0163+  1981 FF FF FF FF 
0163+  1985 FF FF FF FF 
0164+  1989 FF FF FF FF                      .DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh
0164+  198D FF FF FF FF 
0164+  1991 FF FF FF FF 
0164+  1995 FF FF FF FF 
0164+  1999 FF FF FF FF 
0164+  199D FF FF FF FF 
0165+  19A1 FF FF FF FF                      .DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh
0165+  19A5 FF FF FF FF 
0165+  19A9 FF FF FF FF 
0165+  19AD FF FF FF FF 
0165+  19B1 FF FF FF FF 
0165+  19B5 FF FF FF FF 
0166+  19B9 FF FF FF FF                      .DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh
0166+  19BD FF FF FF FF 
0166+  19C1 FF FF FF FF 
0166+  19C5 FF FF FF FF 
0166+  19C9 FF FF FF FF 
0166+  19CD FF FF FF FF 
0167+  19D1 C3 F1 EE C3                      .DB 0C3h, 0F1h, 0EEh, 0C3h, 008h, 0EFh, 0C3h, 071h, 0EFh, 0C3h, 09Ah, 0EFh, 0C3h, 000h, 0F0h, 0C3h, 0D0h, 0F2h, 0C3h, 0D2h, 0F2h, 0C3h, 0D4h, 0F2h
0167+  19D5 08 EF C3 71 
0167+  19D9 EF C3 9A EF 
0167+  19DD C3 00 F0 C3 
0167+  19E1 D0 F2 C3 D2 
0167+  19E5 F2 C3 D4 F2 
0168+  19E9 C3 EE F2 C3                      .DB 0C3h, 0EEh, 0F2h, 0C3h, 0D5h, 0F2h, 0C3h, 0F0h, 0F2h, 0C3h, 0F5h, 0F2h, 0C3h, 0FAh, 0F2h, 0C3h, 0FFh, 0F2h, 0C3h, 038h, 0F3h, 0C3h, 0A5h, 0F3h
0168+  19ED D5 F2 C3 F0 
0168+  19F1 F2 C3 F5 F2 
0168+  19F5 C3 FA F2 C3 
0168+  19F9 FF F2 C3 38 
0168+  19FD F3 C3 A5 F3 
0169+  1A01 C3 A7 F3 00                      .DB 0C3h, 0A7h, 0F3h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 071h, 0EEh, 053h, 0EEh, 000h, 000h, 044h, 0FFh, 000h, 000h, 000h, 000h, 000h
0169+  1A05 00 00 00 00 
0169+  1A09 00 00 00 71 
0169+  1A0D EE 53 EE 00 
0169+  1A11 00 44 FF 00 
0169+  1A15 00 00 00 00 
0170+  1A19 00 00 00 71                      .DB 000h, 000h, 000h, 071h, 0EEh, 062h, 0EEh, 000h, 000h, 064h, 0FFh, 01Ah, 000h, 003h, 007h, 000h, 0F8h, 000h, 03Fh, 000h, 0C0h, 000h, 000h, 000h
0170+  1A1D EE 62 EE 00 
0170+  1A21 00 64 FF 1A 
0170+  1A25 00 03 07 00 
0170+  1A29 F8 00 3F 00 
0170+  1A2D C0 00 00 00 
0171+  1A31 02 00 1A 00                      .DB 002h, 000h, 01Ah, 000h, 003h, 007h, 000h, 0F8h, 000h, 03Fh, 000h, 0C0h, 000h, 000h, 000h, 002h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0171+  1A35 03 07 00 F8 
0171+  1A39 00 3F 00 C0 
0171+  1A3D 00 00 00 02 
0171+  1A41 00 00 00 00 
0171+  1A45 00 00 00 00 
0172+  1A49 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0172+  1A4D 00 00 00 00 
0172+  1A51 00 00 00 00 
0172+  1A55 00 00 00 00 
0172+  1A59 00 00 00 00 
0172+  1A5D 00 00 00 00 
0173+  1A61 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0173+  1A65 00 00 00 00 
0173+  1A69 00 00 00 00 
0173+  1A6D 00 00 00 00 
0173+  1A71 00 00 00 00 
0173+  1A75 00 00 00 00 
0174+  1A79 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0174+  1A7D 00 00 00 00 
0174+  1A81 00 00 00 00 
0174+  1A85 00 00 00 00 
0174+  1A89 00 00 00 00 
0174+  1A8D 00 00 00 00 
0175+  1A91 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0175+  1A95 00 00 00 00 
0175+  1A99 00 00 00 00 
0175+  1A9D 00 00 00 00 
0175+  1AA1 00 00 00 00 
0175+  1AA5 00 00 00 00 
0176+  1AA9 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0176+  1AAD 00 00 00 00 
0176+  1AB1 00 00 00 00 
0176+  1AB5 00 00 00 00 
0176+  1AB9 00 00 00 00 
0176+  1ABD 00 00 00 00 
0177+  1AC1 00 F3 31 00                      .DB 000h, 0F3h, 031h, 000h, 000h, 021h, 000h, 0EEh, 022h, 0FEh, 0FFh, 0CDh, 0C2h, 0F3h, 0AFh, 032h, 004h, 000h, 03Ch, 032h, 003h, 000h, 018h, 007h
0177+  1AC5 00 21 00 EE 
0177+  1AC9 22 FE FF CD 
0177+  1ACD C2 F3 AF 32 
0177+  1AD1 04 00 3C 32 
0177+  1AD5 03 00 18 07 
0178+  1AD9 F3 31 00 00                      .DB 0F3h, 031h, 000h, 000h, 0CDh, 031h, 0EFh, 0FBh, 021h, 080h, 000h, 022h, 03Fh, 0FFh, 03Eh, 0C3h, 032h, 000h, 000h, 021h, 003h, 0EEh, 022h, 001h
0178+  1ADD CD 31 EF FB 
0178+  1AE1 21 80 00 22 
0178+  1AE5 3F FF 3E C3 
0178+  1AE9 32 00 00 21 
0178+  1AED 03 EE 22 01 
0179+  1AF1 00 32 05 00                      .DB 000h, 032h, 005h, 000h, 021h, 006h, 0E0h, 022h, 006h, 000h, 03Ah, 004h, 000h, 04Fh, 0C3h, 000h, 0D8h, 00Eh, 000h, 0CDh, 0D5h, 0F2h, 0CDh, 0EEh
0179+  1AF5 21 06 E0 22 
0179+  1AF9 06 00 3A 04 
0179+  1AFD 00 4F C3 00 
0179+  1B01 D8 0E 00 CD 
0179+  1B05 D5 F2 CD EE 
0180+  1B09 F2 06 2C 0E                      .DB 0F2h, 006h, 02Ch, 00Eh, 000h, 016h, 000h, 021h, 000h, 0D8h, 0C5h, 0D5h, 0E5h, 04Ah, 0CDh, 0F5h, 0F2h, 0C1h, 0C5h, 0CDh, 0FAh, 0F2h, 0CDh, 0FFh
0180+  1B0D 00 16 00 21 
0180+  1B11 00 D8 C5 D5 
0180+  1B15 E5 4A CD F5 
0180+  1B19 F2 C1 C5 CD 
0180+  1B1D FA F2 CD FF 
0181+  1B21 F2 A7 20 B4                      .DB 0F2h, 0A7h, 020h, 0B4h, 0E1h, 011h, 080h, 000h, 019h, 0D1h, 0C1h, 005h, 0C8h, 014h, 07Ah, 0FEh, 01Bh, 038h, 0DFh, 016h, 001h, 00Ch, 0C5h, 0D5h
0181+  1B25 E1 11 80 00 
0181+  1B29 19 D1 C1 05 
0181+  1B2D C8 14 7A FE 
0181+  1B31 1B 38 DF 16 
0181+  1B35 01 0C C5 D5 
0182+  1B39 E5 CD F0 F2                      .DB 0E5h, 0CDh, 0F0h, 0F2h, 0E1h, 0D1h, 0C1h, 018h, 0D1h, 03Ah, 003h, 000h, 0E6h, 003h, 028h, 012h, 0FEh, 002h, 028h, 015h, 03Ah, 036h, 0FFh, 0A7h
0182+  1B3D E1 D1 C1 18 
0182+  1B41 D1 3A 03 00 
0182+  1B45 E6 03 28 12 
0182+  1B49 FE 02 28 15 
0182+  1B4D 3A 36 FF A7 
0183+  1B51 20 05 3A 28                      .DB 020h, 005h, 03Ah, 028h, 0FFh, 0A7h, 0C8h, 03Eh, 0FFh, 0C9h, 0AFh, 0CDh, 057h, 0F8h, 0D0h, 03Dh, 0C9h, 03Ah, 003h, 000h, 0E6h, 00Ch, 028h, 0F2h
0183+  1B55 FF A7 C8 3E 
0183+  1B59 FF C9 AF CD 
0183+  1B5D 57 F8 D0 3D 
0183+  1B61 C9 3A 03 00 
0183+  1B65 E6 0C 28 F2 
0184+  1B69 18 E2 3A 03                      .DB 018h, 0E2h, 03Ah, 003h, 000h, 0E6h, 003h, 028h, 017h, 0FEh, 002h, 028h, 019h, 03Ah, 036h, 0FFh, 03Dh, 0FAh, 0C7h, 0EFh, 032h, 036h, 0FFh, 021h
0184+  1B6D 00 E6 03 28 
0184+  1B71 17 FE 02 28 
0184+  1B75 19 3A 36 FF 
0184+  1B79 3D FA C7 EF 
0184+  1B7D 32 36 FF 21 
0185+  1B81 FD EF 4F 06                      .DB 0FDh, 0EFh, 04Fh, 006h, 000h, 009h, 07Eh, 0C9h, 0CDh, 066h, 0F8h, 0D8h, 018h, 0FAh, 03Ah, 003h, 000h, 0E6h, 00Ch, 028h, 0F3h, 018h, 0DEh, 03Ah
0185+  1B85 00 09 7E C9 
0185+  1B89 CD 66 F8 D8 
0185+  1B8D 18 FA 3A 03 
0185+  1B91 00 E6 0C 28 
0185+  1B95 F3 18 DE 3A 
0186+  1B99 28 FF A7 28                      .DB 028h, 0FFh, 0A7h, 028h, 003h, 0C3h, 02Ah, 0F7h, 03Ah, 032h, 0FFh, 0F6h, 001h, 032h, 032h, 0FFh, 0F3h, 0EDh, 05Bh, 02Dh, 0FFh, 07Ah, 03Dh, 032h
0186+  1B9D 03 C3 2A F7 
0186+  1BA1 3A 32 FF F6 
0186+  1BA5 01 32 32 FF 
0186+  1BA9 F3 ED 5B 2D 
0186+  1BAD FF 7A 3D 32 
0187+  1BB1 2E FF CD 04                      .DB 02Eh, 0FFh, 0CDh, 004h, 0F1h, 0FBh, 0CDh, 02Ah, 0F7h, 047h, 03Ah, 032h, 0FFh, 0E6h, 0FEh, 032h, 032h, 0FFh, 0C5h, 01Eh, 000h, 0F3h, 0CDh, 080h
0187+  1BB5 F1 FB CD 2A 
0187+  1BB9 F7 47 3A 32 
0187+  1BBD FF E6 FE 32 
0187+  1BC1 32 FF C5 1E 
0187+  1BC5 00 F3 CD 80 
0188+  1BC9 F5 FB C1 78                      .DB 0F5h, 0FBh, 0C1h, 078h, 0C9h, 04Bh, 02Fh, 01Bh, 03Ah, 003h, 000h, 0E6h, 003h, 0FEh, 002h, 020h, 00Bh, 03Ah, 003h, 000h, 0E6h, 0C0h, 020h, 008h
0188+  1BCD C9 4B 2F 1B 
0188+  1BD1 3A 03 00 E6 
0188+  1BD5 03 FE 02 20 
0188+  1BD9 0B 3A 03 00 
0188+  1BDD E6 C0 20 08 
0189+  1BE1 79 C3 3A F8                      .DB 079h, 0C3h, 03Ah, 0F8h, 079h, 0CDh, 03Ah, 0F8h, 03Ah, 034h, 0FFh, 0B7h, 0C2h, 0B5h, 0F0h, 03Ah, 032h, 0FFh, 0E6h, 008h, 028h, 07Ch, 0EDh, 05Bh
0189+  1BE5 79 CD 3A F8 
0189+  1BE9 3A 34 FF B7 
0189+  1BED C2 B5 F0 3A 
0189+  1BF1 32 FF E6 08 
0189+  1BF5 28 7C ED 5B 
0190+  1BF9 2D FF 3A 32                      .DB 02Dh, 0FFh, 03Ah, 032h, 0FFh, 0E6h, 0F7h, 032h, 032h, 0FFh, 079h, 0FEh, 041h, 020h, 004h, 01Dh, 0C3h, 004h, 0F1h, 0FEh, 042h, 020h, 004h, 01Ch
0190+  1BFD FF E6 F7 32 
0190+  1C01 32 FF 79 FE 
0190+  1C05 41 20 04 1D 
0190+  1C09 C3 04 F1 FE 
0190+  1C0D 42 20 04 1C 
0191+  1C11 C3 04 F1 FE                      .DB 0C3h, 004h, 0F1h, 0FEh, 043h, 020h, 009h, 03Ah, 030h, 0FFh, 0BAh, 0C8h, 014h, 0C3h, 004h, 0F1h, 0FEh, 044h, 020h, 005h, 015h, 0C8h, 0C3h, 004h
0191+  1C15 43 20 09 3A 
0191+  1C19 30 FF BA C8 
0191+  1C1D 14 C3 04 F1 
0191+  1C21 FE 44 20 05 
0191+  1C25 15 C8 C3 04 
0192+  1C29 F1 FE 46 C8                      .DB 0F1h, 0FEh, 046h, 0C8h, 0FEh, 047h, 0C8h, 0FEh, 048h, 020h, 006h, 011h, 001h, 001h, 0C3h, 004h, 0F1h, 0FEh, 049h, 0C8h, 0FEh, 04Ah, 020h, 001h
0192+  1C2D FE 47 C8 FE 
0192+  1C31 48 20 06 11 
0192+  1C35 01 01 C3 04 
0192+  1C39 F1 FE 49 C8 
0192+  1C3D FE 4A 20 01 
0193+  1C41 C9 FE 4B 20                      .DB 0C9h, 0FEh, 04Bh, 020h, 00Eh, 0EDh, 04Bh, 02Dh, 0FFh, 005h, 079h, 03Dh, 048h, 0CDh, 0ACh, 0F2h, 0C3h, 08Eh, 0F1h, 0FEh, 059h, 020h, 008h, 032h
0193+  1C45 0E ED 4B 2D 
0193+  1C49 FF 05 79 3D 
0193+  1C4D 48 CD AC F2 
0193+  1C51 C3 8E F1 FE 
0193+  1C55 59 20 08 32 
0194+  1C59 34 FF AF 32                      .DB 034h, 0FFh, 0AFh, 032h, 035h, 0FFh, 0C9h, 0FEh, 05Ah, 020h, 006h, 03Eh, 003h, 032h, 036h, 0FFh, 0C9h, 0FEh, 062h, 028h, 0EAh, 0FEh, 063h, 028h
0194+  1C5D 35 FF C9 FE 
0194+  1C61 5A 20 06 3E 
0194+  1C65 03 32 36 FF 
0194+  1C69 C9 FE 62 28 
0194+  1C6D EA FE 63 28 
0195+  1C71 E6 C9 79 FE                      .DB 0E6h, 0C9h, 079h, 0FEh, 01Bh, 0C2h, 055h, 0F2h, 03Ah, 032h, 0FFh, 0F6h, 008h, 032h, 032h, 0FFh, 0AFh, 032h, 034h, 0FFh, 0C9h, 03Ah, 034h, 0FFh
0195+  1C75 1B C2 55 F2 
0195+  1C79 3A 32 FF F6 
0195+  1C7D 08 32 32 FF 
0195+  1C81 AF 32 34 FF 
0195+  1C85 C9 3A 34 FF 
0196+  1C89 FE 59 28 0D                      .DB 0FEh, 059h, 028h, 00Dh, 0FEh, 062h, 028h, 020h, 0FEh, 063h, 028h, 02Dh, 0AFh, 032h, 034h, 0FFh, 0C9h, 03Ah, 035h, 0FFh, 0A7h, 020h, 005h, 079h
0196+  1C8D FE 62 28 20 
0196+  1C91 FE 63 28 2D 
0196+  1C95 AF 32 34 FF 
0196+  1C99 C9 3A 35 FF 
0196+  1C9D A7 20 05 79 
0197+  1CA1 32 35 FF C9                      .DB 032h, 035h, 0FFh, 0C9h, 0D6h, 01Fh, 05Fh, 079h, 0D6h, 01Fh, 057h, 0CDh, 0C4h, 0F0h, 018h, 024h, 03Ah, 031h, 0FFh, 0E6h, 0F0h, 047h, 079h, 0D6h
0197+  1CA5 D6 1F 5F 79 
0197+  1CA9 D6 1F 57 CD 
0197+  1CAD C4 F0 18 24 
0197+  1CB1 3A 31 FF E6 
0197+  1CB5 F0 47 79 D6 
0198+  1CB9 1F E6 0F B0                      .DB 01Fh, 0E6h, 00Fh, 0B0h, 032h, 031h, 0FFh, 018h, 0D3h, 03Ah, 031h, 0FFh, 0E6h, 00Fh, 047h, 079h, 0D6h, 01Fh, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h
0198+  1CBD 32 31 FF 18 
0198+  1CC1 D3 3A 31 FF 
0198+  1CC5 E6 0F 47 79 
0198+  1CC9 D6 1F CB 27 
0198+  1CCD CB 27 CB 27 
0199+  1CD1 CB 27 18 E7                      .DB 0CBh, 027h, 018h, 0E7h, 02Ah, 02Bh, 0FFh, 0EDh, 04Bh, 02Dh, 0FFh, 07Bh, 0B9h, 032h, 02Dh, 0FFh, 020h, 009h, 07Ah, 0B8h, 032h, 02Eh, 0FFh, 020h
0199+  1CD5 2A 2B FF ED 
0199+  1CD9 4B 2D FF 7B 
0199+  1CDD B9 32 2D FF 
0199+  1CE1 20 09 7A B8 
0199+  1CE5 32 2E FF 20 
0200+  1CE9 19 18 73 A7                      .DB 019h, 018h, 073h, 0A7h, 020h, 005h, 03Ch, 032h, 02Dh, 0FFh, 0AFh, 03Dh, 06Fh, 03Ah, 02Fh, 0FFh, 0BDh, 020h, 003h, 032h, 02Dh, 0FFh, 07Ah, 032h
0200+  1CED 20 05 3C 32 
0200+  1CF1 2D FF AF 3D 
0200+  1CF5 6F 3A 2F FF 
0200+  1CF9 BD 20 03 32 
0200+  1CFD 2D FF 7A 32 
0201+  1D01 2E FF 7C 3C                      .DB 02Eh, 0FFh, 07Ch, 03Ch, 092h, 030h, 018h, 03Ah, 032h, 0FFh, 0E6h, 001h, 03Eh, 001h, 028h, 001h, 03Dh, 0C6h, 018h, 047h, 084h, 0BAh, 030h, 00Ah
0201+  1D05 92 30 18 3A 
0201+  1D09 32 FF E6 01 
0201+  1D0D 3E 01 28 01 
0201+  1D11 3D C6 18 47 
0201+  1D15 84 BA 30 0A 
0202+  1D19 7A 90 30 05                      .DB 07Ah, 090h, 030h, 005h, 0AFh, 018h, 002h, 07Ah, 03Dh, 067h, 07Dh, 0B7h, 0F2h, 06Bh, 0F1h, 0AFh, 06Fh, 03Ah, 02Ah, 0FFh, 03Dh, 0E6h, 03Fh, 032h
0202+  1D1D AF 18 02 7A 
0202+  1D21 3D 67 7D B7 
0202+  1D25 F2 6B F1 AF 
0202+  1D29 6F 3A 2A FF 
0202+  1D2D 3D E6 3F 32 
0203+  1D31 2A FF E5 0E                      .DB 02Ah, 0FFh, 0E5h, 00Eh, 000h, 0CDh, 0ACh, 0F2h, 0E1h, 018h, 019h, 03Ah, 02Fh, 0FFh, 04Fh, 0BDh, 020h, 012h, 03Ah, 02Ah, 0FFh, 03Ch, 0E6h, 03Fh
0203+  1D35 00 CD AC F2 
0203+  1D39 E1 18 19 3A 
0203+  1D3D 2F FF 4F BD 
0203+  1D41 20 12 3A 2A 
0203+  1D45 FF 3C E6 3F 
0204+  1D49 32 2A FF 79                      .DB 032h, 02Ah, 0FFh, 079h, 0E5h, 00Eh, 000h, 0CDh, 0ACh, 0F2h, 0E1h, 02Dh, 03Ah, 032h, 0FFh, 0E6h, 002h, 028h, 003h, 022h, 02Bh, 0FFh, 0F3h, 0CDh
0204+  1D4D E5 0E 00 CD 
0204+  1D51 AC F2 E1 2D 
0204+  1D55 3A 32 FF E6 
0204+  1D59 02 28 03 22 
0204+  1D5D 2B FF F3 CD 
0205+  1D61 94 F1 FB C9                      .DB 094h, 0F1h, 0FBh, 0C9h, 02Ah, 02Bh, 0FFh, 03Ah, 02Ah, 0FFh, 085h, 0E6h, 03Fh, 0F6h, 040h, 057h, 07Ch, 0CBh, 027h, 05Fh, 021h, 084h, 0FFh, 006h
0205+  1D65 2A 2B FF 3A 
0205+  1D69 2A FF 85 E6 
0205+  1D6D 3F F6 40 57 
0205+  1D71 7C CB 27 5F 
0205+  1D75 21 84 FF 06 
0206+  1D79 18 0E 00 3A                      .DB 018h, 00Eh, 000h, 03Ah, 032h, 0FFh, 0E6h, 004h, 028h, 001h, 005h, 03Ah, 029h, 0FFh, 0D3h, 071h, 01Ah, 0BEh, 028h, 00Ah, 077h, 0C5h, 0E5h, 0D5h
0206+  1D7D 32 FF E6 04 
0206+  1D81 28 01 05 3A 
0206+  1D85 29 FF D3 71 
0206+  1D89 1A BE 28 0A 
0206+  1D8D 77 C5 E5 D5 
0207+  1D91 CD E9 FA D1                      .DB 0CDh, 0E9h, 0FAh, 0D1h, 0E1h, 0C1h, 023h, 013h, 03Ah, 032h, 0FFh, 0E6h, 004h, 01Ah, 028h, 005h, 0CBh, 03Fh, 0CBh, 03Fh, 03Ch, 0BEh, 028h, 012h
0207+  1D95 E1 C1 23 13 
0207+  1D99 3A 32 FF E6 
0207+  1D9D 04 1A 28 05 
0207+  1DA1 CB 3F CB 3F 
0207+  1DA5 3C BE 28 12 
0208+  1DA9 77 C5 E5 D5                      .DB 077h, 0C5h, 0E5h, 0D5h, 079h, 04Eh, 0CBh, 021h, 0CBh, 021h, 0CBh, 021h, 0CDh, 0ABh, 0FAh, 0D1h, 0E1h, 0C1h, 023h, 013h, 00Ch, 010h, 0C9h, 03Ah
0208+  1DAD 79 4E CB 21 
0208+  1DB1 CB 21 CB 21 
0208+  1DB5 CD AB FA D1 
0208+  1DB9 E1 C1 23 13 
0208+  1DBD 0C 10 C9 3A 
0209+  1DC1 32 FF 4F E6                      .DB 032h, 0FFh, 04Fh, 0E6h, 004h, 028h, 053h, 036h, 000h, 023h, 036h, 080h, 079h, 0E6h, 002h, 020h, 04Fh, 021h, 000h, 000h, 0EDh, 04Bh, 02Dh, 0FFh
0209+  1DC5 04 28 53 36 
0209+  1DC9 00 23 36 80 
0209+  1DCD 79 E6 02 20 
0209+  1DD1 4F 21 00 00 
0209+  1DD5 ED 4B 2D FF 
0210+  1DD9 0D ED 5B 2B                      .DB 00Dh, 0EDh, 05Bh, 02Bh, 0FFh, 07Bh, 0A7h, 020h, 005h, 021h, 001h, 000h, 018h, 00Ah, 03Ah, 02Fh, 0FFh, 03Dh, 0BBh, 020h, 003h, 021h, 008h, 000h
0210+  1DDD FF 7B A7 20 
0210+  1DE1 05 21 01 00 
0210+  1DE5 18 0A 3A 2F 
0210+  1DE9 FF 3D BB 20 
0210+  1DED 03 21 08 00 
0211+  1DF1 7B B9 01 00                      .DB 07Bh, 0B9h, 001h, 000h, 000h, 020h, 004h, 00Eh, 0C0h, 018h, 008h, 006h, 028h, 038h, 002h, 018h, 002h, 006h, 005h, 009h, 03Ah, 02Ch, 0FFh, 0A7h
0211+  1DF5 00 20 04 0E 
0211+  1DF9 C0 18 08 06 
0211+  1DFD 28 38 02 18 
0211+  1E01 02 06 05 09 
0211+  1E05 3A 2C FF A7 
0212+  1E09 20 04 3E 30                      .DB 020h, 004h, 03Eh, 030h, 0B5h, 06Fh, 03Eh, 017h, 0CDh, 00Ah, 0FBh, 03Eh, 017h, 00Eh, 080h, 0CDh, 0ABh, 0FAh, 03Ah, 03Ah, 0FFh, 0D3h, 071h, 0C9h
0212+  1E0D B5 6F 3E 17 
0212+  1E11 CD 0A FB 3E 
0212+  1E15 17 0E 80 CD 
0212+  1E19 AB FA 3A 3A 
0212+  1E1D FF D3 71 C9 
0213+  1E21 21 3F 2D 18                      .DB 021h, 03Fh, 02Dh, 018h, 0E9h, 0EDh, 05Bh, 02Dh, 0FFh, 0FEh, 00Dh, 020h, 005h, 016h, 001h, 0C3h, 004h, 0F1h, 0FEh, 00Ah, 020h, 004h, 01Ch, 0C3h
0213+  1E25 E9 ED 5B 2D 
0213+  1E29 FF FE 0D 20 
0213+  1E2D 05 16 01 C3 
0213+  1E31 04 F1 FE 0A 
0213+  1E35 20 04 1C C3 
0214+  1E39 04 F1 FE 08                      .DB 004h, 0F1h, 0FEh, 008h, 020h, 005h, 015h, 0C2h, 004h, 0F1h, 0C9h, 0EDh, 05Bh, 02Dh, 0FFh, 015h, 01Dh, 03Ah, 02Ah, 0FFh, 083h, 0E6h, 03Fh, 0F6h
0214+  1E3D 20 05 15 C2 
0214+  1E41 04 F1 C9 ED 
0214+  1E45 5B 2D FF 15 
0214+  1E49 1D 3A 2A FF 
0214+  1E4D 83 E6 3F F6 
0215+  1E51 40 67 7A CB                      .DB 040h, 067h, 07Ah, 0CBh, 027h, 06Fh, 03Ah, 029h, 0FFh, 0D3h, 071h, 071h, 03Ah, 031h, 0FFh, 023h, 077h, 03Ah, 03Ah, 0FFh, 0D3h, 071h, 0EDh, 05Bh
0215+  1E55 27 6F 3A 29 
0215+  1E59 FF D3 71 71 
0215+  1E5D 3A 31 FF 23 
0215+  1E61 77 3A 3A FF 
0215+  1E65 D3 71 ED 5B 
0216+  1E69 2D FF 3A 30                      .DB 02Dh, 0FFh, 03Ah, 030h, 0FFh, 06Fh, 07Ah, 0BDh, 028h, 004h, 014h, 0C3h, 004h, 0F1h, 016h, 001h, 01Ch, 0C3h, 004h, 0F1h, 067h, 03Ah, 02Ah, 0FFh
0216+  1E6D FF 6F 7A BD 
0216+  1E71 28 04 14 C3 
0216+  1E75 04 F1 16 01 
0216+  1E79 1C C3 04 F1 
0216+  1E7D 67 3A 2A FF 
0217+  1E81 84 E6 3F F6                      .DB 084h, 0E6h, 03Fh, 0F6h, 040h, 067h, 079h, 081h, 06Fh, 03Ah, 031h, 0FFh, 04Fh, 03Ah, 029h, 0FFh, 0D3h, 071h, 03Eh, 020h, 077h, 02Ch, 071h, 02Ch
0217+  1E85 40 67 79 81 
0217+  1E89 6F 3A 31 FF 
0217+  1E8D 4F 3A 29 FF 
0217+  1E91 D3 71 3E 20 
0217+  1E95 77 2C 71 2C 
0218+  1E99 20 FA 3A 3A                      .DB 020h, 0FAh, 03Ah, 03Ah, 0FFh, 0D3h, 071h, 0C9h, 0AFh, 0C9h, 0AFh, 0C9h, 0C9h, 079h, 021h, 000h, 000h, 0FEh, 002h, 0D0h, 006h, 000h, 0CBh, 021h
0218+  1E9D FF D3 71 C9 
0218+  1EA1 AF C9 AF C9 
0218+  1EA5 C9 79 21 00 
0218+  1EA9 00 FE 02 D0 
0218+  1EAD 06 00 CB 21 
0219+  1EB1 CB 21 CB 21                      .DB 0CBh, 021h, 0CBh, 021h, 0CBh, 021h, 021h, 033h, 0EEh, 009h, 032h, 043h, 0FFh, 0C9h, 00Eh, 000h, 079h, 032h, 03Ch, 0FFh, 0C9h, 0EDh, 043h, 03Dh
0219+  1EB5 CB 21 21 33 
0219+  1EB9 EE 09 32 43 
0219+  1EBD FF C9 0E 00 
0219+  1EC1 79 32 3C FF 
0219+  1EC5 C9 ED 43 3D 
0220+  1EC9 FF C9 ED 43                      .DB 0FFh, 0C9h, 0EDh, 043h, 03Fh, 0FFh, 0C9h, 0CDh, 06Bh, 0F3h, 0F3h, 0D3h, 071h, 0CBh, 0F0h, 0C5h, 0E1h, 00Eh, 080h, 0EDh, 05Bh, 03Fh, 0FFh, 07Ah
0220+  1ECD 3F FF C9 CD 
0220+  1ED1 6B F3 F3 D3 
0220+  1ED5 71 CB F0 C5 
0220+  1ED9 E1 0E 80 ED 
0220+  1EDD 5B 3F FF 7A 
0221+  1EE1 07 07 E6 03                      .DB 007h, 007h, 0E6h, 003h, 0F6h, 020h, 047h, 0D3h, 072h, 0CBh, 0FAh, 0CBh, 0B2h, 0EDh, 0A0h, 079h, 0B7h, 028h, 008h, 0CBh, 072h, 028h, 0F6h, 004h
0221+  1EE5 F6 20 47 D3 
0221+  1EE9 72 CB FA CB 
0221+  1EED B2 ED A0 79 
0221+  1EF1 B7 28 08 CB 
0221+  1EF5 72 28 F6 04 
0222+  1EF9 78 18 EC 3A                      .DB 078h, 018h, 0ECh, 03Ah, 03Ah, 0FFh, 0D3h, 071h, 03Ah, 03Bh, 0FFh, 0D3h, 072h, 0FBh, 0AFh, 0C9h, 03Ah, 043h, 0FFh, 0B7h, 020h, 002h, 03Ch, 0C9h
0222+  1EFD 3A FF D3 71 
0222+  1F01 3A 3B FF D3 
0222+  1F05 72 FB AF C9 
0222+  1F09 3A 43 FF B7 
0222+  1F0D 20 02 3C C9 
0223+  1F11 CD 6B F3 F3                      .DB 0CDh, 06Bh, 0F3h, 0F3h, 0D3h, 071h, 0CBh, 0F0h, 0C5h, 0D1h, 00Eh, 080h, 02Ah, 03Fh, 0FFh, 07Ch, 007h, 007h, 0E6h, 003h, 0F6h, 020h, 047h, 0D3h
0223+  1F15 D3 71 CB F0 
0223+  1F19 C5 D1 0E 80 
0223+  1F1D 2A 3F FF 7C 
0223+  1F21 07 07 E6 03 
0223+  1F25 F6 20 47 D3 
0224+  1F29 72 CB FC CB                      .DB 072h, 0CBh, 0FCh, 0CBh, 0B4h, 0EDh, 0A0h, 079h, 0B7h, 028h, 0C8h, 0CBh, 074h, 028h, 0F6h, 004h, 078h, 018h, 0ECh, 021h, 000h, 000h, 0EDh, 04Bh
0224+  1F2D B4 ED A0 79 
0224+  1F31 B7 28 C8 CB 
0224+  1F35 74 28 F6 04 
0224+  1F39 78 18 EC 21 
0224+  1F3D 00 00 ED 4B 
0225+  1F41 3C FF 68 44                      .DB 03Ch, 0FFh, 068h, 044h, 0CBh, 021h, 0CBh, 010h, 009h, 0CBh, 021h, 0CBh, 010h, 0CBh, 021h, 0CBh, 010h, 009h, 0CBh, 021h, 0CBh, 010h, 009h, 07Dh
0225+  1F45 CB 21 CB 10 
0225+  1F49 09 CB 21 CB 
0225+  1F4D 10 CB 21 CB 
0225+  1F51 10 09 CB 21 
0225+  1F55 CB 10 09 7D 
0226+  1F59 E6 7F 47 0E                      .DB 0E6h, 07Fh, 047h, 00Eh, 000h, 0CBh, 038h, 0CBh, 019h, 0CBh, 025h, 0CBh, 014h, 03Ah, 043h, 0FFh, 0B7h, 028h, 005h, 03Ah, 038h, 0FFh, 084h, 0C9h
0226+  1F5D 00 CB 38 CB 
0226+  1F61 19 CB 25 CB 
0226+  1F65 14 3A 43 FF 
0226+  1F69 B7 28 05 3A 
0226+  1F6D 38 FF 84 C9 
0227+  1F71 3A 37 FF 84                      .DB 03Ah, 037h, 0FFh, 084h, 0C9h, 0AFh, 0C9h, 069h, 060h, 0C9h, 0E3h, 07Eh, 023h, 0A7h, 028h, 005h, 0CDh, 0B7h, 0F3h, 018h, 0F6h, 0E3h, 0C9h, 0E5h
0227+  1F75 C9 AF C9 69 
0227+  1F79 60 C9 E3 7E 
0227+  1F7D 23 A7 28 05 
0227+  1F81 CD B7 F3 18 
0227+  1F85 F6 E3 C9 E5 
0228+  1F89 D5 C5 4F CD                      .DB 0D5h, 0C5h, 04Fh, 0CDh, 000h, 0F0h, 0C1h, 0D1h, 0E1h, 0C9h, 0F3h, 03Eh, 020h, 0D3h, 070h, 032h, 039h, 0FFh, 03Ch, 0D3h, 071h, 032h, 03Ah, 0FFh
0228+  1F8D 00 F0 C1 D1 
0228+  1F91 E1 C9 F3 3E 
0228+  1F95 20 D3 70 32 
0228+  1F99 39 FF 3C D3 
0228+  1F9D 71 32 3A FF 
0229+  1FA1 3C D3 72 32                      .DB 03Ch, 0D3h, 072h, 032h, 03Bh, 0FFh, 021h, 000h, 0FEh, 006h, 000h, 036h, 0FDh, 023h, 010h, 0FBh, 0CDh, 0AAh, 0F5h, 03Eh, 0C3h, 032h, 0FDh, 0FDh
0229+  1FA5 3B FF 21 00 
0229+  1FA9 FE 06 00 36 
0229+  1FAD FD 23 10 FB 
0229+  1FB1 CD AA F5 3E 
0229+  1FB5 C3 32 FD FD 
0230+  1FB9 21 97 F4 22                      .DB 021h, 097h, 0F4h, 022h, 0FEh, 0FDh, 03Eh, 002h, 0D3h, 013h, 03Eh, 0B7h, 0D3h, 013h, 000h, 03Eh, 0CFh, 0D3h, 013h, 03Eh, 0FEh, 0EDh, 047h, 0EDh
0230+  1FBD FE FD 3E 02 
0230+  1FC1 D3 13 3E B7 
0230+  1FC5 D3 13 00 3E 
0230+  1FC9 CF D3 13 3E 
0230+  1FCD FE ED 47 ED 
0231+  1FD1 5E CD 5B F4                      .DB 05Eh, 0CDh, 05Bh, 0F4h, 03Eh, 004h, 032h, 037h, 0FFh, 0FBh, 03Eh, 000h, 0CDh, 00Eh, 0F8h, 0CDh, 038h, 0FCh, 006h, 004h, 0C5h, 026h, 06Fh, 02Eh
0231+  1FD5 3E 04 32 37 
0231+  1FD9 FF FB 3E 00 
0231+  1FDD CD 0E F8 CD 
0231+  1FE1 38 FC 06 04 
0231+  1FE5 C5 26 6F 2E 
0232+  1FE9 07 CD 1D F9                      .DB 007h, 0CDh, 01Dh, 0F9h, 030h, 00Bh, 03Eh, 044h, 0CDh, 031h, 0F9h, 030h, 004h, 0AFh, 0CDh, 031h, 0F9h, 0CDh, 0E5h, 0F8h, 0CDh, 037h, 0F4h, 0CDh
0232+  1FED 30 0B 3E 44 
0232+  1FF1 CD 31 F9 30 
0232+  1FF5 04 AF CD 31 
0232+  1FF9 F9 CD E5 F8 
0232+  1FFD CD 37 F4 CD 
0233+  2001 3C F4 C1 C8                      .DB 03Ch, 0F4h, 0C1h, 0C8h, 010h, 0DEh, 0C9h, 006h, 000h, 010h, 0FEh, 0C9h, 026h, 06Fh, 02Eh, 007h, 0CDh, 0FCh, 0F8h, 016h, 002h, 030h, 011h, 05Fh
0233+  2005 10 DE C9 06 
0233+  2009 00 10 FE C9 
0233+  200D 26 6F 2E 07 
0233+  2011 CD FC F8 16 
0233+  2015 02 30 11 5F 
0234+  2019 CD 51 F9 CD                      .DB 0CDh, 051h, 0F9h, 0CDh, 03Eh, 0F9h, 057h, 0CDh, 0E5h, 0F8h, 07Bh, 006h, 004h, 0FEh, 044h, 0C0h, 07Ah, 0A7h, 0C9h, 011h, 029h, 0FFh, 021h, 089h
0234+  201D 3E F9 57 CD 
0234+  2021 E5 F8 7B 06 
0234+  2025 04 FE 44 C0 
0234+  2029 7A A7 C9 11 
0234+  202D 29 FF 21 89 
0235+  2031 F4 01 0E 00                      .DB 0F4h, 001h, 00Eh, 000h, 0EDh, 0B0h, 03Ah, 029h, 0FFh, 0D3h, 071h, 021h, 000h, 040h, 011h, 002h, 040h, 00Eh, 020h, 03Ah, 031h, 0FFh, 047h, 0EDh
0235+  2035 ED B0 3A 29 
0235+  2039 FF D3 71 21 
0235+  203D 00 40 11 02 
0235+  2041 40 0E 20 3A 
0235+  2045 31 FF 47 ED 
0236+  2049 43 00 40 01                      .DB 043h, 000h, 040h, 001h, 0FAh, 03Fh, 0EDh, 0B0h, 0CDh, 06Ah, 0FBh, 03Ah, 03Ah, 0FFh, 0D3h, 071h, 0C9h, 03Fh, 000h, 000h, 000h, 001h, 001h, 018h
0236+  204D FA 3F ED B0 
0236+  2051 CD 6A FB 3A 
0236+  2055 3A FF D3 71 
0236+  2059 C9 3F 00 00 
0236+  205D 00 01 01 18 
0237+  2061 40 0F 02 00                      .DB 040h, 00Fh, 002h, 000h, 000h, 000h, 000h, 0F3h, 0EDh, 073h, 0D4h, 0FFh, 031h, 0D4h, 0FFh, 0F5h, 0D9h, 0CDh, 0C0h, 0F5h, 03Ah, 013h, 0FFh, 0A7h
0237+  2065 00 00 00 F3 
0237+  2069 ED 73 D4 FF 
0237+  206D 31 D4 FF F5 
0237+  2071 D9 CD C0 F5 
0237+  2075 3A 13 FF A7 
0238+  2079 C4 F0 F4 3A                      .DB 0C4h, 0F0h, 0F4h, 03Ah, 033h, 0FFh, 03Dh, 0FAh, 0C2h, 0F4h, 032h, 033h, 0FFh, 020h, 00Bh, 03Ah, 032h, 0FFh, 0E6h, 0FBh, 032h, 032h, 0FFh, 0CDh
0238+  207D 33 FF 3D FA 
0238+  2081 C2 F4 32 33 
0238+  2085 FF 20 0B 3A 
0238+  2089 32 FF E6 FB 
0238+  208D 32 32 FF CD 
0239+  2091 94 F1 2A 04                      .DB 094h, 0F1h, 02Ah, 004h, 0FFh, 05Dh, 023h, 022h, 004h, 0FFh, 07Ch, 0B5h, 020h, 007h, 02Ah, 006h, 0FFh, 023h, 022h, 006h, 0FFh, 03Ah, 032h, 0FFh
0239+  2095 FF 5D 23 22 
0239+  2099 04 FF 7C B5 
0239+  209D 20 07 2A 06 
0239+  20A1 FF 23 22 06 
0239+  20A5 FF 3A 32 FF 
0240+  20A9 E6 01 28 0B                      .DB 0E6h, 001h, 028h, 00Bh, 03Ah, 004h, 0FFh, 0ABh, 0E6h, 020h, 028h, 003h, 0CDh, 080h, 0F5h, 0D9h, 0F1h, 0EDh, 07Bh, 0D4h, 0FFh, 0FBh, 0EDh, 04Dh
0240+  20AD 3A 04 FF AB 
0240+  20B1 E6 20 28 03 
0240+  20B5 CD 80 F5 D9 
0240+  20B9 F1 ED 7B D4 
0240+  20BD FF FB ED 4D 
0241+  20C1 FE 90 20 25                      .DB 0FEh, 090h, 020h, 025h, 03Ah, 02Bh, 0FFh, 03Dh, 0FAh, 07Bh, 0F5h, 0F5h, 01Eh, 000h, 0CDh, 080h, 0F5h, 0F1h, 032h, 02Bh, 0FFh, 03Ah, 032h, 0FFh
0241+  20C5 3A 2B FF 3D 
0241+  20C9 FA 7B F5 F5 
0241+  20CD 1E 00 CD 80 
0241+  20D1 F5 F1 32 2B 
0241+  20D5 FF 3A 32 FF 
0242+  20D9 E6 FD F6 04                      .DB 0E6h, 0FDh, 0F6h, 004h, 032h, 032h, 0FFh, 03Eh, 03Ch, 032h, 033h, 0FFh, 0CDh, 094h, 0F1h, 018h, 062h, 0FEh, 091h, 020h, 00Dh, 03Ah, 02Fh, 0FFh
0242+  20DD 32 32 FF 3E 
0242+  20E1 3C 32 33 FF 
0242+  20E5 CD 94 F1 18 
0242+  20E9 62 FE 91 20 
0242+  20ED 0D 3A 2F FF 
0243+  20F1 4F 3A 2B FF                      .DB 04Fh, 03Ah, 02Bh, 0FFh, 03Ch, 0B9h, 028h, 053h, 018h, 0D1h, 0FEh, 093h, 020h, 00Fh, 03Ah, 030h, 0FFh, 0D6h, 017h, 04Fh, 03Ah, 02Ch, 0FFh, 03Ch
0243+  20F5 3C B9 28 53 
0243+  20F9 18 D1 FE 93 
0243+  20FD 20 0F 3A 30 
0243+  2101 FF D6 17 4F 
0243+  2105 3A 2C FF 3C 
0244+  2109 B9 28 40 18                      .DB 0B9h, 028h, 040h, 018h, 00Bh, 0FEh, 092h, 020h, 013h, 03Ah, 02Ch, 0FFh, 03Dh, 0FAh, 07Bh, 0F5h, 0F5h, 01Eh, 000h, 0CDh, 080h, 0F5h, 0F1h, 032h
0244+  210D 0B FE 92 20 
0244+  2111 13 3A 2C FF 
0244+  2115 3D FA 7B F5 
0244+  2119 F5 1E 00 CD 
0244+  211D 80 F5 F1 32 
0245+  2121 2C FF 18 B1                      .DB 02Ch, 0FFh, 018h, 0B1h, 0FEh, 094h, 020h, 019h, 03Ah, 02Dh, 0FFh, 03Dh, 032h, 02Bh, 0FFh, 03Ah, 02Eh, 0FFh, 0D6h, 016h, 030h, 001h, 0AFh, 032h
0245+  2125 FE 94 20 19 
0245+  2129 3A 2D FF 3D 
0245+  212D 32 2B FF 3A 
0245+  2131 2E FF D6 16 
0245+  2135 30 01 AF 32 
0246+  2139 2C FF 3A 32                      .DB 02Ch, 0FFh, 03Ah, 032h, 0FFh, 0F6h, 002h, 018h, 099h, 0FEh, 095h, 020h, 006h, 0AFh, 032h, 02Ch, 0FFh, 018h, 0A2h, 0AFh, 032h, 013h, 0FFh, 0C9h
0246+  213D FF F6 02 18 
0246+  2141 99 FE 95 20 
0246+  2145 06 AF 32 2C 
0246+  2149 FF 18 A2 AF 
0246+  214D 32 13 FF C9 
0247+  2151 3A 2B FF 47                      .DB 03Ah, 02Bh, 0FFh, 047h, 03Ah, 02Dh, 0FFh, 03Dh, 0B8h, 0C0h, 03Ah, 02Ch, 0FFh, 047h, 03Ah, 02Eh, 0FFh, 03Dh, 090h, 0F8h, 0FEh, 018h, 0D0h, 04Fh
0247+  2155 3A 2D FF 3D 
0247+  2159 B8 C0 3A 2C 
0247+  215D FF 47 3A 2E 
0247+  2161 FF 3D 90 F8 
0247+  2165 FE 18 D0 4F 
0248+  2169 06 00 21 84                      .DB 006h, 000h, 021h, 084h, 0FFh, 009h, 009h, 07Bh, 0E6h, 020h, 07Eh, 028h, 002h, 03Eh, 05Fh, 0C3h, 0E9h, 0FAh, 021h, 008h, 0FFh, 006h, 020h, 0AFh
0248+  216D FF 09 09 7B 
0248+  2171 E6 20 7E 28 
0248+  2175 02 3E 5F C3 
0248+  2179 E9 FA 21 08 
0248+  217D FF 06 20 AF 
0249+  2181 77 23 05 20                      .DB 077h, 023h, 005h, 020h, 0FBh, 0AFh, 032h, 028h, 0FFh, 032h, 027h, 0FFh, 032h, 026h, 0FFh, 0C9h, 001h, 000h, 0FDh, 03Ah, 012h, 0FFh, 0E6h, 0FCh
0249+  2185 FB AF 32 28 
0249+  2189 FF 32 27 FF 
0249+  218D 32 26 FF C9 
0249+  2191 01 00 FD 3A 
0249+  2195 12 FF E6 FC 
0250+  2199 57 ED 78 E6                      .DB 057h, 0EDh, 078h, 0E6h, 020h, 020h, 004h, 03Eh, 001h, 0B2h, 057h, 001h, 000h, 0FEh, 0EDh, 078h, 0E6h, 010h, 020h, 004h, 03Eh, 002h, 0B2h, 057h
0250+  219D 20 20 04 3E 
0250+  21A1 01 B2 57 01 
0250+  21A5 00 FE ED 78 
0250+  21A9 E6 10 20 04 
0250+  21AD 3E 02 B2 57 
0251+  21B1 7A 32 12 FF                      .DB 07Ah, 032h, 012h, 0FFh, 021h, 04Eh, 0F7h, 0EDh, 078h, 016h, 001h, 05Fh, 022h, 010h, 0FFh, 0A2h, 020h, 03Fh, 0C5h, 07Eh, 021h, 008h, 0FFh, 006h
0251+  21B5 21 4E F7 ED 
0251+  21B9 78 16 01 5F 
0251+  21BD 22 10 FF A2 
0251+  21C1 20 3F C5 7E 
0251+  21C5 21 08 FF 06 
0252+  21C9 08 BE CA 4A                      .DB 008h, 0BEh, 0CAh, 04Ah, 0F6h, 023h, 005h, 020h, 0F8h, 021h, 008h, 0FFh, 006h, 008h, 04Fh, 0AFh, 0BEh, 028h, 007h, 023h, 005h, 020h, 0F9h, 0C3h
0252+  21CD F6 23 05 20 
0252+  21D1 F8 21 08 FF 
0252+  21D5 06 08 4F AF 
0252+  21D9 BE 28 07 23 
0252+  21DD 05 20 F9 C3 
0253+  21E1 4A F6 71 2A                      .DB 04Ah, 0F6h, 071h, 02Ah, 010h, 0FFh, 001h, 030h, 000h, 03Ah, 012h, 0FFh, 0A7h, 028h, 004h, 009h, 03Dh, 020h, 0FCh, 07Eh, 032h, 014h, 0FFh, 0CDh
0253+  21E5 10 FF 01 30 
0253+  21E9 00 3A 12 FF 
0253+  21ED A7 28 04 09 
0253+  21F1 3D 20 FC 7E 
0253+  21F5 32 14 FF CD 
0254+  21F9 7A F6 AF 32                      .DB 07Ah, 0F6h, 0AFh, 032h, 015h, 0FFh, 0C1h, 018h, 01Ah, 0C5h, 07Eh, 0A7h, 028h, 014h, 021h, 008h, 0FFh, 006h, 008h, 0BEh, 028h, 006h, 023h, 005h
0254+  21FD 15 FF C1 18 
0254+  2201 1A C5 7E A7 
0254+  2205 28 14 21 08 
0254+  2209 FF 06 08 BE 
0254+  220D 28 06 23 05 
0255+  2211 20 F9 18 06                      .DB 020h, 0F9h, 018h, 006h, 04Fh, 0AFh, 077h, 032h, 014h, 0FFh, 0C1h, 02Ah, 010h, 0FFh, 07Bh, 023h, 0CBh, 022h, 0CBh, 072h, 0CAh, 0ECh, 0F5h, 0CBh
0255+  2215 4F AF 77 32 
0255+  2219 14 FF C1 2A 
0255+  221D 10 FF 7B 23 
0255+  2221 CB 22 CB 72 
0255+  2225 CA EC F5 CB 
0256+  2229 00 3E FE B8                      .DB 000h, 03Eh, 0FEh, 0B8h, 0C2h, 0E7h, 0F5h, 03Ah, 014h, 0FFh, 0A7h, 0C8h, 03Ah, 015h, 0FFh, 03Ch, 032h, 015h, 0FFh, 0FEh, 028h, 028h, 008h, 0FEh
0256+  222D C2 E7 F5 3A 
0256+  2231 14 FF A7 C8 
0256+  2235 3A 15 FF 3C 
0256+  2239 32 15 FF FE 
0256+  223D 28 28 08 FE 
0257+  2241 2F C0 3E 28                      .DB 02Fh, 0C0h, 03Eh, 028h, 032h, 015h, 0FFh, 03Ah, 014h, 0FFh, 04Fh, 0E6h, 0F8h, 0FEh, 090h, 020h, 005h, 079h, 032h, 013h, 0FFh, 0C9h, 079h, 0A7h
0257+  2245 32 15 FF 3A 
0257+  2249 14 FF 4F E6 
0257+  224D F8 FE 90 20 
0257+  2251 05 79 32 13 
0257+  2255 FF C9 79 A7 
0258+  2259 C8 6F 3A 28                      .DB 0C8h, 06Fh, 03Ah, 028h, 0FFh, 0FEh, 010h, 0C8h, 03Ch, 032h, 028h, 0FFh, 006h, 000h, 03Ah, 027h, 0FFh, 04Fh, 07Dh, 021h, 016h, 0FFh, 009h, 077h
0258+  225D FF FE 10 C8 
0258+  2261 3C 32 28 FF 
0258+  2265 06 00 3A 27 
0258+  2269 FF 4F 7D 21 
0258+  226D 16 FF 09 77 
0259+  2271 0C 3E 0F A1                      .DB 00Ch, 03Eh, 00Fh, 0A1h, 032h, 027h, 0FFh, 0C9h, 03Ah, 028h, 0FFh, 0A7h, 0C8h, 0F3h, 03Ah, 028h, 0FFh, 03Dh, 032h, 028h, 0FFh, 03Ah, 026h, 0FFh
0259+  2275 32 27 FF C9 
0259+  2279 3A 28 FF A7 
0259+  227D C8 F3 3A 28 
0259+  2281 FF 3D 32 28 
0259+  2285 FF 3A 26 FF 
0260+  2289 4F 3C E6 0F                      .DB 04Fh, 03Ch, 0E6h, 00Fh, 032h, 026h, 0FFh, 006h, 000h, 021h, 016h, 0FFh, 009h, 07Eh, 0B7h, 0FBh, 0C9h, 03Eh, 007h, 092h, 016h, 000h, 021h, 010h
0260+  228D 32 26 FF 06 
0260+  2291 00 21 16 FF 
0260+  2295 09 7E B7 FB 
0260+  2299 C9 3E 07 92 
0260+  229D 16 00 21 10 
0261+  22A1 F7 19 19 5E                      .DB 0F7h, 019h, 019h, 05Eh, 023h, 056h, 0A7h, 028h, 007h, 0CBh, 03Ah, 0CBh, 01Bh, 03Dh, 018h, 0F6h, 041h, 04Fh, 0CBh, 020h, 0CBh, 020h, 0CBh, 020h
0261+  22A5 23 56 A7 28 
0261+  22A9 07 CB 3A CB 
0261+  22AD 1B 3D 18 F6 
0261+  22B1 41 4F CB 20 
0261+  22B5 CB 20 CB 20 
0262+  22B9 CB 20 DB 24                      .DB 0CBh, 020h, 0DBh, 024h, 032h, 0FDh, 0F6h, 0F3h, 019h, 01Fh, 0CBh, 02Fh, 0CBh, 02Fh, 0CBh, 02Fh, 0CBh, 02Fh, 0E6h, 008h, 0EEh, 000h, 032h, 0FDh
0262+  22BD 32 FD F6 F3 
0262+  22C1 19 1F CB 2F 
0262+  22C5 CB 2F CB 2F 
0262+  22C9 CB 2F E6 08 
0262+  22CD EE 00 32 FD 
0263+  22D1 F6 D3 24 78                      .DB 0F6h, 0D3h, 024h, 078h, 006h, 005h, 010h, 0FEh, 047h, 00Bh, 078h, 0B1h, 020h, 0E2h, 0FBh, 0C9h, 0EBh, 018h, 065h, 01Ah, 0F6h, 01Bh, 0A1h, 01Dh
0263+  22D5 06 05 10 FE 
0263+  22D9 47 0B 78 B1 
0263+  22DD 20 E2 FB C9 
0263+  22E1 EB 18 65 1A 
0263+  22E5 F6 1B A1 1D 
0264+  22E9 63 1F 40 21                      .DB 063h, 01Fh, 040h, 021h, 03Fh, 023h, 051h, 025h, 08Ch, 027h, 0EAh, 029h, 060h, 02Ch, 00Dh, 02Fh, 000h, 000h, 0CDh, 0A8h, 0F6h, 006h, 000h, 010h
0264+  22ED 3F 23 51 25 
0264+  22F1 8C 27 EA 29 
0264+  22F5 60 2C 0D 2F 
0264+  22F9 00 00 CD A8 
0264+  22FD F6 06 00 10 
0265+  2301 FE 28 F7 C9                      .DB 0FEh, 028h, 0F7h, 0C9h, 0CDh, 0A8h, 0F6h, 006h, 000h, 010h, 0FEh, 028h, 0F7h, 0CDh, 0A8h, 0F6h, 020h, 0FBh, 001h, 000h, 000h, 0EDh, 078h, 0E6h
0265+  2305 CD A8 F6 06 
0265+  2309 00 10 FE 28 
0265+  230D F7 CD A8 F6 
0265+  2311 20 FB 01 00 
0265+  2315 00 ED 78 E6 
0266+  2319 3F FE 3F 20                      .DB 03Fh, 0FEh, 03Fh, 020h, 0F0h, 0C9h, 076h, 063h, 078h, 07Ah, 000h, 000h, 067h, 066h, 064h, 073h, 061h, 000h, 074h, 072h, 065h, 077h, 071h, 081h
0266+  231D F0 C9 76 63 
0266+  2321 78 7A 00 00 
0266+  2325 67 66 64 73 
0266+  2329 61 00 74 72 
0266+  232D 65 77 71 81 
0267+  2331 35 34 33 32                      .DB 035h, 034h, 033h, 032h, 031h, 080h, 036h, 037h, 038h, 039h, 030h, 008h, 079h, 075h, 069h, 06Fh, 070h, 03Ah, 068h, 06Ah, 06Bh, 06Ch, 02Eh, 00Dh
0267+  2335 31 80 36 37 
0267+  2339 38 39 30 08 
0267+  233D 79 75 69 6F 
0267+  2341 70 3A 68 6A 
0267+  2345 6B 6C 2E 0D 
0268+  2349 62 6E 6D 20                      .DB 062h, 06Eh, 06Dh, 020h, 082h, 083h, 056h, 043h, 058h, 05Ah, 000h, 000h, 047h, 046h, 044h, 053h, 041h, 000h, 054h, 052h, 045h, 057h, 051h, 000h
0268+  234D 82 83 56 43 
0268+  2351 58 5A 00 00 
0268+  2355 47 46 44 53 
0268+  2359 41 00 54 52 
0268+  235D 45 57 51 00 
0269+  2361 25 24 23 22                      .DB 025h, 024h, 023h, 022h, 021h, 000h, 05Eh, 026h, 02Ah, 028h, 029h, 000h, 059h, 055h, 049h, 04Fh, 050h, 03Bh, 048h, 04Ah, 04Bh, 04Ch, 02Ch, 000h
0269+  2365 21 00 5E 26 
0269+  2369 2A 28 29 00 
0269+  236D 59 55 49 4F 
0269+  2371 50 3B 48 4A 
0269+  2375 4B 4C 2C 00 
0270+  2379 42 4E 4D 00                      .DB 042h, 04Eh, 04Dh, 000h, 000h, 000h, 000h, 003h, 018h, 01Ah, 000h, 000h, 000h, 000h, 000h, 013h, 000h, 000h, 000h, 012h, 005h, 000h, 000h, 091h
0270+  237D 00 00 00 03 
0270+  2381 18 1A 00 00 
0270+  2385 00 00 00 13 
0270+  2389 00 00 00 12 
0270+  238D 05 00 00 91 
0271+  2391 00 00 00 27                      .DB 000h, 000h, 000h, 027h, 07Ch, 090h, 07Bh, 07Dh, 060h, 05Bh, 05Dh, 07Fh, 000h, 015h, 02Bh, 03Dh, 02Dh, 000h, 000h, 03Ch, 040h, 03Eh, 05Fh, 094h
0271+  2395 7C 90 7B 7D 
0271+  2399 60 5B 5D 7F 
0271+  239D 00 15 2B 3D 
0271+  23A1 2D 00 00 3C 
0271+  23A5 40 3E 5F 94 
0272+  23A9 5C 3F 2F 95                      .DB 05Ch, 03Fh, 02Fh, 095h, 092h, 093h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0272+  23AD 92 93 00 00 
0272+  23B1 00 00 00 00 
0272+  23B5 00 00 00 00 
0272+  23B9 00 00 00 00 
0272+  23BD 00 00 00 00 
0273+  23C1 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 010h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0273+  23C5 00 00 00 00 
0273+  23C9 00 00 00 00 
0273+  23CD 00 00 00 00 
0273+  23D1 10 00 00 00 
0273+  23D5 00 00 00 00 
0274+  23D9 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 001h, 006h, 000h, 0DBh, 026h, 0E6h, 010h, 028h, 002h, 006h, 022h, 03Eh, 080h, 0D3h, 023h, 000h, 000h, 079h
0274+  23DD 00 00 01 06 
0274+  23E1 00 DB 26 E6 
0274+  23E5 10 28 02 06 
0274+  23E9 22 3E 80 D3 
0274+  23ED 23 00 00 79 
0275+  23F1 D3 20 00 00                      .DB 0D3h, 020h, 000h, 000h, 0AFh, 0D3h, 021h, 000h, 000h, 03Eh, 003h, 0D3h, 023h, 03Eh, 007h, 0D3h, 022h, 078h, 0A7h, 028h, 002h, 0D3h, 024h, 000h
0275+  23F5 AF D3 21 00 
0275+  23F9 00 3E 03 D3 
0275+  23FD 23 3E 07 D3 
0275+  2401 22 78 A7 28 
0275+  2405 02 D3 24 00 
0276+  2409 00 C9 C5 F5                      .DB 000h, 0C9h, 0C5h, 0F5h, 001h, 050h, 0C3h, 0DBh, 025h, 0CBh, 06Fh, 0C2h, 051h, 0F8h, 00Bh, 078h, 0B1h, 0C2h, 03Fh, 0F8h, 0F1h, 0C1h, 037h, 03Fh
0276+  240D 01 50 C3 DB 
0276+  2411 25 CB 6F C2 
0276+  2415 51 F8 0B 78 
0276+  2419 B1 C2 3F F8 
0276+  241D F1 C1 37 3F 
0277+  2421 C9 F1 C1 D3                      .DB 0C9h, 0F1h, 0C1h, 0D3h, 020h, 037h, 0C9h, 0F5h, 0DBh, 025h, 0CBh, 047h, 0CAh, 062h, 0F8h, 0F1h, 037h, 0C9h, 0F1h, 037h, 03Fh, 0C9h, 0DBh, 025h
0277+  2425 20 37 C9 F5 
0277+  2429 DB 25 CB 47 
0277+  242D CA 62 F8 F1 
0277+  2431 37 C9 F1 37 
0277+  2435 3F C9 DB 25 
0278+  2439 CB 47 CA 71                      .DB 0CBh, 047h, 0CAh, 071h, 0F8h, 0DBh, 020h, 037h, 0C9h, 037h, 03Fh, 0C9h, 0F5h, 0CBh, 02Fh, 0CBh, 02Fh, 0CBh, 02Fh, 0CBh, 02Fh, 0CDh, 08Ah, 0F8h
0278+  243D F8 DB 20 37 
0278+  2441 C9 37 3F C9 
0278+  2445 F5 CB 2F CB 
0278+  2449 2F CB 2F CB 
0278+  244D 2F CD 8A F8 
0279+  2451 CD 3A F8 F1                      .DB 0CDh, 03Ah, 0F8h, 0F1h, 0CDh, 08Ah, 0F8h, 0C3h, 03Ah, 0F8h, 0E6h, 00Fh, 0C6h, 090h, 027h, 0CEh, 040h, 027h, 0C9h, 0E3h, 0CDh, 0A2h, 0F8h, 0DAh
0279+  2455 CD 8A F8 C3 
0279+  2459 3A F8 E6 0F 
0279+  245D C6 90 27 CE 
0279+  2461 40 27 C9 E3 
0279+  2465 CD A2 F8 DA 
0280+  2469 A0 F8 7E 23                      .DB 0A0h, 0F8h, 07Eh, 023h, 0A7h, 0C2h, 09Ah, 0F8h, 0E3h, 0C9h, 07Eh, 023h, 0A7h, 0CAh, 0AFh, 0F8h, 0CDh, 03Ah, 0F8h, 0DAh, 0A2h, 0F8h, 0C9h, 037h
0280+  246D A7 C2 9A F8 
0280+  2471 E3 C9 7E 23 
0280+  2475 A7 CA AF F8 
0280+  2479 CD 3A F8 DA 
0280+  247D A2 F8 C9 37 
0281+  2481 C9 3E CF 32                      .DB 0C9h, 03Eh, 0CFh, 032h, 000h, 0FFh, 0D3h, 013h, 03Eh, 0FFh, 032h, 001h, 0FFh, 0D3h, 013h, 03Eh, 03Fh, 032h, 002h, 0FFh, 0D3h, 011h, 0C9h, 006h
0281+  2485 00 FF D3 13 
0281+  2489 3E FF 32 01 
0281+  248D FF D3 13 3E 
0281+  2491 3F 32 02 FF 
0281+  2495 D3 11 C9 06 
0282+  2499 0A CD DC F9                      .DB 00Ah, 0CDh, 0DCh, 0F9h, 010h, 0FBh, 0CDh, 0CCh, 0F9h, 006h, 0F0h, 010h, 0FEh, 0C9h, 0CDh, 0ACh, 0F9h, 0CDh, 0CCh, 0F9h, 0CDh, 0BCh, 0F9h, 0C3h
0282+  249D 10 FB CD CC 
0282+  24A1 F9 06 F0 10 
0282+  24A5 FE C9 CD AC 
0282+  24A9 F9 CD CC F9 
0282+  24AD CD BC F9 C3 
0283+  24B1 9C F9 CD FC                      .DB 09Ch, 0F9h, 0CDh, 0FCh, 0F8h, 0CDh, 0BCh, 0F9h, 0CDh, 0CCh, 0F9h, 0C3h, 0ACh, 0F9h, 0C5h, 0CDh, 01Dh, 0F9h, 0C1h, 0D2h, 0E5h, 0F8h, 079h, 0CDh
0283+  24B5 F8 CD BC F9 
0283+  24B9 CD CC F9 C3 
0283+  24BD AC F9 C5 CD 
0283+  24C1 1D F9 C1 D2 
0283+  24C5 E5 F8 79 CD 
0284+  24C9 31 F9 18 E9                      .DB 031h, 0F9h, 018h, 0E9h, 0CDh, 0D6h, 0F8h, 07Ch, 0CDh, 02Fh, 0F9h, 030h, 017h, 07Dh, 0CDh, 031h, 0F9h, 030h, 011h, 006h, 032h, 010h, 0FEh, 0CDh
0284+  24CD CD D6 F8 7C 
0284+  24D1 CD 2F F9 30 
0284+  24D5 17 7D CD 31 
0284+  24D9 F9 30 11 06 
0284+  24DD 32 10 FE CD 
0285+  24E1 D6 F8 7C CD                      .DB 0D6h, 0F8h, 07Ch, 0CDh, 029h, 0F9h, 030h, 004h, 0CDh, 03Eh, 0F9h, 037h, 0C9h, 0CDh, 0D6h, 0F8h, 07Ch, 0CDh, 02Fh, 0F9h, 0D0h, 07Dh, 0C3h, 031h
0285+  24E5 29 F9 30 04 
0285+  24E9 CD 3E F9 37 
0285+  24ED C9 CD D6 F8 
0285+  24F1 7C CD 2F F9 
0285+  24F5 D0 7D C3 31 
0286+  24F9 F9 CB 27 F6                      .DB 0F9h, 0CBh, 027h, 0F6h, 001h, 018h, 002h, 0CBh, 027h, 0CDh, 059h, 0F9h, 0CBh, 07Ah, 037h, 0C8h, 0CDh, 0E5h, 0F8h, 037h, 03Fh, 0C9h, 006h, 008h
0286+  24FD 01 18 02 CB 
0286+  2501 27 CD 59 F9 
0286+  2505 CB 7A 37 C8 
0286+  2509 CD E5 F8 37 
0286+  250D 3F C9 06 08 
0287+  2511 DB 11 37 CB                      .DB 0DBh, 011h, 037h, 0CBh, 07Fh, 020h, 001h, 03Fh, 0CBh, 011h, 0CDh, 0DCh, 0F9h, 010h, 0F1h, 079h, 0C9h, 0CDh, 0BCh, 0F9h, 0CDh, 0DCh, 0F9h, 018h
0287+  2515 7F 20 01 3F 
0287+  2519 CB 11 CD DC 
0287+  251D F9 10 F1 79 
0287+  2521 C9 CD BC F9 
0287+  2525 CD DC F9 18 
0288+  2529 53 E5 D5 2A                      .DB 053h, 0E5h, 0D5h, 02Ah, 000h, 0FFh, 057h, 03Eh, 03Fh, 0A4h, 0CBh, 027h, 067h, 00Eh, 013h, 006h, 008h, 01Eh, 040h, 07Ch, 0CBh, 022h, 0CBh, 01Fh
0288+  252D 00 FF 57 3E 
0288+  2531 3F A4 CB 27 
0288+  2535 67 0E 13 06 
0288+  2539 08 1E 40 7C 
0288+  253D CB 22 CB 1F 
0289+  2541 ED 69 D3 13                      .DB 0EDh, 069h, 0D3h, 013h, 0B3h, 0EDh, 069h, 0D3h, 013h, 0ABh, 0EDh, 069h, 0D3h, 013h, 010h, 0EBh, 07Ch, 037h, 0CBh, 01Fh, 0EDh, 069h, 0D3h, 013h
0289+  2545 B3 ED 69 D3 
0289+  2549 13 AB ED 69 
0289+  254D D3 13 10 EB 
0289+  2551 7C 37 CB 1F 
0289+  2555 ED 69 D3 13 
0290+  2559 B3 ED 69 D3                      .DB 0B3h, 0EDh, 069h, 0D3h, 013h, 0EDh, 069h, 0ABh, 06Fh, 032h, 001h, 0FFh, 0DBh, 011h, 0EDh, 069h, 0D1h, 0E1h, 057h, 0C9h, 03Ah, 000h, 0FFh, 0D3h
0290+  255D 13 ED 69 AB 
0290+  2561 6F 32 01 FF 
0290+  2565 DB 11 ED 69 
0290+  2569 D1 E1 57 C9 
0290+  256D 3A 00 FF D3 
0291+  2571 13 3A 01 FF                      .DB 013h, 03Ah, 001h, 0FFh, 0CBh, 0B7h, 0D3h, 013h, 032h, 001h, 0FFh, 0C9h, 03Ah, 000h, 0FFh, 0D3h, 013h, 03Ah, 001h, 0FFh, 0CBh, 0FFh, 0D3h, 013h
0291+  2575 CB B7 D3 13 
0291+  2579 32 01 FF C9 
0291+  257D 3A 00 FF D3 
0291+  2581 13 3A 01 FF 
0291+  2585 CB FF D3 13 
0292+  2589 32 01 FF C9                      .DB 032h, 001h, 0FFh, 0C9h, 03Ah, 000h, 0FFh, 0D3h, 013h, 03Ah, 001h, 0FFh, 0CBh, 0BFh, 0D3h, 013h, 032h, 001h, 0FFh, 0C9h, 03Ah, 000h, 0FFh, 0D3h
0292+  258D 3A 00 FF D3 
0292+  2591 13 3A 01 FF 
0292+  2595 CB BF D3 13 
0292+  2599 32 01 FF C9 
0292+  259D 3A 00 FF D3 
0293+  25A1 13 3A 01 FF                      .DB 013h, 03Ah, 001h, 0FFh, 0CBh, 0F7h, 0D3h, 013h, 032h, 001h, 0FFh, 0C9h, 0C5h, 001h, 013h, 000h, 03Ah, 000h, 0FFh, 057h, 03Ah, 001h, 0FFh, 0CBh
0293+  25A5 CB F7 D3 13 
0293+  25A9 32 01 FF C9 
0293+  25AD C5 01 13 00 
0293+  25B1 3A 00 FF 57 
0293+  25B5 3A 01 FF CB 
0294+  25B9 B7 32 01 FF                      .DB 0B7h, 032h, 001h, 0FFh, 0EDh, 051h, 0D3h, 013h, 0CBh, 0F7h, 0EDh, 051h, 0D3h, 013h, 0DBh, 011h, 0EDh, 051h, 057h, 03Ah, 001h, 0FFh, 0D3h, 013h
0294+  25BD ED 51 D3 13 
0294+  25C1 CB F7 ED 51 
0294+  25C5 D3 13 DB 11 
0294+  25C9 ED 51 57 3A 
0294+  25CD 01 FF D3 13 
0295+  25D1 C1 C9 CD 6A                      .DB 0C1h, 0C9h, 0CDh, 06Ah, 0FBh, 01Eh, 080h, 0CDh, 042h, 0FAh, 0CDh, 016h, 0FAh, 0CDh, 022h, 0FAh, 0CDh, 01Ch, 0FAh, 0CDh, 022h, 0FAh, 03Eh, 050h
0295+  25D5 FB 1E 80 CD 
0295+  25D9 42 FA CD 16 
0295+  25DD FA CD 22 FA 
0295+  25E1 CD 1C FA CD 
0295+  25E5 22 FA 3E 50 
0296+  25E9 32 03 FF C9                      .DB 032h, 003h, 0FFh, 0C9h, 03Eh, 053h, 032h, 003h, 0FFh, 0C9h, 02Eh, 003h, 0CDh, 07Dh, 0FAh, 0CDh, 0D6h, 0F8h, 03Ah, 003h, 0FFh, 0CDh, 02Fh, 0F9h
0296+  25ED 3E 53 32 03 
0296+  25F1 FF C9 2E 03 
0296+  25F5 CD 7D FA CD 
0296+  25F9 D6 F8 3A 03 
0296+  25FD FF CD 2F F9 
0297+  2601 3E 00 CD 31                      .DB 03Eh, 000h, 0CDh, 031h, 0F9h, 03Eh, 001h, 0CDh, 031h, 0F9h, 03Eh, 078h, 0CDh, 031h, 0F9h, 0C3h, 0E5h, 0F8h, 0CDh, 016h, 0FAh, 0CDh, 04Bh, 0FAh
0297+  2605 F9 3E 01 CD 
0297+  2609 31 F9 3E 78 
0297+  260D CD 31 F9 C3 
0297+  2611 E5 F8 CD 16 
0297+  2615 FA CD 4B FA 
0298+  2619 CD 1C FA 2E                      .DB 0CDh, 01Ch, 0FAh, 02Eh, 001h, 0CDh, 07Dh, 0FAh, 02Eh, 00Ch, 0CDh, 0D6h, 0F8h, 03Ah, 003h, 0FFh, 0CDh, 02Fh, 0F9h, 07Dh, 03Dh, 0CBh, 027h, 0CBh
0298+  261D 01 CD 7D FA 
0298+  2621 2E 0C CD D6 
0298+  2625 F8 3A 03 FF 
0298+  2629 CD 2F F9 7D 
0298+  262D 3D CB 27 CB 
0299+  2631 27 CB 27 CB                      .DB 027h, 0CBh, 027h, 0CBh, 027h, 0CDh, 031h, 0F9h, 026h, 010h, 07Bh, 0CDh, 031h, 0F9h, 025h, 020h, 0F9h, 0CDh, 0E5h, 0F8h, 02Dh, 020h, 0DBh, 02Eh
0299+  2635 27 CD 31 F9 
0299+  2639 26 10 7B CD 
0299+  263D 31 F9 25 20 
0299+  2641 F9 CD E5 F8 
0299+  2645 2D 20 DB 2E 
0300+  2649 00 CD 7D FA                      .DB 000h, 0CDh, 07Dh, 0FAh, 0C9h, 0CDh, 095h, 0FAh, 0CDh, 0D6h, 0F8h, 03Ah, 003h, 0FFh, 0CDh, 02Fh, 0F9h, 03Eh, 0FDh, 0CDh, 031h, 0F9h, 07Dh, 0CDh
0300+  264D C9 CD 95 FA 
0300+  2651 CD D6 F8 3A 
0300+  2655 03 FF CD 2F 
0300+  2659 F9 3E FD CD 
0300+  265D 31 F9 7D CD 
0301+  2661 31 F9 C3 E5                      .DB 031h, 0F9h, 0C3h, 0E5h, 0F8h, 0CDh, 0D6h, 0F8h, 03Ah, 003h, 0FFh, 0CDh, 02Fh, 0F9h, 03Eh, 0FEh, 0CDh, 031h, 0F9h, 03Eh, 0C5h, 0CDh, 031h, 0F9h
0301+  2665 F8 CD D6 F8 
0301+  2669 3A 03 FF CD 
0301+  266D 2F F9 3E FE 
0301+  2671 CD 31 F9 3E 
0301+  2675 C5 CD 31 F9 
0302+  2679 C3 E5 F8 C5                      .DB 0C3h, 0E5h, 0F8h, 0C5h, 006h, 050h, 0FEh, 00Ch, 0DAh, 0B7h, 0FAh, 006h, 053h, 0D6h, 00Ch, 05Fh, 078h, 032h, 003h, 0FFh, 02Eh, 001h, 0CDh, 07Dh
0302+  267D 06 50 FE 0C 
0302+  2681 DA B7 FA 06 
0302+  2685 53 D6 0C 5F 
0302+  2689 78 32 03 FF 
0302+  268D 2E 01 CD 7D 
0303+  2691 FA CD D6 F8                      .DB 0FAh, 0CDh, 0D6h, 0F8h, 03Ah, 003h, 0FFh, 0CDh, 02Fh, 0F9h, 07Bh, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CDh, 031h, 0F9h, 0E1h, 026h
0303+  2695 3A 03 FF CD 
0303+  2699 2F F9 7B CB 
0303+  269D 27 CB 27 CB 
0303+  26A1 27 CB 27 CD 
0303+  26A5 31 F9 E1 26 
0304+  26A9 10 7D CD 31                      .DB 010h, 07Dh, 0CDh, 031h, 0F9h, 025h, 020h, 0F9h, 0CDh, 0E5h, 0F8h, 02Eh, 000h, 0CDh, 07Dh, 0FAh, 0C9h, 0FEh, 020h, 0F2h, 0F5h, 0FAh, 021h, 061h
0304+  26AD F9 25 20 F9 
0304+  26B1 CD E5 F8 2E 
0304+  26B5 00 CD 7D FA 
0304+  26B9 C9 FE 20 F2 
0304+  26BD F5 FA 21 61 
0305+  26C1 48 79 C3 0A                      .DB 048h, 079h, 0C3h, 00Ah, 0FBh, 0CBh, 07Fh, 0C2h, 0EEh, 0FAh, 0D6h, 020h, 016h, 000h, 05Fh, 0CBh, 023h, 021h, 078h, 0FBh, 019h, 056h, 023h, 066h
0305+  26C5 FB CB 7F C2 
0305+  26C9 EE FA D6 20 
0305+  26CD 16 00 5F CB 
0305+  26D1 23 21 78 FB 
0305+  26D5 19 56 23 66 
0306+  26D9 6A 79 F5 06                      .DB 06Ah, 079h, 0F5h, 006h, 050h, 0FEh, 00Ch, 0DAh, 016h, 0FBh, 006h, 053h, 0D6h, 00Ch, 05Fh, 0CDh, 0D6h, 0F8h, 078h, 0CDh, 02Fh, 0F9h, 07Bh, 0CBh
0306+  26DD 50 FE 0C DA 
0306+  26E1 16 FB 06 53 
0306+  26E5 D6 0C 5F CD 
0306+  26E9 D6 F8 78 CD 
0306+  26ED 2F F9 7B CB 
0307+  26F1 27 CD 31 F9                      .DB 027h, 0CDh, 031h, 0F9h, 07Dh, 0CDh, 031h, 0F9h, 07Ch, 0CDh, 031h, 0F9h, 0CDh, 0E5h, 0F8h, 0F1h, 03Ch, 0C9h, 0C3h, 00Ah, 0FBh, 0CDh, 06Ah, 0FBh
0307+  26F5 7D CD 31 F9 
0307+  26F9 7C CD 31 F9 
0307+  26FD CD E5 F8 F1 
0307+  2701 3C C9 C3 0A 
0307+  2705 FB CD 6A FB 
0308+  2709 AF E3 CD 40                      .DB 0AFh, 0E3h, 0CDh, 040h, 0FBh, 023h, 0E3h, 0C9h, 05Fh, 07Eh, 0B7h, 0C2h, 047h, 0FBh, 0C9h, 0D6h, 020h, 0F2h, 051h, 0FBh, 021h, 061h, 048h, 018h
0308+  270D FB 23 E3 C9 
0308+  2711 5F 7E B7 C2 
0308+  2715 47 FB C9 D6 
0308+  2719 20 F2 51 FB 
0308+  271D 21 61 48 18 
0309+  2721 10 06 00 4F                      .DB 010h, 006h, 000h, 04Fh, 0E5h, 021h, 078h, 0FBh, 0CBh, 021h, 0CBh, 010h, 009h, 04Eh, 023h, 066h, 069h, 07Bh, 0CDh, 00Ah, 0FBh, 0E1h, 023h, 0C3h
0309+  2725 E5 21 78 FB 
0309+  2729 CB 21 CB 10 
0309+  272D 09 4E 23 66 
0309+  2731 69 7B CD 0A 
0309+  2735 FB E1 23 C3 
0310+  2739 40 FB 3E 00                      .DB 040h, 0FBh, 03Eh, 000h, 021h, 000h, 000h, 0CDh, 00Ah, 0FBh, 0FEh, 018h, 0C2h, 06Fh, 0FBh, 0C9h, 000h, 000h, 000h, 049h, 002h, 002h, 0CEh, 012h
0310+  273D 21 00 00 CD 
0310+  2741 0A FB FE 18 
0310+  2745 C2 6F FB C9 
0310+  2749 00 00 00 49 
0310+  274D 02 02 CE 12 
0311+  2751 ED 12 E4 2D                      .DB 0EDh, 012h, 0E4h, 02Dh, 059h, 00Bh, 000h, 002h, 000h, 00Ch, 000h, 021h, 0C0h, 03Fh, 0C0h, 012h, 000h, 020h, 0C0h, 000h, 000h, 040h, 000h, 024h
0311+  2755 59 0B 00 02 
0311+  2759 00 0C 00 21 
0311+  275D C0 3F C0 12 
0311+  2761 00 20 C0 00 
0311+  2765 00 40 00 24 
0312+  2769 3F 24 06 04                      .DB 03Fh, 024h, 006h, 004h, 0DBh, 000h, 08Fh, 000h, 0E6h, 000h, 069h, 008h, 0FDh, 000h, 001h, 014h, 0FFh, 000h, 0EFh, 000h, 040h, 000h, 000h, 022h
0312+  276D DB 00 8F 00 
0312+  2771 E6 00 69 08 
0312+  2775 FD 00 01 14 
0312+  2779 FF 00 EF 00 
0312+  277D 40 00 00 22 
0313+  2781 40 0C C8 00                      .DB 040h, 00Ch, 0C8h, 000h, 080h, 021h, 083h, 050h, 0BBh, 002h, 0F7h, 000h, 08Fh, 012h, 039h, 000h, 00Fh, 012h, 079h, 000h, 071h, 000h, 0BDh, 000h
0313+  2785 80 21 83 50 
0313+  2789 BB 02 F7 00 
0313+  278D 8F 12 39 00 
0313+  2791 0F 12 79 00 
0313+  2795 71 00 BD 00 
0314+  2799 F6 00 09 12                      .DB 0F6h, 000h, 009h, 012h, 01Eh, 000h, 070h, 00Ch, 038h, 000h, 036h, 005h, 036h, 009h, 03Fh, 000h, 0F3h, 000h, 03Fh, 008h, 0F3h, 008h, 0EDh, 000h
0314+  279D 1E 00 70 0C 
0314+  27A1 38 00 36 05 
0314+  27A5 36 09 3F 00 
0314+  27A9 F3 00 3F 08 
0314+  27AD F3 08 ED 00 
0315+  27B1 01 12 3E 00                      .DB 001h, 012h, 03Eh, 000h, 030h, 024h, 036h, 028h, 000h, 02Dh, 0EEh, 000h, 009h, 024h, 039h, 000h, 000h, 009h, 00Fh, 000h, 000h, 028h, 008h, 000h
0315+  27B5 30 24 36 28 
0315+  27B9 00 2D EE 00 
0315+  27BD 09 24 39 00 
0315+  27C1 00 09 0F 00 
0315+  27C5 00 28 08 00 
0316+  27C9 00 01 8C 20                      .DB 000h, 001h, 08Ch, 020h, 078h, 008h, 0D8h, 000h, 08Eh, 020h, 058h, 020h, 0C0h, 014h, 08Eh, 004h, 070h, 010h, 000h, 010h, 010h, 022h, 000h, 01Eh
0316+  27CD 78 08 D8 00 
0316+  27D1 8E 20 58 20 
0316+  27D5 C0 14 8E 04 
0316+  27D9 70 10 00 10 
0316+  27DD 10 22 00 1E 
0317+  27E1 00 12 D4 10                      .DB 000h, 012h, 0D4h, 010h, 050h, 010h, 0DCh, 000h, 070h, 001h, 086h, 004h, 050h, 000h, 088h, 008h, 078h, 000h, 01Ch, 000h, 010h, 020h, 014h, 028h
0317+  27E5 50 10 DC 00 
0317+  27E9 70 01 86 04 
0317+  27ED 50 00 88 08 
0317+  27F1 78 00 1C 00 
0317+  27F5 10 20 14 28 
0318+  27F9 00 2D 8E 02                      .DB 000h, 02Dh, 08Eh, 002h, 048h, 020h, 049h, 021h, 000h, 012h, 089h, 00Ch, 0C0h, 024h, 000h, 000h, 0CDh, 0AAh, 0F3h, 00Ah, 00Dh, 043h, 068h, 065h
0318+  27FD 48 20 49 21 
0318+  2801 00 12 89 0C 
0318+  2805 C0 24 00 00 
0318+  2809 CD AA F3 0A 
0318+  280D 0D 43 68 65 
0319+  2811 63 6B 20 52                      .DB 063h, 06Bh, 020h, 052h, 054h, 043h, 000h, 0CDh, 0BCh, 0FCh, 0CDh, 0B7h, 0FCh, 0CBh, 07Bh, 0C0h, 0CDh, 0AAh, 0F3h, 00Ah, 00Dh, 052h, 065h, 073h
0319+  2815 54 43 00 CD 
0319+  2819 BC FC CD B7 
0319+  281D FC CB 7B C0 
0319+  2821 CD AA F3 0A 
0319+  2825 0D 52 65 73 
0320+  2829 65 74 20 52                      .DB 065h, 074h, 020h, 052h, 054h, 043h, 000h, 026h, 06Fh, 02Eh, 000h, 0CDh, 01Dh, 0F9h, 0D2h, 0CAh, 0FCh, 021h, 0DDh, 0FCh, 07Eh, 023h, 0FEh, 0FFh
0320+  282D 54 43 00 26 
0320+  2831 6F 2E 00 CD 
0320+  2835 1D F9 D2 CA 
0320+  2839 FC 21 DD FC 
0320+  283D 7E 23 FE FF 
0321+  2841 CA 7B FC CD                      .DB 0CAh, 07Bh, 0FCh, 0CDh, 031h, 0F9h, 0D2h, 0CAh, 0FCh, 018h, 0F1h, 0CDh, 0E5h, 0F8h, 026h, 06Fh, 02Eh, 003h, 0CDh, 0FCh, 0F8h, 0D2h, 0CAh, 0FCh
0321+  2845 31 F9 D2 CA 
0321+  2849 FC 18 F1 CD 
0321+  284D E5 F8 26 6F 
0321+  2851 2E 03 CD FC 
0321+  2855 F8 D2 CA FC 
0322+  2859 5F CD E5 F8                      .DB 05Fh, 0CDh, 0E5h, 0F8h, 0CBh, 0DBh, 0CDh, 0B7h, 0FCh, 0CDh, 01Dh, 0F9h, 0D2h, 0CAh, 0FCh, 07Bh, 0CDh, 031h, 0F9h, 0D2h, 0CAh, 0FCh, 0CDh, 0E5h
0322+  285D CB DB CD B7 
0322+  2861 FC CD 1D F9 
0322+  2865 D2 CA FC 7B 
0322+  2869 CD 31 F9 D2 
0322+  286D CA FC CD E5 
0323+  2871 F8 CD BC FC                      .DB 0F8h, 0CDh, 0BCh, 0FCh, 0CBh, 0FBh, 0CDh, 01Dh, 0F9h, 0D2h, 0CAh, 0FCh, 07Bh, 0CDh, 031h, 0F9h, 0D2h, 0CAh, 0FCh, 0CDh, 0E5h, 0F8h, 0C9h, 006h
0323+  2875 CB FB CD 1D 
0323+  2879 F9 D2 CA FC 
0323+  287D 7B CD 31 F9 
0323+  2881 D2 CA FC CD 
0323+  2885 E5 F8 C9 06 
0324+  2889 00 10 FE C9                      .DB 000h, 010h, 0FEh, 0C9h, 026h, 06Fh, 02Eh, 000h, 0CDh, 0FCh, 0F8h, 0D2h, 0CAh, 0FCh, 05Fh, 0C3h, 0E5h, 0F8h, 0CDh, 0E5h, 0F8h, 0CDh, 0AAh, 0F3h
0324+  288D 26 6F 2E 00 
0324+  2891 CD FC F8 D2 
0324+  2895 CA FC 5F C3 
0324+  2899 E5 F8 CD E5 
0324+  289D F8 CD AA F3 
0325+  28A1 0A 0D 52 54                      .DB 00Ah, 00Dh, 052h, 054h, 043h, 020h, 050h, 061h, 06Eh, 069h, 063h, 000h, 0C9h, 023h, 059h, 008h, 006h, 005h, 011h, 022h, 0FFh, 0F3h, 0E5h, 0C5h
0325+  28A5 43 20 50 61 
0325+  28A9 6E 69 63 00 
0325+  28AD C9 23 59 08 
0325+  28B1 06 05 11 22 
0325+  28B5 FF F3 E5 C5 
0326+  28B9 D5 E6 7F 57                      .DB 0D5h, 0E6h, 07Fh, 057h, 0CBh, 03Ah, 0CBh, 03Ah, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0E6h, 030h, 05Fh, 00Eh, 070h, 03Eh, 001h, 0EDh
0326+  28BD CB 3A CB 3A 
0326+  28C1 CB 27 CB 27 
0326+  28C5 CB 27 CB 27 
0326+  28C9 E6 30 5F 0E 
0326+  28CD 70 3E 01 ED 
0327+  28D1 79 21 55 15                      .DB 079h, 021h, 055h, 015h, 036h, 0AAh, 03Eh, 000h, 0EDh, 079h, 021h, 0AAh, 02Ah, 036h, 055h, 03Eh, 001h, 0EDh, 079h, 021h, 055h, 015h, 036h, 080h
0327+  28D5 36 AA 3E 00 
0327+  28D9 ED 79 21 AA 
0327+  28DD 2A 36 55 3E 
0327+  28E1 01 ED 79 21 
0327+  28E5 55 15 36 80 
0328+  28E9 3E 01 ED 79                      .DB 03Eh, 001h, 0EDh, 079h, 021h, 055h, 015h, 036h, 0AAh, 03Eh, 000h, 0EDh, 079h, 021h, 0AAh, 02Ah, 036h, 055h, 0EDh, 051h, 063h, 036h, 030h, 07Eh
0328+  28ED 21 55 15 36 
0328+  28F1 AA 3E 00 ED 
0328+  28F5 79 21 AA 2A 
0328+  28F9 36 55 ED 51 
0328+  28FD 63 36 30 7E 
0329+  2901 CB 07 30 FB                      .DB 0CBh, 007h, 030h, 0FBh, 0D1h, 0C1h, 0E1h, 0FBh, 0C9h, 0F3h, 05Fh, 07Ch, 0E6h, 00Fh, 067h, 07Ah, 0E6h, 07Fh, 057h, 047h, 07Ah, 0E6h, 003h, 0CBh
0329+  2905 D1 C1 E1 FB 
0329+  2909 C9 F3 5F 7C 
0329+  290D E6 0F 67 7A 
0329+  2911 E6 7F 57 47 
0329+  2915 7A E6 03 CB 
0330+  2919 27 CB 27 CB                      .DB 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0B4h, 067h, 0CBh, 03Ah, 0CBh, 03Ah, 0E5h, 00Eh, 070h, 03Eh, 001h, 0EDh, 079h, 021h, 055h, 015h, 036h
0330+  291D 27 CB 27 B4 
0330+  2921 67 CB 3A CB 
0330+  2925 3A E5 0E 70 
0330+  2929 3E 01 ED 79 
0330+  292D 21 55 15 36 
0331+  2931 AA 3E 00 ED                      .DB 0AAh, 03Eh, 000h, 0EDh, 079h, 021h, 0AAh, 02Ah, 036h, 055h, 03Eh, 001h, 0EDh, 079h, 021h, 055h, 015h, 036h, 0A0h, 0EDh, 051h, 0E1h, 073h, 07Eh
0331+  2935 79 21 AA 2A 
0331+  2939 36 55 3E 01 
0331+  293D ED 79 21 55 
0331+  2941 15 36 A0 ED 
0331+  2945 51 E1 73 7E 
0332+  2949 AB CB 07 30                      .DB 0ABh, 0CBh, 007h, 030h, 0FAh, 07Ch, 0E6h, 00Fh, 067h, 050h, 0FBh, 0C9h, 0DDh, 0E5h, 0E5h, 0DDh, 0E1h, 021h, 000h, 000h, 07Ah, 0CDh, 0E5h, 0FCh
0332+  294D FA 7C E6 0F 
0332+  2951 67 50 FB C9 
0332+  2955 DD E5 E5 DD 
0332+  2959 E1 21 00 00 
0332+  295D 7A CD E5 FC 
0333+  2961 DD 7E 00 C5                      .DB 0DDh, 07Eh, 000h, 0C5h, 0CDh, 039h, 0FDh, 0C1h, 0DDh, 023h, 00Bh, 078h, 0B1h, 028h, 00Eh, 023h, 07Dh, 0A7h, 020h, 0ECh, 07Ch, 0E6h, 00Fh, 067h
0333+  2965 CD 39 FD C1 
0333+  2969 DD 23 0B 78 
0333+  296D B1 28 0E 23 
0333+  2971 7D A7 20 EC 
0333+  2975 7C E6 0F 67 
0334+  2979 20 E6 14 18                      .DB 020h, 0E6h, 014h, 018h, 0DFh, 0DDh, 0E1h, 0C9h, 0FEh, 003h, 0D0h, 04Fh, 006h, 000h, 021h, 039h, 0FFh, 009h, 073h, 0C6h, 070h, 04Fh, 0EDh, 059h
0334+  297D DF DD E1 C9 
0334+  2981 FE 03 D0 4F 
0334+  2985 06 00 21 39 
0334+  2989 FF 09 73 C6 
0334+  298D 70 4F ED 59 
0335+  2991 37 C9 00 00                      .DB 037h, 0C9h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0335+  2995 00 00 00 00 
0335+  2999 00 00 00 00 
0335+  299D 00 00 00 00 
0335+  29A1 00 00 00 00 
0335+  29A5 00 00 00 00 
0336+  29A9 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 0C3h, 0B0h, 0FDh, 0C3h, 0D6h, 0F8h, 0C3h, 0E5h, 0F8h, 0C3h, 031h, 0F9h, 0C3h, 03Eh
0336+  29AD 00 00 00 00 
0336+  29B1 00 00 C3 B0 
0336+  29B5 FD C3 D6 F8 
0336+  29B9 C3 E5 F8 C3 
0336+  29BD 31 F9 C3 3E 
0337+  29C1 F9 C3 1D F9                      .DB 0F9h, 0C3h, 01Dh, 0F9h, 0C3h, 0FCh, 0F8h, 0C3h, 034h, 0F7h, 0C3h, 0C9h, 0F6h
0337+  29C5 C3 FC F8 C3 
0337+  29C9 34 F7 C3 C9 
0337+  29CD F6 
0189   29CE             .END
tasm: Number of errors = 0
